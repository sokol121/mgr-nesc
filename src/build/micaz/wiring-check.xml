<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:EndDeviceAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b10d8773df0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b10d8850e40"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b10d8850e40"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b10d885da00"/></to>
    </wire>
    <wire loc="12:EndDeviceAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d87870d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d8a22400"/></to>
    </wire>
    <wire loc="13:EndDeviceAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8771020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8c22140"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8c22140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:EndDeviceAppC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x2b10d87949f0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x2b10d93119c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x2b10d93119c0"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x2b10da546020"/></to>
    </wire>
    <wire loc="26:EndDeviceAppC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x2b10d87862e0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x2b10d934d810"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x2b10d934d810"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x2b10da545e40"/></to>
    </wire>
    <wire loc="27:EndDeviceAppC.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x2b10d879ab40"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x2b10d943c020"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Intersema" scoped="" ref="0x2b10d943c020"/></from>
      <to><interface-ref name="Intersema" scoped="" ref="0x2b10da81b9d0"/></to>
    </wire>
    <wire loc="28:EndDeviceAppC.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x2b10d8792c50"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x2b10d9699900"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Axis" scoped="" ref="0x2b10d9699900"/></from>
      <to><interface-ref name="X_Axis" scoped="" ref="0x2b10da921c10"/></to>
    </wire>
    <wire loc="29:EndDeviceAppC.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x2b10d878f4f0"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x2b10d9697180"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Axis" scoped="" ref="0x2b10d9697180"/></from>
      <to><interface-ref name="Y_Axis" scoped="" ref="0x2b10da91f460"/></to>
    </wire>
    <wire loc="30:EndDeviceAppC.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x2b10d879d660"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x2b10d94fd310"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VisibleLight" scoped="" ref="0x2b10d94fd310"/></from>
      <to><interface-ref name="VisibleLight" scoped="" ref="0x2b10da91e880"/></to>
    </wire>
    <wire loc="31:EndDeviceAppC.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x2b10d8798060"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x2b10d94fcbc0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="InfraredLight" scoped="" ref="0x2b10d94fcbc0"/></from>
      <to><interface-ref name="InfraredLight" scoped="" ref="0x2b10da91c0a0"/></to>
    </wire>
    <wire loc="38:EndDeviceAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10d87f69f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10da137c30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10da137c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10dac27590"/></to>
    </wire>
    <wire loc="39:EndDeviceAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10d880aaf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10da1368b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10da1368b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10dac26270"/></to>
    </wire>
    <wire loc="40:EndDeviceAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10d88129d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10da137020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10da137020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10dac28850"/></to>
    </wire>
    <wire loc="41:EndDeviceAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b10d8820a10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d9693630"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d9693630"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d96ae880"/></to>
    </wire>
    <wire loc="42:EndDeviceAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d881c130"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10da12b910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10da12b910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d968f990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9fdddd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9f86b70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9f36750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9f53080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9e12800"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9cf1450"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d98547e0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10dab21d70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9aef020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d97b8cc0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da9d0140"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da989620"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da8e7020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da84e8a0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da7ba400"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da744020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da6ec020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da6c8220"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da60c020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8e64020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b10d8cbed30"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b10d8cb9ce0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8c53cc0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8c354b0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8a6a7a0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b10d8a180c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b10d862d460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b10d862d460"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b10d86f0230"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8a18ae0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d885bb10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d885bb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d88642a0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d8a17210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b10d8859d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d991aa70"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b10d8859d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d95ab7a0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b10d8859d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8ded790"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8859020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8a04020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b10d88630e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d89e7910"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b10d8864980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8a4c920"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b10d8864980"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8866a50"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8866a50"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8870580"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b10d8873150"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b10d8859d50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b10d887dad0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b10d8885060"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b10d8885060"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d8908da0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b10d886fcd0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b10d8873150"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b10d88b4cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10d89b1120"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b10d88a84e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d89352b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d89352b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da30ce20"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b10d88af350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d894f8f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d894f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3963f0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b10d88bacb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d89568f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d89568f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3ac3f0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b10d8883670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d891b2b0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d891b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1d69b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b10d88bc670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d89585d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d89585d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3b4e20"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b10d8881cb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d8913a20"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d8913a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1f7a60"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b10d889dcb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d892d020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d892d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da27a0a0"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b10d88a4e40"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d8947760"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d8947760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3026d0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b10d88accb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d894cda0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d894cda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da38de20"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b10d888a800"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d890c8f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d890c8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da164a80"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b10d8891670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d8925020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d8925020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1ed3f0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b10d8899670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d892a5d0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d892a5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2719b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b10d88a0670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d8944c10"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d8944c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2f80a0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b10d88b6670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d896ada0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d896ada0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3a3e20"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b10d88c3b20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10d89ba120"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b10d88b2cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d89515d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d89515d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da31fe20"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d8908da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1dc3f0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b10d888d020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d89225d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d89225d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da25ee20"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b10d88c64e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10d89ad6d0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b10d888b670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d8930d30"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d8930d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da281c90"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b10d88a7800"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d8934440"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d8934440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3080a0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b10d88ae670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d894ea80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d894ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3936d0"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b10d88b8020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d8955a80"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d8955a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3a96d0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b10d8882990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d891a440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d891a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1d3e20"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b10d8893020"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d8912c10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d8912c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1f4e20"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b10d889b020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d892c2b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d892c2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2773f0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b10d88a2060"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d89468f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d89468f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2ff9b0"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b10d88aa020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d894a020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d894a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3890a0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b10d8889b20"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d890aa80"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d890aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1e3e20"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b10d8890990"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d89242b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d89242b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1ea6d0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b10d8898990"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d8929760"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d8929760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da26ee20"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b10d88b5990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d8968020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d8968020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da39f0a0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b10d8895020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d8936020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d8936020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da310c90"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b10d88b0020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d8950760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d8950760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da31b0a0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b10d88bb990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d8957760"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d8957760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3af0a0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b10d88c2e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10d89b66d0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b10d8884350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d891c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d891c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1d96d0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b10d888c350"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d8921760"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d8921760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da25a0a0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b10d88a9350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d8959460"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d8959460"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3b7c90"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b10d889e990"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b10d892fe60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b10d892fe60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da27ee20"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b10d88a5b20"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d89335d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d89335d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3053f0"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b10d88ad990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d894dc10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d894dc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3909b0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b10d88b7350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d8954c10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d8954c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da3a69b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b10d8871580"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d890d6b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d890d6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da167830"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b10d8892350"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b10d8927da0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b10d8927da0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1f00a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b10d889a350"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b10d892b440"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b10d892b440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2746d0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b10d88a1350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b10d8945a80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b10d8945a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da2fce20"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b10d88c4800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10d89a8c90"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b10d889f990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b10d89533f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b10d89533f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da323c90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b10d8897cb0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b10d893d8f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b10d893d8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da26a0a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b10d8888e40"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b10d8909c10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b10d8909c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1df0a0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b10d888fcb0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b10d8923440"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b10d8923440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b10da1e79b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d86ee1d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b10d86f9740"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b10d86fc250"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b10d8712690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b10d8b24a70"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d8a4c920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8a25dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b10d8a21b90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b10d8a4f020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b10d8a4f020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b10d8889b20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b10d8a20e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b10d8a4e380"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b10d8a4e380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b10d888a800"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b10d8a38020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b10d8a4d6a0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b10d8a4d6a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b10d8871580"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a675a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a675a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8bff150"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d8a6a7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8a79760"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b10d8a61020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b10d8c12790"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d8a79760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d8b7bc80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b10d8bf9640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8bab830"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b10d8ba6cd0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b10d8a753a0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b10d8a753a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10d8b7a530"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8c08a60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b10d8a82910"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b10d8a82910"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8b768d0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8b768d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10da4e3b80"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d8b7bc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10da4e7020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b10d8b7a530"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10da4e7830"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10da4e1dd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8b038b0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8b038b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8b10190"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b10da4da190"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8afcc10"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8afcc10"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8b0b570"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10da4d90f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b10d8b19cf0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d8b19cf0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b10d8b286b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b10da4d5450"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b10d8b14130"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b10d8b14130"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b10d8b23230"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b10d8bc1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b10d8c16a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b10d8c38690"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d8c30cd0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x2b10d8c18850"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d8c37da0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b10d8c37da0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d8c45920"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b10d8c30480"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b10d8c467c0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b10d8c467c0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b10d8c59180"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b10d8e41390"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b10d8c2fc80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b10d8c59180"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b10d8c9fad0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b10d8c3a660"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b10d8c59990"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b10d8c59990"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b10d8c9e2b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b10d8c45920"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d8c9f330"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8c58db0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8d30570"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8d30570"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8e3bcf0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8c9b9a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8c58db0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b10d8c9d2f0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b10d8cc33f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b10d8cc33f0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b10d8cbb4b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b10d8c9dad0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b10d8cc3c90"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b10d8cc3c90"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b10d8cbbd90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b10d8c9c2f0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b10d8cc25b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b10d8cc25b0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b10d8cba6d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b10d8cc0dd0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b10d8cb7650"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b10d8cc1b80"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b10d8cb8470"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b10d8cc0540"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b10d8cb8d50"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8cb6b30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8859020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8cd9980"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8714740"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b10d8e470f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8d2a570"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d8d2a570"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d8e02cc0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8e19020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8d4a390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8d4a390"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8d51c20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8d3cdc0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8d70020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b10d8d59bf0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b10d8d6f850"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d8d56c60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b10d8d6a5a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d8d56c60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b10d8d66ba0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d8d56c60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b10d8d61120"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8e0b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d8d4a390"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b10d8e64680"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b10d8e41390"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x2b10d934b020"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x2b10da5456d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x2b10d934d0a0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x2b10da5477a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x2b10da543620"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d8eb9020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x2b10da540020"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8eb82c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x2b10da5412f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d8eb9020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x2b10da53f610"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8eb82c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8eb82c0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8f1cc90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d8eb9020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d8f351d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d8f351d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d90c77e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2b10d8f1a2f0"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x2b10d8f34020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2b10d8f34020"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2b10d8f4fca0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x2b10d8f47480"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x2b10d8f33370"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b10d8f33370"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2b10d8f594d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x2b10d8f46610"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x2b10d8f32730"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x2b10d8f32730"/></from>
      <to><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b10d8f4b560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d8f45240"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d93226a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d93226a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d8f40450"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x2b10d8f3d2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x2b10d8f3eac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b10d8f4b560"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ff3680"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x2b10d8f594d0"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x2b10d889b020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b10d8f4fca0"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x2b10d88aa020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d90c77e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da609850"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x2b10d9037190"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x2b10d8f4fca0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b10d9036380"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x2b10d8f594d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d900f110"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9048c10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9048c10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d90fb020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d9010440"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90facf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90c4a70"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90c4a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da607a70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90fa0e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90c5e40"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90c5e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da608e40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x2b10d9038730"/></from>
      <to><interface-ref name="ChannelHumidityClock" scoped="" ref="0x2b10d90f0db0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityClock" scoped="" ref="0x2b10d90f0db0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x2b10d93065d0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x2b10d9009590"/></from>
      <to><interface-ref name="ChannelHumidityData" scoped="" ref="0x2b10d9125b80"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityData" scoped="" ref="0x2b10d9125b80"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x2b10d93042b0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x2b10d9008410"/></from>
      <to><interface-ref name="ChannelHumidityPower" scoped="" ref="0x2b10d9121580"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelHumidityPower" scoped="" ref="0x2b10d9121580"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x2b10d92fc2b0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9035630"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b10d8f4dd00"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ffa120"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x2b10d8f737b0"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x2b10d8f70d10"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x2b10d8f56c90"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x2b10d8898990"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x2b10d8f75bf0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x2b10d8f6c1a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x2b10d8f74a00"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x2b10d8f6b020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b10d8f51660"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x2b10d88ad990"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x2b10d8f486a0"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x2b10d88a5b20"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x2b10d8f5b020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x2b10d889e990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x2b10d8f587e0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x2b10d889a350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x2b10d8f73e60"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b10d8f6d410"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x2b10d8f49380"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x2b10d88a7800"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x2b10d8f53020"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x2b10d8897cb0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b10d8f4d020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b10d8fdb680"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x2b10d8f72350"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x2b10d8f6b6d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b10d8f50980"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b10d88accb0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x2b10d8f5a330"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x2b10d889dcb0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x2b10d8f57980"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x2b10d8899670"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x2b10d8f75540"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b10d8f6dac0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x2b10d8f74350"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x2b10d8f6c850"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b10d8f52340"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x2b10d88ae670"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b10d8f4c900"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ff7b50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x2b10d8f4a130"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x2b10d88a2060"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x2b10d8f72a00"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x2b10d8f6bd80"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x2b10d8f31ca0"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x2b10d888b670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8fda2f0"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x2b10d8f85b70"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2b10d8f85b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fc7020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ffac20"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x2b10d8f84b70"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2b10d8f84b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fc2020"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ff67a0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b10d8f83b70"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2b10d8f83b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fee020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ff22f0"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x2b10d8f82b70"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2b10d8f82b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fe9020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2b10d8f8cd10"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fd4260"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2b10d8f8bc30"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fcf0a0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2b10d8f88e20"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fbc3f0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2b10d8f86b70"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2b10d8fcb020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fa72f0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2b10d8f7ba00"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fd3100"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2b10d8f7d230"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fce020"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2b10d8f7d9b0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fcbe40"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2b10d8f7c150"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fc7e40"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2b10d8f7c8d0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fc2e40"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2b10d8f7a0b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8feee40"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2b10d8f7a830"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fe9e40"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2b10d8f79020"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d90c56c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da6086c0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da606400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d90c33e0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da606bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da60c630"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da604de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10da65c0f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d90fb020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da65cb70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d90fbaa0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da65b270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90fa0e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da65be80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90facf0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b10da65a680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b10da65ae60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x2b10d90f2400"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x2b10d9308020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x2b10d9308020"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x2b10da689020"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x2b10d90f4710"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x2b10d930a5d0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x2b10d930a5d0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x2b10da68b5d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x2b10d93042b0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x2b10da6862b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x2b10d9122710"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x2b10d92fd5d0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x2b10d92fd5d0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x2b10da7e48f0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x2b10d90f11c0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x2b10d9308c70"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x2b10d9308c70"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x2b10da689c70"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x2b10d90f0020"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x2b10d93078f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x2b10d93078f0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x2b10da6888f0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x2b10d911c020"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x2b10d92f95d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x2b10d92f95d0"/></from>
      <to><interface-ref name="Channel8" scoped="" ref="0x2b10da7e08f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x2b10d92fc2b0"/></from>
      <to><interface-ref name="Channel4" scoped="" ref="0x2b10da7e35d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x2b10d93065d0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x2b10da6875d0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelEepromPower" scoped="" ref="0x2b10d91203e0"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x2b10d92fb020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x2b10d92fb020"/></from>
      <to><interface-ref name="Channel5" scoped="" ref="0x2b10da7e22b0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x2b10d9124a10"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x2b10d92ffb90"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x2b10d92ffb90"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x2b10da7e5020"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x2b10d90f35a0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x2b10d93092b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x2b10d93092b0"/></from>
      <to><interface-ref name="Channel3" scoped="" ref="0x2b10da68a2b0"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9119510"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9119510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da6c6b20"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="Channel2PowerNull" scoped="" ref="0x2b10d9123880"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x2b10d92fe8f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x2b10d92fe8f0"/></from>
      <to><interface-ref name="Channel2" scoped="" ref="0x2b10da7e5c70"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x2b10d90f7900"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x2b10d930b910"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x2b10d930b910"/></from>
      <to><interface-ref name="Channel1" scoped="" ref="0x2b10da68c840"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x2b10d911e3d0"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x2b10d92fbc70"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x2b10d92fbc70"/></from>
      <to><interface-ref name="Channel6" scoped="" ref="0x2b10da7e1020"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x2b10d911d180"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x2b10d92fa8f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x2b10d92fa8f0"/></from>
      <to><interface-ref name="Channel7" scoped="" ref="0x2b10da7e1c70"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d91183a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da6c59e0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9118b20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da6c4270"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d91178b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da6c4e80"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da6c3790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d91151f0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da6c2020"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da6c8830"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da6bf160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x2b10da6875d0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x2b10da68b5d0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x2b10da689c70"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x2b10da6862b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x2b10da68a2b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x2b10da6888f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x2b10da68c840"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x2b10da689020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da685060"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10da708560"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da708560"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da70dc90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da709680"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da709680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da6f4200"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10da685060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da6f1e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da70dc90"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10da6f0ab0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x2b10da6ec670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x2b10da6ece50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91df150"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d921b060"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b10d9216020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91bfa80"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d91bfa80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da742850"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b10d9216df0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9293e30"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x2b10d9211ba0"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x2b10d928fba0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d91b8a10"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9293570"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d91b7840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d91bd020"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d91bd020"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da741e40"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b10d928d2f0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b10d9283500"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x2b10d9283500"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x2b10d927c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b10d928bc50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d92b7870"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b10d92892f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d92b7870"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d91be850"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da7416c0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d91bdc30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da740a70"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da73f400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d91bb570"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da73fbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da744630"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da73cde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x2b10d927ab80"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x2b10d8895020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x2b10d92b5e50"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x2b10d88a84e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel7" scoped="" ref="0x2b10da7e1c70"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel2" scoped="" ref="0x2b10da7e5c70"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel5" scoped="" ref="0x2b10da7e22b0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel8" scoped="" ref="0x2b10da7e08f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel3" scoped="" ref="0x2b10da7e48f0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel6" scoped="" ref="0x2b10da7e1020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel1" scoped="" ref="0x2b10da7e5020"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Channel4" scoped="" ref="0x2b10da7e35d0"/></from>
      <to><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7df710"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7d6d90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7d6d90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da7da400"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da7d6020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da7d6020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7c2540"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7df710"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da7bd260"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da7da400"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10da7bde70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x2b10da7baa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <from><interface-ref name="successTask" scoped="" ref="0x2b10da7b92f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10da81a2b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9385390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x2b10da8190a0"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x2b10d9384270"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x2b10d9384270"/></from>
      <to><interface-ref name="Temp" scoped="" ref="0x2b10d93ecb50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="PressRead" scoped="" ref="0x2b10da818890"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x2b10d9383b00"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Press" scoped="" ref="0x2b10d9383b00"/></from>
      <to><interface-ref name="Press" scoped="" ref="0x2b10d93ea370"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x2b10da815020"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x2b10d93802a0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Cal" scoped="" ref="0x2b10d93802a0"/></from>
      <to><interface-ref name="Cal" scoped="" ref="0x2b10d93e9aa0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9385390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d93d8430"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d93d8430"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d94228d0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x2b10d93e2650"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x2b10d8f4a130"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x2b10d93e17b0"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x2b10d8f49380"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x2b10d93e0930"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x2b10d8f486a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d93e7410"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9448490"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9448490"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="gotInterrupt" scoped="" ref="0x2b10d93dfac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <from><interface-ref name="SPITask" scoped="" ref="0x2b10d93de2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d94228d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da84a210"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d941d7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d93d3020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d941a590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9420a70"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9420a70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da848400"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d941b840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9421e40"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9421e40"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8497a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressurePower" scoped="" ref="0x2b10d93d3c40"/></from>
      <to><interface-ref name="ChannelPressurePower" scoped="" ref="0x2b10d9122710"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureClock" scoped="" ref="0x2b10d93d2a50"/></from>
      <to><interface-ref name="ChannelPressureClock" scoped="" ref="0x2b10d90f35a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDin" scoped="" ref="0x2b10d93d18b0"/></from>
      <to><interface-ref name="ChannelPressureDin" scoped="" ref="0x2b10d90f2400"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="ChannelPressureDout" scoped="" ref="0x2b10d93d0720"/></from>
      <to><interface-ref name="ChannelPressureDout" scoped="" ref="0x2b10d90f11c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9407310"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_CLK" scoped="" ref="0x2b10d940b9c0"/></from>
      <to><interface-ref name="USART1_CLK" scoped="" ref="0x2b10d8f4a130"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SI" scoped="" ref="0x2b10d940acf0"/></from>
      <to><interface-ref name="USART1_RXD" scoped="" ref="0x2b10d8f49380"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="SPI_SO" scoped="" ref="0x2b10d9408020"/></from>
      <to><interface-ref name="USART1_TXD" scoped="" ref="0x2b10d8f486a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d93cf5e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9414b00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9414b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d94216c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da849020"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da848cf0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d941f3e0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da847500"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da84d020"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da8457a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10da8a7b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d941d7a0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da8a6720"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d941b270"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8a6cf0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d941b840"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da8a5930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d941a590"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b10da8a4160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b10da8a4940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLResource" scoped="" ref="0x2b10da91a770"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d948ecb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="VLRead" scoped="" ref="0x2b10da918280"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x2b10d948db90"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="VLight" scoped="" ref="0x2b10d948db90"/></from>
      <to><interface-ref name="VLight" scoped="" ref="0x2b10d949fd60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRResource" scoped="" ref="0x2b10da919480"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d948ecb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <from><interface-ref name="IRRead" scoped="" ref="0x2b10da917a40"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x2b10d948a480"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="IRLight" scoped="" ref="0x2b10d948a480"/></from>
      <to><interface-ref name="IRLight" scoped="" ref="0x2b10d949d580"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d948ecb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d94d4c90"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d94d4c90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d94e1510"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10d949cd10"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9508b70"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9508b70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2b10d9497a50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9509dc0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9509dc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x2b10d94967a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x2b10d9495800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x2b10d9495020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d94e1510"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da8e4850"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d94db5b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d94cf870"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94d9270"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94df8b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94df8b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da8e2a70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94da630"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94e0b20"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94e0b20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8e3e40"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="ChannelLightPower" scoped="" ref="0x2b10d94ce580"/></from>
      <to><interface-ref name="ChannelLightPower" scoped="" ref="0x2b10d9124a10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d94c27c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d94cd4d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d951a3d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d951a3d0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10d94c8ae0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9513d90"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9513d90"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x2b10d94c39b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9513020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9513020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x2b10d94be2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x2b10d94bf2a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d94e03a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da8e36c0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da8e1400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d94de1f0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da8e1bc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da8e7630"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da8dfde0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10da9420f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d94db5b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da942b70"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d94da060"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da941270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94da630"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da941e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94d9270"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b10da940680"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b10da940e60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="X_Resoure" scoped="" ref="0x2b10da9b5b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9553cb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="XRead" scoped="" ref="0x2b10da9b3730"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x2b10d9552ba0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XAxis" scoped="" ref="0x2b10d9552ba0"/></from>
      <to><interface-ref name="XAxis" scoped="" ref="0x2b10d9570910"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="Y_Resoure" scoped="" ref="0x2b10da9b4930"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9553cb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <from><interface-ref name="YRead" scoped="" ref="0x2b10da9b1020"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x2b10d9550480"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YAxis" scoped="" ref="0x2b10d9550480"/></from>
      <to><interface-ref name="YAxis" scoped="" ref="0x2b10d956e180"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9553cb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d95643f0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d95643f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d95a9bf0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d956d7e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d95b76e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d956c450"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d95b64a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d95b64a0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d95f2640"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="XADC" scoped="" ref="0x2b10d956cdc0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x2b10d8f73e60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <from><interface-ref name="YADC" scoped="" ref="0x2b10d956b450"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x2b10d8f75540"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="failTask" scoped="" ref="0x2b10d956baa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <from><interface-ref name="read" scoped="" ref="0x2b10d95692f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d95a9bf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da987e40"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d95c4c90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d95a8020"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c1a10"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c7e80"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c7e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da983060"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c3d70"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c7270"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c7270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da984400"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x2b10d95a8c30"/></from>
      <to><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x2b10d911d180"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccelPower" scoped="" ref="0x2b10d95a7a30"/></from>
      <to><interface-ref name="ChannelAccelPower" scoped="" ref="0x2b10d911e3d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_X" scoped="" ref="0x2b10d95a6880"/></from>
      <to><interface-ref name="ChannelAccel_X" scoped="" ref="0x2b10d90f7900"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="ChannelAccel_Y" scoped="" ref="0x2b10d95a56f0"/></from>
      <to><interface-ref name="ChannelAccel_Y" scoped="" ref="0x2b10d90f4710"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d95a44a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d95c89e0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da985bd0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da983950"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d95c6770"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da982130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da989c30"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da9802f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10da9ec400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d95c4c90"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da9ece80"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d95c37a0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da9eb470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c3d70"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da9ea0e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c1a10"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x2b10da9ea8c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x2b10da9e9100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b10d95ae420"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b10d95f1020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d95b76e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d966be70"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d966be70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10da9cd970"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d9667930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d95b3210"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95e25b0"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95ac830"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95ac830"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95f5b60"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d95efae0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8859020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9663020"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d95abe10"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9663d50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9669400"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9669400"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da9cb020"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b10d963a150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8714740"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d966ac00"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da9cc850"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9667060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da9cbc30"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da9ca590"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d9667930"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10da9cad50"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b10da9d0750"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10da9c7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10daa2ead0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9663020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10daa2c270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d9663780"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10daa2c840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9663d50"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10daa2b590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d96a5990"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d96ae880"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d96d6b80"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10d9690660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10d96f9980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10d96f9980"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10da010020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b10d968d5a0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b10d96f7900"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b10d96f7900"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b10da00edf0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10d968dbb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10d96f4760"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10d96f4760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10da00ca80"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d96c7cd0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e5f550"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e5f550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e51a80"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d96bbb20"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d96e9bb0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d96e9bb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d970db40"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d968f990"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d96f8cb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d96f8cb0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10da00e210"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96cfc70"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96f2810"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96f2810"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d970e990"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10d96f5020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10d96f5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10da00d470"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d96c5dc0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d9e5b660"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d9e5b660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d9e4daf0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d96d6b80"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d9fd1b80"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d96e0d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b10da00a8b0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b10d9720d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b10da00bce0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d96eb970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d97119e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d97119e0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d970db40"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d9fd1080"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d970e990"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b10d9e616e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b10d96de020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b10d970c790"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b10d970c790"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b10da02d020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d96e8a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d970d4c0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d970d4c0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d9e60a70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2b10da0730f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d971dd00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10da009860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b10d97194e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b10d97194e0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b10d9fcaca0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10da008690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9711390"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9711390"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9fc9a50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10da0754d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10d9cd4b90"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10da008ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e56d20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10da006b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e52640"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b10da077610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97bc550"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97bc550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97b40c0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b10da0741f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9706020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9706020"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d97014c0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10da073d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d9fd1b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b10d9fced90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d9e60a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d9e51020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b10da02d020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b10da02b410"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2b10d9fcaca0"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2b10d9fbfa20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d9fd1080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b10da03b2d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b10d971a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9fca5f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d9fca5f0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2b10d9fbf370"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b10d9e616e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b10d9e53c50"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d971dd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9fcccb0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9fcccb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9fc17b0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b10d970f240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9fcb960"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10d9fcb960"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b10d9fc04d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b10d971a6e0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b10d9fc8170"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2b10d9fc8170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2b10d9fbd020"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9fc9a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9fbe840"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b10d9fced90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d9708020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b10d9708020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b10d9705b90"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10d9fc76b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9f3b220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10d9f3b220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9f39a20"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10d9f3a020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10da030350"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10da030350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b10da02dd70"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10da02dd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9fd5cf0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10d9fd5cf0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b10d9fcf860"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10d9fcf860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9708b10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10d9708b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9702790"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fc7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9fd2980"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d9fd2980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fce690"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fce690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9f8eaa0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d9f8eaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9f89e30"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10d9f8b950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9707940"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d9707940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9e149a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b10d9e149a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b10d9e0e080"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9700320"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d977a020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d977a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d97b5390"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b10d9746840"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b10d97784b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2b10d97784b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2b10d97b2020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b10d96feba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d9cb26c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b10d96feba0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d9dae670"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b10d9dae670"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d9e12e80"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b10d9cb26c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b10d9cf1ad0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b10d973c810"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2b10d9cae020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2b10d9cae020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10d9cf03b0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2b10d9744700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9caecb0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9caecb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9cef0c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d973ab00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9730130"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b10d9739b60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b10d9f58a20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b10d9f58a20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b10d9f52a20"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2b10d972c7f0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9f5baa0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10d9f5baa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d973b470"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2b10d97272a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2b10d97282a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2b10d97292b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2b10d97bb830"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2b10d97b1500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2b10d97af3a0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b10d9850220"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2b10d9850220"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10d984bcd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b10d97aa5c0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b10d99cb4c0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b10d99cb4c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b10d8881cb0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b10d97a9830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b10d99c8ca0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b10d99c8ca0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b10d8883670"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b10d97a8b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2b10d99c5340"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2b10d99c5340"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2b10d8884350"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b10d97a6020"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2b10d9a13400"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2b10d9a13400"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b10d99f0440"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b10d97e10d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9c17250"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9c17250"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d97e3120"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2b10d9c78cc0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d9c78cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d97e3830"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c76060"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c76060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d97e2940"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c78020"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c78020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d97e2020"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c766b0"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c766b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d97989b0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9c6ecd0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9c6ecd0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d979f3c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9c6bce0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9c6bce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d979fc70"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9c6a500"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9c6a500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d979a570"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c712f0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c712f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d979ae40"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c71ad0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c71ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d97a4200"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2b10d9c65ce0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d9c65ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d979b830"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9c65500"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9c65500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d97e6720"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9c6e2f0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9c6e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d97e5020"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2b10d9c702f0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d9c702f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d97e58d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9c6f2f0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9c6f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2b10d97e0bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9c549e0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9c549e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2b10d97e1e40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9c94aa0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9c94aa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10d97a06b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10d9cd4b90"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b10d97ad970"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b10d9cc1020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2b10d97d4820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2b10d97d6940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d98547e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d99cf020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d99cf020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d99d7a00"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b10d984bcd0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10daa9e1d0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b10daa9e1d0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10daa91020"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2b10daa8b780"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10daa97c00"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b10daa97c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b10daa80270"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10daa8d3d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d9983d00"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d9983d00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d996a2e0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b10daa7d570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9889e50"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9889e50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d98721e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b10daa788f0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b10d987aad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d98802c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d986d580"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b10d987f9e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b10d986bd00"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d987aad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b10d98677e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d987aad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b10d9863d30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b10d987aad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b10d98b22a0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b10d98ae910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8afcc10"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9918220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9889e50"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b10d99686d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d997eca0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d997eca0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d9977bb0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9973020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b10d9889e50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b10d99ca670"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b10d888c350"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b10d99c9990"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2b10d88accb0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b10d99cc310"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b10d88a1350"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b10d99c6020"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b10d88a4e40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b10d9a0f700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b10d9a0c020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b10d9a12060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2b10d99f67a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2b10d9a0cc40"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b10d987f9e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d99f52f0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2b10d8f83b70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2b10d99ef060"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b10d99cc310"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2b10d99ecbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c78670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9c6cce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b10d9c6b500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9c61ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9c63ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c779c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9c64ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b10d9c68500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c16020"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a58660"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c75370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9c759c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c73160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9c63500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9c70ad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c61500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9c62500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b10d9c68ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9c64500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9c6ace0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9c5f500"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9c16990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b10d9c72ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9c6fad0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9c6c500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c737b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b10d9c72490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c76d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9c66ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b10d9c62ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9c66500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9c77370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b10d9c69ce0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9c69500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9c73e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9c5e610"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a55890"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a54ba0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a53a30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a56510"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a528b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2b10d9a45b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9a9d770"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10d9a9d770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b10d9a50060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9c3a9e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9c3a9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9be73b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b10d9a4dc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b10d9c39760"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b10d9c39760"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b10d9ad2bc0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9a452e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9c39d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9c39d70"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9acd310"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d9a4ea70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2b10d9a41bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9aefb70"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9acd310"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9b20800"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b10d9ad2bc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b10d9b21640"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d9c3a3d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9ad2560"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d9ad2560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9b21020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2b10d9be6170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9acc1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b10d9be6e40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b10d8881cb0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b10d9b26680"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b10d9b21c80"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9acc1d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9b1f530"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b10d9b02c10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9bf2390"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9bf2390"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10dab1e490"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9b01920"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9bf18d0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9bf18d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10dab1d9a0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b10d9b03800"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b10d9b6e3e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b10d9b6e3e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b10d9b68350"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b10d9b00150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8714740"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b10d9b3c190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b10d9b5f680"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8714740"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b10d9b65a40"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b10d8881cb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b10d9b63c90"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b10d8893020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b10d9b61020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b10d8892350"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b10d9b60340"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b10d8891670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d9bf1150"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b10dab1d220"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10dab1b400"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d9bf01f0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10dab1bbc0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10dab20410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b10dab1a7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9caac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c52da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c4bb50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9ca8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b10d9ca8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9c9c670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9c9e670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c50120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9ca0670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d9c4ac60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9cabc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b10d9ca4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9ca7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c53760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c4eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9c4d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c4d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9ca0e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c50dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9cab480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c4a480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c52750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c9de50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9c9ee50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b10d9ca3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9ca1e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9ca6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9c9ce50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9c52100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b10d9c4b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9caa480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9ca7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9ca9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d9c51450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9ca9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c4c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b10d9c4ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d9ca1670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9ca2e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c4e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9ca2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b10d9c9d670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9ca3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9c51aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b10d9ca4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c50770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9ca6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9c4c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9c9a020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9c87c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c92da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c8ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9c84670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b10d9c84e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9cdd670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9c7b670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c8f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9c7c670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d9c89c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9c88c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b10d9c81e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9c83670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c93760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c8eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9c8d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c8d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9c7ce50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c8fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9c88480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c89480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c92750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c7ae50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9c7be50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b10d9c80670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9c7de50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9c82670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9cdde50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9c92100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b10d9c8a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9c87480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9c83e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9c86670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d9c90450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9c86e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c8c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b10d9c8ccc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d9c7d670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9c7fe50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c8e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9c7f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b10d9c7a670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9c80e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9c90aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b10d9c81670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c8f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9c82e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9c8c670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9cdb020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2b10d9d119f0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2b10d9cee060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2b10d9cac190"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2b10d9cee7f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2b10d9ced220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2b10d9850220"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2b10d9ce2d60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2b10d99cc310"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b10d9d45080"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b10d99cb4c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2b10d9d3f370"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2b10d99c6020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2b10d9ce21e0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2b10d9a0f700"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b10d9d3e6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9dd5c30"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9dd5c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9d3d4e0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9dd48f0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9dd48f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9d3a020"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b10d9dd32f0"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9dd32f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9d3a730"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2b10d9dd2cc0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9dd2cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9d3ae60"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9dd1370"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9dd1370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9d385c0"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9dd0d00"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9dd0d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9d3b6b0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9dc9c60"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9dc9c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9d3c020"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9db8020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9db8020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9d3cd80"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9dbe670"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9dbe670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9d38d00"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9dcb480"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9dcb480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9d360c0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9dc7e50"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9dc7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9d36990"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9dc6670"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9dc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9d37930"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2b10d9dcd7b0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9dcd7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9d34530"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9dbbe50"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9dbbe50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9d35380"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b10d9dbd670"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9dbd670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9d35bf0"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b10d9dbde50"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9dbde50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9d2e780"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9e14020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9e14020"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9e0f6d0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9ce94d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9ce84f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b10d9ce6200"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e5f550"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9d40570"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9e57480"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9e57480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9eb48b0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d9d33110"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9dc8c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b10d9dd2020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9dccc70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b10d9dc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9dba670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d9dcbc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b10d9dc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9dc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9dce370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9dceac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9dbee50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9dd0060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9dc9480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9dd3940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b10d9dc1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9dbfe50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9dc4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9dbae50"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b10d9dcc490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9dc8480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9dc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9dc7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d9dd2670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9dcd160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b10d9dcde00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d9dbf670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9dc0e50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9dd06b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9dc0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b10d9dbb670"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9dc1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b10d9dc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9dd19c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9dc4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2b10d9e131a0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2b10d9e0e820"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b10d9df9150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2b10d9e0c020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2b10d99cb4c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2b10d9e0b380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2b10d99ca670"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2b10d9e0a6b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2b10d99c9990"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b10d9e09a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b10d9a12060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b10d9e086e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9ebd520"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b10d9ebd520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9e07530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9f0f840"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9f0f840"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9e06ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9eb7060"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9eb7060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9e063a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2b10d9eb7d00"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2b10d9eb7d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e05330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e041e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b10d9e02d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e5f550"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2b10d9e04b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97bc550"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9dfd3e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9f1c840"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9f1c840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9dfdcb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9f1b060"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9f1b060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9dfeb10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9eb6ae0"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9eb6ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9dfb6d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9f0f060"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9f0f060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9dfc590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2b10d9f12060"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2b10d9f12060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9dfce00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2b10d9f12840"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2b10d9f12840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9dfa020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9f13840"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9f13840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9dfa8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2b10d9ebcc20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2b10d9ebcc20"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2b10d9ded9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b10d9eca020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b10d9983d00"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2b10d9eb23b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b10d9ecdcf0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b10d9eb16e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b10d8a61020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b10d9ec60b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9f1d620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2b10d9ebb940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9f21620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2b10d9f1b840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9ebacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9f13060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2b10d9f20620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9f1e620"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2b10d9f17840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9f1a060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9ebc2b0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9eb76b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9eb6490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9eb99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9f20e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9f21e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9ebb2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9f10840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2b10d9f16060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9f14840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9f19060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2b10d9f22e00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9f1ee00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9f1a840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9f1c060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2b10d9eba020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2b10d9f227b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2b10d9f14060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9f15840"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9f15060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2b10d9f10060"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9f16840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2b10d9eba670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2b10d9f17060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9eb9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9f19840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2b10d9f22160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9f0e930"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b10d9f56920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b10d9f53940"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b10d9f5d9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b10d9f53080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10d9f36e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b10d9f3a020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10d9f35ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9f37690"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10d9f37690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b10d9f348f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b10d9f58a20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9f33170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2b10d9f8b200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2b10d9f86570"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10d9f853f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b10d9f8b950"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9f85a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b10d9fbdd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b10d9fc76b0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fbcb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fc7020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9fbb2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9fba170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b10d9fbab70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b10d9fdc410"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2b10d9ffedb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2b10d9fd0800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10da03d580"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2b10da03d580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10da0281c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d970e990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10dac28850"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10dac1b390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10dac27590"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10d968dbb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10dac26270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b10da134020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b10dac258f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b10dac258f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96cfc70"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10dac1a060"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10da123940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10dac1ac70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b10da123940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b10da14d4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b10da14c400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b10d9690660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10da14b060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10da14a720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10d968dbb0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b10da149480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b10da149c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b10da12a020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b10d968dbb0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b10da12ac30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="EndDeviceC" loc="6:EndDeviceC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.TimerMilliC" loc="44(EndDeviceAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b10d8a81990"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPrintfC" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialPrintfP" loc="36:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
        <short> &#10; </short>
        <long> &#10; @author David Moss&#10; @author Kevin Klues&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega128 timer 2.</short>
        <long>&#10; HPL interface to Atmega128 timer 2.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
        <short>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.</short>
        <long>&#10; Internal componentr of the HPL interface to Atmega128 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TThree" ref="0x2b10d86e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b10d86aeb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TThree" ref="0x2b10d86e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b10d86e6900"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="EndDeviceAppC.SensirionSht11C" loc="45(EndDeviceAppC.SensirionSht11C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP" loc="45(EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715.h">
        <short>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.</short>
        <long>&#10; enum is used instead of #ifndef/#define/#endif becuase these relate&#10; to the hardware being written for and will not change unless the&#10; hardware design is change which would require a new version of the&#10; driver anyway.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="89(HplSensirionSht11C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="52(HplSensirionSht11C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to the mts420CA sensorboard and the adg715 that connects&#10; the communication wires.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC" loc="89(Adg715C.FcfsArbiterC):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Adg715.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Queue" loc="42(Adg715C.FcfsArbiterC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.FcfsArbiterC.Arbiter" loc="52(Adg715C.FcfsArbiterC.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm" loc="41(Adg715C.Comm):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC" loc="42(Adg715C.Comm.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Comm.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Comm.Atm128I2CMasterC" loc="43(Adg715C.Comm.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Adg715C.Power" loc="41(Adg715C.Power):/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAdg715C"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC" loc="42(Adg715C.Power.Adg715ControlC):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Adg715C.Power.Adg715ControlC.Adg715ControlP" loc="47(Adg715C.Power.Adg715ControlC.Adg715ControlP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Adg715ControlP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Adg715C.Power.Atm128I2CMasterC" loc="43(Adg715C.Power.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Intersema5534C" loc="36(EndDeviceAppC.Intersema5534C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <instance number="0">
        <component-ref qname="Intersema5534C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP" loc="34(EndDeviceAppC.Intersema5534C.Intersema5534ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalIntersema5534C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalIntersema5534C.Intersema5534LogicP" loc="50(HalIntersema5534C.Intersema5534LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Intersema5534LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplIntersema5534P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter" loc="89(HplIntersema5534C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Intersema5534.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Queue" loc="42(HplIntersema5534C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Arbiter.Arbiter" loc="52(HplIntersema5534C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC" loc="67(HplIntersema5534C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager" loc="58(HplIntersema5534C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplIntersema5534C.Timer" loc="44(HplIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalIntersema5534C.Timer" loc="44(HalIntersema5534C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Taos2550C" loc="36(EndDeviceAppC.Taos2550C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP" loc="34(EndDeviceAppC.Taos2550C.Taos2550ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalTaos2550C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Taos2550LogicP" loc="36(HalTaos2550C.Taos2550LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Taos2550LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplTaos2550P" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter" loc="89(HplTaos2550C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Taos2550.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Queue" loc="42(HplTaos2550C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Arbiter.Arbiter" loc="52(HplTaos2550C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC" loc="67(HplTaos2550C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager" loc="58(HplTaos2550C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplTaos2550C.Timer" loc="44(HplTaos2550C.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplTaos2550C.Atm128I2CMasterC" loc="43(HplTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalTaos2550C.Atm128I2CMasterC" loc="43(HalTaos2550C.Atm128I2CMasterC):/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Accel202C" loc="36(EndDeviceAppC.Accel202C):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.Accel202C.Accel202ReaderP" loc="34(EndDeviceAppC.Accel202C.Accel202ReaderP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalAccel202C" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalAccel202C.Accel202LogicP" loc="34(HalAccel202C.Accel202LogicP):/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Accel202LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAccel202P" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter" loc="89(HplAccel202C.Arbiter):/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Accel202.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.Arbiter.Queue" loc="42(HplAccel202C.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="6">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.Arbiter.Arbiter" loc="52(HplAccel202C.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC" loc="67(HplAccel202C.SplitControlPowerManagerC):/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAccel202C.SplitControlPowerManagerC.PowerManager" loc="58(HplAccel202C.SplitControlPowerManagerC.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2b10d86e6480"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="7">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EndDeviceAppC.AMSenderC" loc="47(EndDeviceAppC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.AMSenderC.SenderC" loc="47(EndDeviceAppC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="EndDeviceAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(EndDeviceAppC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="EndDeviceAppC.AMReceiverC" loc="43(EndDeviceAppC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b10d88d02f0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b10d88d0660" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b10d88d09d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b10d88d89f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b10d88d8d80" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b10d88d5170" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b10d88d54c0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b10d8962aa0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b10d8962e30" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b10d895f200" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b10d895f550" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b10d8a81990" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b10d8a81990"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b10d8a81ca0" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b10d8a8e580" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b10d8a8e580"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b10d8a8e890" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8b8f160" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8b8f160"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8bbd230" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8bbd230"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b10d8bbd560" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8c13de0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8c13de0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b10d8defe50" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8defe50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b10d8dec200" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b10d8e045a0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b10d8e045a0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b10d8e04d60" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8e04d60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b10d8e3a570" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b10d8e3a570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b10d8e3ad40" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b10d8e3ad40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b10d8e38160" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b10d8e38160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b10d8e38940" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b10d8e38940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b10d8e38d10" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b10d8e37540" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b10d8e37540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11C" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2010-06-15 21:19:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2b10d8fbb3f0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2b10d8fbb780" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2b10d8fbbb10" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b10d8fbbe60" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b10d903e110" loc="89:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b10d9062b00" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x2b10d90765e0" loc="52:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAdg715C" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  This implementation is&#10; specific to how the I2C bus is implemented on the micaz platform.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x2b10d91134b0" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x2b10d9113800" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
          <component-ref qname="HplAdg715C"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlC" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
        <short>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.</short>
        <long>&#10; The adg715 chip has 8 channels that are controlled through the I2C&#10; bus.  This configuration provides 8 Channel interfaces corresponding&#10; to the 8 physical channels on the chip.  The I2C bus needs to be&#10; wired to this configuration through the I2CPacket and Resource&#10; interfaces.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x2b10d913f7f0" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA2High" ref="0x2b10d913fb40" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
          <component-ref qname="Adg715ControlC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Adg715ControlP" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="pinA1High" ref="0x2b10d9158570" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
        <constant name="pinA0High" ref="0x2b10d91588c0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
          <component-ref qname="Adg715ControlP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Intersema5534C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Intersema5534ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Intersema5534LogicP" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Taos2550ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Taos2550LogicP" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202C" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202.h">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Accel202ReaderP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Accel202LogicP" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc" abstract="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b10d964d5c0" loc="89:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2b10d9647e80" loc="42:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b10d991cb40" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b10d991cb40"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b10d990f370" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d990f370"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b10d990f690" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b10d9981d70" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b10d9981d70"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b10d9961580" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b10d9961580"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b10d9961970" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b10d9961970"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b10d99b91b0" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b10d99b91b0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b10d99b9580" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b10d9bd5b00" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b10da0d0660" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b10da0c7360" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b10da0c00d0" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b10da11fc80" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b10da130330" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="AMControl" ref="0x2b10d8820a10" loc="28:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b10d8820a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d8820d90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d8809020"/>
        <function-ref name="start" scoped="" ref="0x2b10d88091b0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8809340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b10d8773df0" loc="11:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b10d8773df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b10d87721c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b10d87f69f0" loc="25:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10d87f69f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d87f6d70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d8796020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d87961b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d8796340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d87964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b10d88129d0" loc="27:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10d88129d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8812e50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d880b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d880b1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d880b340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d880b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x2b10d87862e0" loc="17:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x2b10d87862e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d8792020"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d87924a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Axis" ref="0x2b10d8792c50" loc="18:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x2b10d8792c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d8791860"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d8791ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InfraredLight" ref="0x2b10d8798060" loc="22:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x2b10d8798060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d8798c50"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d8797110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b10d881c130" loc="29:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d881c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d881c4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d87870d0" loc="13:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d87870d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d8787450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d87875e0"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d8787770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d8787900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d8787a90"/>
        <function-ref name="get" scoped="" ref="0x2b10d8787c20"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d8787db0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d87824d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8782020"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d87821b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d8782340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VisibleLight" ref="0x2b10d879d660" loc="21:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x2b10d879d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d879c390"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d879c810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x2b10d87949f0" loc="16:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x2b10d87949f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d8781670"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d8781af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b10d880aaf0" loc="26:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10d880aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10d880ae70"/>
        <function-ref name="source" scoped="" ref="0x2b10d87a5030"/>
        <function-ref name="address" scoped="" ref="0x2b10d87a51c0"/>
        <function-ref name="destination" scoped="" ref="0x2b10d87a5350"/>
        <function-ref name="setSource" scoped="" ref="0x2b10d87a54e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10d87a5670"/>
        <function-ref name="type" scoped="" ref="0x2b10d87a5800"/>
        <function-ref name="setType" scoped="" ref="0x2b10d87a5990"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10d87a5b20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10d87a5cb0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10d87a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Axis" ref="0x2b10d878f4f0" loc="19:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x2b10d878f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d878e110"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d878e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d8771020" loc="12:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8771020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8785630"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8770a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8776920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d87764a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8784020"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8785ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8776020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8771c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8785020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8770110"/>
        <function-ref name="stop" scoped="" ref="0x2b10d87705e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Intersema" ref="0x2b10d879ab40" loc="20:EndDeviceC.nc">
      <component-ref qname="EndDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x2b10d879ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d879d020"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d879d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b10d885c320" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d885c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d885c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b10d8850e40" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b10d8850e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b10d885f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b10d8859d50" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b10d8859d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8858100"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d885bb10" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d885bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d885a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b10d8859020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b10d88593a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b10d8859530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b10d88596c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b10d8859850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b10d88599e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b10d8864980" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b10d8864980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8864d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d88642a0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d88642a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8864620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b10d88630e0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b10d88630e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8863460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b10d8873150" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b10d8873150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d88734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b10d8866a50" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8866a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8866dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b10d886fcd0" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b10d886fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d886e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b10d887dad0" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b10d887dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d887de50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d886f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d886f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d886f340"/>
        <function-ref name="get" scoped="" ref="0x2b10d886f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d886f660"/>
        <function-ref name="set" scoped="" ref="0x2b10d886f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d886f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b10d8870580" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8870580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8870900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b10d88b4cb0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b10d88b4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b3610"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b37a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b3930"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b3ac0"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b3c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b3de0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88c6020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88c61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b10d88a84e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b10d88a84e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a8860"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a89f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a8b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a8d10"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a71b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a7340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b10d88af350" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b10d88af350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88af6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88af860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88af9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88afb80"/>
        <function-ref name="get" scoped="" ref="0x2b10d88afd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88ae020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88ae1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b10d88bacb0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b10d88bacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b9230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b9550"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b9870"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b9a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b10d8883670" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b10d8883670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88839f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8883b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8883d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8882020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88821b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8882340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88824d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8882660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b10d88bc670" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b10d88bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88bc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88bcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88bcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88bb020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88bb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88bb340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88bb4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88bb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b10d8881cb0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b10d8881cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88940a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8894230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88943c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8894550"/>
        <function-ref name="get" scoped="" ref="0x2b10d88946e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8894870"/>
        <function-ref name="set" scoped="" ref="0x2b10d8894a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8894b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b10d889dcb0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b10d889dcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d889c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d889c230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d889c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889c550"/>
        <function-ref name="get" scoped="" ref="0x2b10d889c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d889c870"/>
        <function-ref name="set" scoped="" ref="0x2b10d889ca00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d889cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b10d88a4e40" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b10d88a4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a31e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a3370"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a3500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a3690"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a3820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a39b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a3b40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b10d88accb0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b10d88accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88ab0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88ab230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88ab3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88ab550"/>
        <function-ref name="get" scoped="" ref="0x2b10d88ab6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88ab870"/>
        <function-ref name="set" scoped="" ref="0x2b10d88aba00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b10d888a800" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b10d888a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d888ab80"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888ad10"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8889020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88891b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8889340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88894d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8889660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b10d8891670" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b10d8891670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88919f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8891b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8891d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8890020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88901b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8890340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88904d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8890660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b10d8899670" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b10d8899670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88999f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8899b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8899d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8898020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88981b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8898340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88984d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8898660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b10d88a0670" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b10d88a0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a09f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a0b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a0d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889f020"/>
        <function-ref name="get" scoped="" ref="0x2b10d889f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d889f340"/>
        <function-ref name="set" scoped="" ref="0x2b10d889f4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d889f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b10d88b6670" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b10d88b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b69f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b6b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b6d10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b5020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b5340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b54d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b10d88c3b20" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b10d88c3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88c2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88c21b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88c2340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88c24d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d88c2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88c27f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88c2980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88c2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b10d88b2cb0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b10d88b2cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b1230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b13c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b1550"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b16e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b1870"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b1a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b10d8885060" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b10d8885060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88853e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8885570"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8885700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8885890"/>
        <function-ref name="get" scoped="" ref="0x2b10d8885a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8885bb0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8885d40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8884020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b10d888d020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b10d888d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d888d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888d530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d888d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d888d850"/>
        <function-ref name="get" scoped="" ref="0x2b10d888d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d888db70"/>
        <function-ref name="set" scoped="" ref="0x2b10d888dd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d888c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b10d88c64e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b10d88c64e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88c6860"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88c69f0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88c6b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88c6d10"/>
        <function-ref name="get" scoped="" ref="0x2b10d88c4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88c41b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88c4340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88c44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b10d888b670" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b10d888b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d888b9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888bb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d888bd10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889e020"/>
        <function-ref name="get" scoped="" ref="0x2b10d889e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d889e340"/>
        <function-ref name="set" scoped="" ref="0x2b10d889e4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d889e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b10d88a7800" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b10d88a7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a7b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a7d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a51b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a5340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a54d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a5660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b10d88ae670" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b10d88ae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88ae9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88aeb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88aed10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88ad020"/>
        <function-ref name="get" scoped="" ref="0x2b10d88ad1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88ad340"/>
        <function-ref name="set" scoped="" ref="0x2b10d88ad4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b10d88b8020" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b10d88b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b83a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b8530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b86c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b8850"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b89e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b8b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b8d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b10d8882990" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b10d8882990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8882d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8881020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88811b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8881340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88814d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8881660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88817f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8881980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b10d8893020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b10d8893020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88933a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8893530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88936c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8893850"/>
        <function-ref name="get" scoped="" ref="0x2b10d88939e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8893b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8893d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8892020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b10d889b020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b10d889b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d889b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d889b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d889b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889b850"/>
        <function-ref name="get" scoped="" ref="0x2b10d889b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d889bb70"/>
        <function-ref name="set" scoped="" ref="0x2b10d889bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d889a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b10d88a2060" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b10d88a2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a23e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a2570"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a2700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a2890"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a2a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a2bb0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a2d40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b10d88aa020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b10d88aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88aa3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88aa530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88aa6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88aa850"/>
        <function-ref name="get" scoped="" ref="0x2b10d88aa9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88aab70"/>
        <function-ref name="set" scoped="" ref="0x2b10d88aad00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b10d8889b20" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b10d8889b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8888020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88881b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8888340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88884d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8888660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88887f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8888980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8888b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b10d8890990" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b10d8890990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8890e10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d888f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d888f340"/>
        <function-ref name="get" scoped="" ref="0x2b10d888f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d888f660"/>
        <function-ref name="set" scoped="" ref="0x2b10d888f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d888f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b10d8898990" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b10d8898990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8898d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8897020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8897340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8897660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88977f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8897980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b10d88b5990" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b10d88b5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b5d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b4340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b4660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b47f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b10d8895020" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b10d8895020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88955a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8895730"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88958c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8895a50"/>
        <function-ref name="get" scoped="" ref="0x2b10d8895be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8895d70"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a8020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b10d88b0020" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b10d88b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b03a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b0530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b0850"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b0b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b0d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b10d88bb990" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b10d88bb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88bbd10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88ba020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88ba1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88ba340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88ba4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88ba660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88ba7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88ba980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b10d88c2e40" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b10d88c2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88c11e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88c1370"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88c1500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88c1690"/>
        <function-ref name="get" scoped="" ref="0x2b10d88c1820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88c19b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88c1b40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88c1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b10d8884350" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b10d8884350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88846d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8884860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88849f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8884b80"/>
        <function-ref name="get" scoped="" ref="0x2b10d8884d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8883020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88831b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8883340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b10d888c350" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b10d888c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d888c6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888c860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d888c9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d888cb80"/>
        <function-ref name="get" scoped="" ref="0x2b10d888cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d888b020"/>
        <function-ref name="set" scoped="" ref="0x2b10d888b1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d888b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b10d88a9350" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b10d88a9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a96d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a9860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a99f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a9b80"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a9d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88bc020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88bc1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88bc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b10d889e990" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b10d889e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d889ed10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d889d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d889d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889d340"/>
        <function-ref name="get" scoped="" ref="0x2b10d889d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d889d660"/>
        <function-ref name="set" scoped="" ref="0x2b10d889d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d889d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b10d88a5b20" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b10d88a5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a41b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a4340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a44d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a47f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a4980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b10d88ad990" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b10d88ad990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88add10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88ac020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88ac340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88ac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88ac660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88ac7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88ac980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b10d88b7350" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b10d88b7350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88b76d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b7860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b79f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b7b80"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b7d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b6020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b61b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b10d8871580" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b10d8871580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8871900"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8871a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8871c20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8871db0"/>
        <function-ref name="get" scoped="" ref="0x2b10d888a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d888a1b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d888a340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d888a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b10d8892350" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b10d8892350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88926d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8892860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88929f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8892b80"/>
        <function-ref name="get" scoped="" ref="0x2b10d8892d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8891020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88911b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8891340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b10d889a350" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b10d889a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d889a6d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d889a860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d889a9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d889ab80"/>
        <function-ref name="get" scoped="" ref="0x2b10d889ad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8899020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88991b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8899340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b10d88a1350" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b10d88a1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88a16d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88a1860"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88a19f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88a1b80"/>
        <function-ref name="get" scoped="" ref="0x2b10d88a1d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88a0020"/>
        <function-ref name="set" scoped="" ref="0x2b10d88a01b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88a0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b10d88c4800" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b10d88c4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88c4b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88c4d10"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88c3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88c31b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d88c3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88c34d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d88c3660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88c37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b10d889f990" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b10d889f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d889fd10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d88b2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88b21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d88b2340"/>
        <function-ref name="get" scoped="" ref="0x2b10d88b24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88b2660"/>
        <function-ref name="set" scoped="" ref="0x2b10d88b27f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d88b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b10d8897cb0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b10d8897cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88960a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8896230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d88963c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8896550"/>
        <function-ref name="get" scoped="" ref="0x2b10d88966e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8896870"/>
        <function-ref name="set" scoped="" ref="0x2b10d8896a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8896b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b10d8888e40" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b10d8888e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d88861e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8886370"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8886500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8886690"/>
        <function-ref name="get" scoped="" ref="0x2b10d8886820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d88869b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8886b40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8886cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b10d888fcb0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b10d888fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d888e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d888e230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d888e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d888e550"/>
        <function-ref name="get" scoped="" ref="0x2b10d888e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d888e870"/>
        <function-ref name="set" scoped="" ref="0x2b10d888ea00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d888eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d890aa80" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d890aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d890ae00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8909020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89091b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8909340"/>
        <function-ref name="get" scoped="" ref="0x2b10d89094d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8909660"/>
        <function-ref name="set" scoped="" ref="0x2b10d89097f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8909980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d891c020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d891c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d891c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d891c530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d891c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d891c850"/>
        <function-ref name="get" scoped="" ref="0x2b10d891c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d891cb70"/>
        <function-ref name="set" scoped="" ref="0x2b10d891cd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d891b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d890d6b0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d890d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d890da30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d890dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d890dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d890c020"/>
        <function-ref name="get" scoped="" ref="0x2b10d890c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d890c340"/>
        <function-ref name="set" scoped="" ref="0x2b10d890c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d890c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d8909c10" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d8909c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8908020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89081b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8908340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89084d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8908660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89087f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8908980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8908b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d891b2b0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d891b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d891b630"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d891b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d891b950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d891bae0"/>
        <function-ref name="get" scoped="" ref="0x2b10d891bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d891be00"/>
        <function-ref name="set" scoped="" ref="0x2b10d891a020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d891a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d890c8f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d890c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d890cc70"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d890ce00"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d890a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d890a1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d890a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d890a4d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d890a660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d890a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d8908da0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d8908da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8907180"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8907310"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89074a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8907630"/>
        <function-ref name="get" scoped="" ref="0x2b10d89077c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8907950"/>
        <function-ref name="set" scoped="" ref="0x2b10d8907ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8907c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d891a440" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d891a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d891a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d891a950"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d891aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d891ac70"/>
        <function-ref name="get" scoped="" ref="0x2b10d891ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8919020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89191b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8919340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da167830" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da167830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da167bb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da167d40"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da166020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1661b0"/>
        <function-ref name="get" scoped="" ref="0x2b10da166340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1664d0"/>
        <function-ref name="set" scoped="" ref="0x2b10da166660"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da164a80" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da164a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da164e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1e5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1e5340"/>
        <function-ref name="get" scoped="" ref="0x2b10da1e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1e5660"/>
        <function-ref name="set" scoped="" ref="0x2b10da1e57f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1e5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1e3e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1e3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1e21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1e2350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1e24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1e2670"/>
        <function-ref name="get" scoped="" ref="0x2b10da1e2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1e2990"/>
        <function-ref name="set" scoped="" ref="0x2b10da1e2b20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1e2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1df0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1df0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1df420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1df5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1df740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1df8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da1dfa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1dfbf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da1dfd80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1dc3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1dc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1dc770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1dc900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1dca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1dcc20"/>
        <function-ref name="get" scoped="" ref="0x2b10da1dcdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1db020"/>
        <function-ref name="set" scoped="" ref="0x2b10da1db1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1db340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1d96d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1d96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1d9a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1d9be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1d9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1d8020"/>
        <function-ref name="get" scoped="" ref="0x2b10da1d81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1d8340"/>
        <function-ref name="set" scoped="" ref="0x2b10da1d84d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1d8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1d69b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1d69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1d6d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1d5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1d51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1d5340"/>
        <function-ref name="get" scoped="" ref="0x2b10da1d54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1d5660"/>
        <function-ref name="set" scoped="" ref="0x2b10da1d57f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1d5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1d3e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1d3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1d21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1d2350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1d24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1d2670"/>
        <function-ref name="get" scoped="" ref="0x2b10da1d2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1d2990"/>
        <function-ref name="set" scoped="" ref="0x2b10da1d2b20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1d2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d8927da0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d8927da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8926180"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8926310"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89264a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8926630"/>
        <function-ref name="get" scoped="" ref="0x2b10d89267c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8926950"/>
        <function-ref name="set" scoped="" ref="0x2b10d8926ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8926c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d8923440" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d8923440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89237c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8923950"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8923ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8923c70"/>
        <function-ref name="get" scoped="" ref="0x2b10d8923e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8922020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89221b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8922340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d8913a20" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d8913a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8913da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8912020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8912340"/>
        <function-ref name="get" scoped="" ref="0x2b10d89124d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8912660"/>
        <function-ref name="set" scoped="" ref="0x2b10d89127f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8912980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d8925020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d8925020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89253a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8925530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89256c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8925850"/>
        <function-ref name="get" scoped="" ref="0x2b10d89259e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8925b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8925d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8924020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d89225d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d89225d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8922950"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8922ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8922c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8922e00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8921020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89211b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8921340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89214d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d8912c10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d8912c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8927020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89271b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8927340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89274d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8927660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89277f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8927980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8927b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d89242b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d89242b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8924630"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89247c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8924950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8924ae0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8924c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8924e00"/>
        <function-ref name="set" scoped="" ref="0x2b10d8923020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d8921760" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d8921760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8921ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8921c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8921e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8920020"/>
        <function-ref name="get" scoped="" ref="0x2b10d89201b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8920340"/>
        <function-ref name="set" scoped="" ref="0x2b10d89204d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8920660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1f7a60" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1f7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1f7de0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1f6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1f61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1f6340"/>
        <function-ref name="get" scoped="" ref="0x2b10da1f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1f6660"/>
        <function-ref name="set" scoped="" ref="0x2b10da1f67f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1f6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1f4e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1f4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1f31c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1f3350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1f34e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1f3670"/>
        <function-ref name="get" scoped="" ref="0x2b10da1f3800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1f3990"/>
        <function-ref name="set" scoped="" ref="0x2b10da1f3b20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1f00a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1f00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1f0420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1f05b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1f0740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1f08d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da1f0a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1f0bf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da1f0d80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1ed3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1ed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1ed770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1ed900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1eda90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1edc20"/>
        <function-ref name="get" scoped="" ref="0x2b10da1eddb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1ec020"/>
        <function-ref name="set" scoped="" ref="0x2b10da1ec1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1ea6d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1ea6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1eaa50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1eabe0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1ead70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1e9020"/>
        <function-ref name="get" scoped="" ref="0x2b10da1e91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1e9340"/>
        <function-ref name="set" scoped="" ref="0x2b10da1e94d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1e9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da1e79b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da1e79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da1e7d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da1e6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da1e61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da1e6340"/>
        <function-ref name="get" scoped="" ref="0x2b10da1e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da1e6660"/>
        <function-ref name="set" scoped="" ref="0x2b10da1e67f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da1e6980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da25ee20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da25ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da25d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da25d350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da25d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da25d670"/>
        <function-ref name="get" scoped="" ref="0x2b10da25d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da25d990"/>
        <function-ref name="set" scoped="" ref="0x2b10da25db20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da25dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da25a0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da25a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da25a420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da25a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da25a740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da25a8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da25aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da25abf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da25ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da259020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d892d020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d892d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892d530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892d6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892d850"/>
        <function-ref name="get" scoped="" ref="0x2b10d892d9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d892db70"/>
        <function-ref name="set" scoped="" ref="0x2b10d892dd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d892c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d892a5d0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d892a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892a950"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892aae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892ac70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892ae00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8929020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89291b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8929340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89294d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d8930d30" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d8930d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892f270"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892f590"/>
        <function-ref name="get" scoped="" ref="0x2b10d892f720"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d892f8b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d892fa40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d892fbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d892c2b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d892c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892c630"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892c950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892cae0"/>
        <function-ref name="get" scoped="" ref="0x2b10d892cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d892ce00"/>
        <function-ref name="set" scoped="" ref="0x2b10d892b020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d892b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d8929760" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d8929760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8929ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8929c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8929e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d893d020"/>
        <function-ref name="get" scoped="" ref="0x2b10d893d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d893d340"/>
        <function-ref name="set" scoped="" ref="0x2b10d893d4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d893d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d892fe60" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d892fe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892e210"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892e3a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892e530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892e6c0"/>
        <function-ref name="get" scoped="" ref="0x2b10d892e850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d892e9e0"/>
        <function-ref name="set" scoped="" ref="0x2b10d892eb70"/>
        <function-ref name="clr" scoped="" ref="0x2b10d892ed00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d892b440" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d892b440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d892b7c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d892b950"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d892bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d892bc70"/>
        <function-ref name="get" scoped="" ref="0x2b10d892be00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d892a020"/>
        <function-ref name="set" scoped="" ref="0x2b10d892a1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d892a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d893d8f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d893d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d893dc70"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d893de00"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d893c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d893c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d893c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d893c4d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d893c660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d893c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da281c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da281c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da2800a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da280230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da2803c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da280550"/>
        <function-ref name="get" scoped="" ref="0x2b10da2806e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da280870"/>
        <function-ref name="set" scoped="" ref="0x2b10da280a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10da280b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da27ee20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da27ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da27d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da27d350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da27d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da27d670"/>
        <function-ref name="get" scoped="" ref="0x2b10da27d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da27d990"/>
        <function-ref name="set" scoped="" ref="0x2b10da27db20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da27dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da27a0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da27a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da27a420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da27a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da27a740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da27a8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da27aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da27abf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da27ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da279020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2773f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2773f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da277770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da277900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da277a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da277c20"/>
        <function-ref name="get" scoped="" ref="0x2b10da277db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da276020"/>
        <function-ref name="set" scoped="" ref="0x2b10da2761b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da276340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2746d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2746d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da274a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da274be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da274d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da273020"/>
        <function-ref name="get" scoped="" ref="0x2b10da2731b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da273340"/>
        <function-ref name="set" scoped="" ref="0x2b10da2734d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da273660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2719b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2719b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da271d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da270020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da2701b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da270340"/>
        <function-ref name="get" scoped="" ref="0x2b10da2704d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da270660"/>
        <function-ref name="set" scoped="" ref="0x2b10da2707f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da270980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da26ee20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da26ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da26d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da26d350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da26d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da26d670"/>
        <function-ref name="get" scoped="" ref="0x2b10da26d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da26d990"/>
        <function-ref name="set" scoped="" ref="0x2b10da26db20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da26dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da26a0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da26a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da26a420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da26a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da26a740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da26a8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da26aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da26abf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da26ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d8934440" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d8934440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89347c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8934950"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8934ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8934c70"/>
        <function-ref name="get" scoped="" ref="0x2b10d8934e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8933020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89331b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8933340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d89468f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d89468f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8946c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8946e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8945020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89451b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8945340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89454d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8945660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d8936020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d8936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89363a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8936530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89366c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8936850"/>
        <function-ref name="get" scoped="" ref="0x2b10d89369e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8936b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8936d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8935020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d89335d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d89335d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8933950"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8933ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8933c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8933e00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8947020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89471b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8947340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89474d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d8945a80" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d8945a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8945e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8944020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89441b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8944340"/>
        <function-ref name="get" scoped="" ref="0x2b10d89444d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8944660"/>
        <function-ref name="set" scoped="" ref="0x2b10d89447f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8944980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d89352b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d89352b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8935630"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89357c0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8935950"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8935ae0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8935c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8935e00"/>
        <function-ref name="set" scoped="" ref="0x2b10d8934020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89341b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d8947760" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d8947760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8947ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8947c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8947e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8946020"/>
        <function-ref name="get" scoped="" ref="0x2b10d89461b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8946340"/>
        <function-ref name="set" scoped="" ref="0x2b10d89464d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8946660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d8944c10" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d8944c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8943020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89431b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8943340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89434d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8943660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89437f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8943980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8943b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da310c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da310c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da30e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da30e230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da30e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da30e550"/>
        <function-ref name="get" scoped="" ref="0x2b10da30e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da30e870"/>
        <function-ref name="set" scoped="" ref="0x2b10da30ea00"/>
        <function-ref name="clr" scoped="" ref="0x2b10da30eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da30ce20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da30ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da30b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da30b350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da30b4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da30b670"/>
        <function-ref name="get" scoped="" ref="0x2b10da30b800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da30b990"/>
        <function-ref name="set" scoped="" ref="0x2b10da30bb20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da30bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3080a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da308420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3085b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da308740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3088d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da308a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da308bf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da308d80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da307020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3053f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3053f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da305770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da305900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da305a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da305c20"/>
        <function-ref name="get" scoped="" ref="0x2b10da305db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da304020"/>
        <function-ref name="set" scoped="" ref="0x2b10da3041b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da304340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3026d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3026d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da302a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da302be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da302d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da301020"/>
        <function-ref name="get" scoped="" ref="0x2b10da3011b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da301340"/>
        <function-ref name="set" scoped="" ref="0x2b10da3014d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da301660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2ff9b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2ff9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da2ffd30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da2fe020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da2fe1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da2fe340"/>
        <function-ref name="get" scoped="" ref="0x2b10da2fe4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da2fe660"/>
        <function-ref name="set" scoped="" ref="0x2b10da2fe7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da2fe980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2fce20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2fce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da2fb1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da2fb350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da2fb4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da2fb670"/>
        <function-ref name="get" scoped="" ref="0x2b10da2fb800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da2fb990"/>
        <function-ref name="set" scoped="" ref="0x2b10da2fbb20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da2fbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da2f80a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da2f80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da2f8420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da2f85b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da2f8740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da2f88d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da2f8a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da2f8bf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da2f8d80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da2f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d8950760" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d8950760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8950ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8950c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8950e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894f020"/>
        <function-ref name="get" scoped="" ref="0x2b10d894f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894f340"/>
        <function-ref name="set" scoped="" ref="0x2b10d894f4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d894f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d894dc10" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d894dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d894c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d894c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d894c340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d894c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894c7f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d894c980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d894cb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d89533f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d89533f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8953770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8953900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8953a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8953c20"/>
        <function-ref name="get" scoped="" ref="0x2b10d8953db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8951020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89511b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8951340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d894f8f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d894f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d894fc70"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d894fe00"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d894e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894e1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d894e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894e4d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d894e660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d894e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d894cda0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d894cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d894b180"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d894b310"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d894b4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894b630"/>
        <function-ref name="get" scoped="" ref="0x2b10d894b7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894b950"/>
        <function-ref name="set" scoped="" ref="0x2b10d894bae0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d894bc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d89515d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d89515d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8951950"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8951ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8951c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8951e00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8950020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89501b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8950340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89504d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d894ea80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d894ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d894ee00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d894d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d894d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894d340"/>
        <function-ref name="get" scoped="" ref="0x2b10d894d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894d660"/>
        <function-ref name="set" scoped="" ref="0x2b10d894d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d894d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d894a020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d894a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d894a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d894a530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d894a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d894a850"/>
        <function-ref name="get" scoped="" ref="0x2b10d894a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d894ab70"/>
        <function-ref name="set" scoped="" ref="0x2b10d894ad00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8949020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da323c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da323c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3210a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da321230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3213c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da321550"/>
        <function-ref name="get" scoped="" ref="0x2b10da3216e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da321870"/>
        <function-ref name="set" scoped="" ref="0x2b10da321a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10da321b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da31fe20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da31fe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da31e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da31e350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da31e4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da31e670"/>
        <function-ref name="get" scoped="" ref="0x2b10da31e800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da31e990"/>
        <function-ref name="set" scoped="" ref="0x2b10da31eb20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da31ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da31b0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da31b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da31b420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da31b5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da31b740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da31b8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da31ba60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da31bbf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da31bd80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da398020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3963f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da396770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da396900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da396a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da396c20"/>
        <function-ref name="get" scoped="" ref="0x2b10da396db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da395020"/>
        <function-ref name="set" scoped="" ref="0x2b10da3951b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da395340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3936d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3936d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da393a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da393be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da393d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da392020"/>
        <function-ref name="get" scoped="" ref="0x2b10da3921b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da392340"/>
        <function-ref name="set" scoped="" ref="0x2b10da3924d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da392660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3909b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3909b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da390d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da38f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da38f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da38f340"/>
        <function-ref name="get" scoped="" ref="0x2b10da38f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da38f660"/>
        <function-ref name="set" scoped="" ref="0x2b10da38f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da38f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da38de20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da38de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da38c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da38c350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da38c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da38c670"/>
        <function-ref name="get" scoped="" ref="0x2b10da38c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da38c990"/>
        <function-ref name="set" scoped="" ref="0x2b10da38cb20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da38ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3890a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da389420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3895b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da389740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3898d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da389a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da389bf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da389d80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da388020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b10d8957760" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b10d8957760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8957ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8957c70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8957e00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8956020"/>
        <function-ref name="get" scoped="" ref="0x2b10d89561b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8956340"/>
        <function-ref name="set" scoped="" ref="0x2b10d89564d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8956660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b10d8954c10" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b10d8954c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d896a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d896a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d896a340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d896a4d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d896a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d896a7f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d896a980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d896ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b10d8959460" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b10d8959460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89597e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8959970"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8959b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8959c90"/>
        <function-ref name="get" scoped="" ref="0x2b10d8959e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8958020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89581b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8958340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b10d89568f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b10d89568f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8956c70"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8956e00"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8955020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89551b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8955340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89554d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8955660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89557f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b10d896ada0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b10d896ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8969180"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8969310"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89694a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8969630"/>
        <function-ref name="get" scoped="" ref="0x2b10d89697c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8969950"/>
        <function-ref name="set" scoped="" ref="0x2b10d8969ae0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8969c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b10d89585d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b10d89585d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8958950"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8958ae0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8958c70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8958e00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8957020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89571b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8957340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b10d8955a80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b10d8955a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8955e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8954020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89541b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8954340"/>
        <function-ref name="get" scoped="" ref="0x2b10d89544d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8954660"/>
        <function-ref name="set" scoped="" ref="0x2b10d89547f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8954980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b10d8968020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b10d8968020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89683a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8968530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89686c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8968850"/>
        <function-ref name="get" scoped="" ref="0x2b10d89689e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8968b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8968d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8967020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3b7c90" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3b7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3b60a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3b6230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3b63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3b6550"/>
        <function-ref name="get" scoped="" ref="0x2b10da3b66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3b6870"/>
        <function-ref name="set" scoped="" ref="0x2b10da3b6a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3b6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3b4e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3b4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3b21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3b2350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3b24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3b2670"/>
        <function-ref name="get" scoped="" ref="0x2b10da3b2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3b2990"/>
        <function-ref name="set" scoped="" ref="0x2b10da3b2b20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3af0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3af420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3af5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3af740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3af8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da3afa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3afbf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da3afd80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3ac3f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3ac3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3ac770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3ac900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3aca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3acc20"/>
        <function-ref name="get" scoped="" ref="0x2b10da3acdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3ab020"/>
        <function-ref name="set" scoped="" ref="0x2b10da3ab1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3ab340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3a96d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3a96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3a9a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3a9be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3a9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3a8020"/>
        <function-ref name="get" scoped="" ref="0x2b10da3a81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3a8340"/>
        <function-ref name="set" scoped="" ref="0x2b10da3a84d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3a69b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3a69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3a6d30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3a5020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3a51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3a5340"/>
        <function-ref name="get" scoped="" ref="0x2b10da3a54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3a5660"/>
        <function-ref name="set" scoped="" ref="0x2b10da3a57f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3a5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da3a3e20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da3a3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da3a21c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da3a2350"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da3a24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da3a2670"/>
        <function-ref name="get" scoped="" ref="0x2b10da3a2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da3a2990"/>
        <function-ref name="set" scoped="" ref="0x2b10da3a2b20"/>
        <function-ref name="clr" scoped="" ref="0x2b10da3a2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10da39f0a0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10da39f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10da39f420"/>
        <function-ref name="isInput" scoped="" ref="0x2b10da39f5b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10da39f740"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10da39f8d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da39fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10da39fbf0"/>
        <function-ref name="set" scoped="" ref="0x2b10da39fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b10da39e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d8960460" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d8960460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89607e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8960970"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8960b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8960c90"/>
        <function-ref name="get" scoped="" ref="0x2b10d8960e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8979020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89791b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8979340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d898ea80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d898ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d898ee00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d898d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d898d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d898d340"/>
        <function-ref name="get" scoped="" ref="0x2b10d898d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d898d660"/>
        <function-ref name="set" scoped="" ref="0x2b10d898d7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d898d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89883f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89883f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8988770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8988900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8988a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8988c20"/>
        <function-ref name="get" scoped="" ref="0x2b10d8988db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8987020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89871b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8987340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d8983a80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d8983a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8983e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d899a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d899a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d899a340"/>
        <function-ref name="get" scoped="" ref="0x2b10d899a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d899a660"/>
        <function-ref name="set" scoped="" ref="0x2b10d899a7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d899a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89963f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8996770"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8996900"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8996a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8996c20"/>
        <function-ref name="get" scoped="" ref="0x2b10d8996db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8995020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89951b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8995340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d8991a80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d8991a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8991e00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8990020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89901b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8990340"/>
        <function-ref name="get" scoped="" ref="0x2b10d89904d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8990660"/>
        <function-ref name="set" scoped="" ref="0x2b10d89907f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8990980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89a3460" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89a3460"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89a37e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89a3970"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89a3b00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89a3c90"/>
        <function-ref name="get" scoped="" ref="0x2b10d89a3e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89a2020"/>
        <function-ref name="set" scoped="" ref="0x2b10d89a21b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d899fa80" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d899fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d899fe00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d899e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d899e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d899e340"/>
        <function-ref name="get" scoped="" ref="0x2b10d899e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d899e660"/>
        <function-ref name="set" scoped="" ref="0x2b10d899e7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d899e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89b1120" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89b1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89b14a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89b1630"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89b17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89b1950"/>
        <function-ref name="get" scoped="" ref="0x2b10d89b1ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89b1c70"/>
        <function-ref name="set" scoped="" ref="0x2b10d89b1e00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89ad6d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89ad6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89ada50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89adbe0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89add70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89ab020"/>
        <function-ref name="get" scoped="" ref="0x2b10d89ab1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89ab340"/>
        <function-ref name="set" scoped="" ref="0x2b10d89ab4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89ab660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89a8c90" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89a8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89a70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89a7230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89a73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89a7550"/>
        <function-ref name="get" scoped="" ref="0x2b10d89a76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89a7870"/>
        <function-ref name="set" scoped="" ref="0x2b10d89a7a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89a7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89ba120" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89ba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89ba4a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89ba630"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89ba7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89ba950"/>
        <function-ref name="get" scoped="" ref="0x2b10d89baae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89bac70"/>
        <function-ref name="set" scoped="" ref="0x2b10d89bae00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b10d89b66d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b10d89b66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d89b6a50"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d89b6be0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d89b6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d89b4020"/>
        <function-ref name="get" scoped="" ref="0x2b10d89b41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d89b4340"/>
        <function-ref name="set" scoped="" ref="0x2b10d89b44d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d89b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d89e7910" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d89e7910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b10d8626d40"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b10d8626d40"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d89e7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b10d8a04020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8a04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b10d8a043a0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b10d8a04530"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b10d8a046c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b10d8a04850"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b10d8a049e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b10d8a17210" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b10d8a17210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a17590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b10d885da00" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b10d885da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b10d885dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b10d8a18ae0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b10d8a18ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a18e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b10d8a180c0" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b10d8a180c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a18440"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b10d8a185d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b10d8a18760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b10d8625320" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b10d8625320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d86256a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d8625830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b10d862d460" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b10d862d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d862d7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b10d862d970"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b10d862db00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b10d86ee1d0" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b10d86ee1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d86ee550"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d86ee6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b10d86f9740" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b10d86f9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b10d86f9ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b10d86f0230" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b10d86f0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d86f05b0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b10d86f0740"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b10d86f08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b10d8712690" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b10d8712690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b10d8712a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b10d86fc250" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b10d86fc250"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b10d86fc5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b10d8714740" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8714740"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b10d8714ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b10d884fae0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d884fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d884fe60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d8a26020"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d8a261b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d8a26340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d8a264d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a26660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d8a267f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d8a26e30"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a26980"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d8a26b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d8a26ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b10d8a21b90" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b10d8a21b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a20020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a201b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a20340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a204d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a20660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a207f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a20980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a20b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8a25dc0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8a25dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a22180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b10d8a20e30" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b10d8a20e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a1f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a1f370"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a1f500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a1f690"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a1f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a1f9b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a1fb40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a1fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b10d8a22400" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d8a22400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d8a22780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d8a22910"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d8a22aa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d8a22c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d8a22dc0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a21020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d8a211b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d8a217f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a21340"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d8a214d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d8a21660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b10d8a38020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b10d8a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a383a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a38530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a386c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a38850"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a38b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a38d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b10d8a4f020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b10d8a4f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a4f3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a4f530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a4f6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a4f850"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a4f9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a4fb70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a4fd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b10d8a4e380" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b10d8a4e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a4e700"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a4e890"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a4ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a4ebb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a4ed40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a4d020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a4d1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a4d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b10d8a4c920" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8a4c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a4cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b10d8a4d6a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b10d8a4d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8a4da20"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8a4dbb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8a4dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8a4c020"/>
        <function-ref name="get" scoped="" ref="0x2b10d8a4c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8a4c340"/>
        <function-ref name="set" scoped="" ref="0x2b10d8a4c4d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8a4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8c22140" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="EndDeviceAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8c22140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8c1e630"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8c21b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8c20920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8c204a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8c1d020"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8c1eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8c20020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8c22d30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8c1e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8c21220"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c216f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b10d8a56aa0" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a56aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8a6c020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8a54510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8a6d300"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8a54e10"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8a6c920"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8a6c4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8a54990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8a556b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8a6d910"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8a55b80"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8a54090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b10d8a675a0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b10d8a675a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8a64a80"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8a65090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8a65e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8a65990"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8a624a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8a62020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8a65510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8a66200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8a64470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8a666d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8a66ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b10d8a61020" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b10d8a61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8a61c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8a6a7a0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8a6a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a6ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b10d8a82910" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b10d8a82910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8a87780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8a86150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8a87c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8a86610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8a79760" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8a79760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8a79ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b10d8a753a0" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b10d8a753a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8a89be0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8a74bc0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d8a89590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8a890d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d8a880d0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8a741f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8a74700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10d8b7a530" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10d8b7a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8b77db0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8b78da0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d8b77760"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8b772a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d8b762a0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8b783d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8b788e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8b7bc80" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8b7bc80"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b10d86269c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b10d86269c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8b7a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d8b768d0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8b768d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8b75780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8b93150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8b75c40"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8b93610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b10da4da190" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10da4da190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b10da4da510"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10da4da6a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10da4da830"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10da4da9c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10da4dab50"/>
        <function-ref name="setControl" scoped="" ref="0x2b10da4dace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10da4e7830" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10da4e7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10da4e3090"/>
        <function-ref name="fired" scoped="" ref="0x2b10da4e4090"/>
        <function-ref name="startAt" scoped="" ref="0x2b10da4e4a10"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10da4e4550"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10da4e3550"/>
        <function-ref name="start" scoped="" ref="0x2b10da4e56a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da4e5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da4e7020" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da4e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da4e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10da4e3b80" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10da4e3b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10da4e29b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10da4e1360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10da4e2e70"/>
        <function-ref name="overflow" scoped="" ref="0x2b10da4e1820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b10da4d5450" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b10da4d5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b10da4d57d0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b10da4d5960"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b10da4d5af0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b10da4d5c80"/>
        <function-ref name="getAssr" scoped="" ref="0x2b10da4d5e10"/>
        <function-ref name="setAssr" scoped="" ref="0x2b10da4d4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b10da4d90f0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b10da4d90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10da4d7a50"/>
        <function-ref name="fired" scoped="" ref="0x2b10da4d8730"/>
        <function-ref name="get" scoped="" ref="0x2b10da4d9d20"/>
        <function-ref name="reset" scoped="" ref="0x2b10da4d8bf0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10da4d5020"/>
        <function-ref name="set" scoped="" ref="0x2b10da4d8220"/>
        <function-ref name="start" scoped="" ref="0x2b10da4d70d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da4d7590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10da4e1dd0" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10da4e1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10da4dc350"/>
        <function-ref name="test" scoped="" ref="0x2b10da4dd9a0"/>
        <function-ref name="get" scoped="" ref="0x2b10da4dfac0"/>
        <function-ref name="setScale" scoped="" ref="0x2b10da4dc810"/>
        <function-ref name="getScale" scoped="" ref="0x2b10da4dcd20"/>
        <function-ref name="reset" scoped="" ref="0x2b10da4de9f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10da4de530"/>
        <function-ref name="isOn" scoped="" ref="0x2b10da4dde60"/>
        <function-ref name="set" scoped="" ref="0x2b10da4de020"/>
        <function-ref name="start" scoped="" ref="0x2b10da4dd020"/>
        <function-ref name="stop" scoped="" ref="0x2b10da4dd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d8afcc10" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8afcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b10d8b19020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d8b191b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d8b19340"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d8b194d0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d8b19660"/>
        <function-ref name="setControl" scoped="" ref="0x2b10d8b197f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b10d8b14130" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b10d8b14130"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b10d8b144b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b10d8b14640"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b10d8b147d0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b10d8b14960"/>
        <function-ref name="getAssr" scoped="" ref="0x2b10d8b14af0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b10d8b14c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b10d8b19cf0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b10d8b19cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8b156e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8b17380"/>
        <function-ref name="get" scoped="" ref="0x2b10d8b18980"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8b17840"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8b15ba0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8b18e40"/>
        <function-ref name="start" scoped="" ref="0x2b10d8b17d00"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8b15220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8b038b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8b038b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8afecd0"/>
        <function-ref name="test" scoped="" ref="0x2b10d8afe350"/>
        <function-ref name="get" scoped="" ref="0x2b10d8b00500"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8afc1b0"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8afc6c0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8aff4e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8aff020"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8afe810"/>
        <function-ref name="set" scoped="" ref="0x2b10d8b009c0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8aff9a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8affe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d8b0b570" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8b0b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b10d8b0b8f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d8b0ba80"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d8b0bc10"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d8b0bda0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d8b28020"/>
        <function-ref name="setControl" scoped="" ref="0x2b10d8b281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b10d8b24a70" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b10d8b24a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b10d8b24df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b10d8b23230" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b10d8b23230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2b10d8b235b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2b10d8b23740"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2b10d8b238d0"/>
        <function-ref name="countBusy" scoped="" ref="0x2b10d8b23a60"/>
        <function-ref name="getAssr" scoped="" ref="0x2b10d8b23bf0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b10d8b23d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b10d8b286b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b10d8b286b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8b24110"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8b27da0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8b273d0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8b252a0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8b245d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8b27890"/>
        <function-ref name="start" scoped="" ref="0x2b10d8b25760"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8b25c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8b10190" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8b10190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8b0c4e0"/>
        <function-ref name="test" scoped="" ref="0x2b10d8b0db30"/>
        <function-ref name="get" scoped="" ref="0x2b10d8b10dc0"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8b0c9a0"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8b0b020"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8b0fcb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8b0f7f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8b0c020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8b0f2e0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8b0d1b0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8b0d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b10d8bc1020" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b10d8bc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d8bc13a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d8bc1530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b10d8ba6cd0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10d8ba6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8bc2670"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8bc3550"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d8bc2020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8bc3a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d8bc2b30"/>
        <function-ref name="start" scoped="" ref="0x2b10d8bc4b60"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8bc3090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8bab830" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8bab830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8ba7cf0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8ba8300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8ba70d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8ba8c00"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8ba6660"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8ba61e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8ba8780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8baa480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8ba76e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8baa950"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8baae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b10d8c16a00" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b10d8c16a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d8c16d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d8c14020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b10d8bf9640" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b10d8bf9640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8c17c40"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8bf61e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8c17020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8bf6ae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8c16590"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8c16110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8bf6660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8bf7390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8c17630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8bf7860"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8bf7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8bff150" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8bff150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8bfa700"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8bfdc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8bfca50"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8bfc5b0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8bf9090"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8bfaba0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8bfc110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8bffd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8bfa0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8bfd2a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8bfd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b10d8c12790" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b10d8c12790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8c083f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b10d8c08a60" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8c08a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8c07890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8c28260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8c07d50"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8c28720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d8c38690" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfC.nc">
      <component-ref qname="SerialPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d8c38690"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c38a10"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c38ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b10d8c2fc80" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b10d8c2fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b10d8c340a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x2b10d8c30480" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b10d8c30480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c30800"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c30990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8c354b0" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8c354b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8c35830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x2b10d8c18850" loc="38:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x2b10d8c18850"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c18bd0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c18d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d8c30cd0" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/SerialPrintfP.nc">
      <component-ref qname="SerialPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d8c30cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c350a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c35230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b10d8c467c0" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b10d8c467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c46b40"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c46cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b10d8c3a660" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b10d8c3a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c3a9e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b10d8c3ab70"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c3ad00"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b10d8c46020"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b10d8c461b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b10d8c46340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d8c464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d8c37da0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d8c37da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c47180"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c47310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b10d8c59180" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b10d8c59180"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c59500"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c59690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b10d8c59990" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b10d8c59990"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c59d10"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b10d8c58020"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c581b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b10d8c58340"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b10d8c584d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b10d8c58660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d8c587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b10d8c58db0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8c58db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b10d86aeb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8c57bf0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8c56590"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8c560d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8c56a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d8c45920" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d8c45920"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c45ca0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c45e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b10d8c9fad0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b10d8c9fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c9fe50"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b10d8c9d2f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b10d8c9d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c9d670"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c9d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8c53cc0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8c53cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8c9f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b10d8c9e2b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b10d8c9e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d8c9e630"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b10d8c9e7c0"/>
        <function-ref name="receive" scoped="" ref="0x2b10d8c9e950"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b10d8c9eae0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b10d8c9ec70"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b10d8c9ee00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d8c9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b10d8c9b9a0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8c9b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b10d86aeb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8c9a7e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8c991b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8c9aca0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8c99670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b10d8c9c2f0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b10d8c9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b10d8c9c670"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b10d8c9c800"/>
        <function-ref name="rxDone" scoped="" ref="0x2b10d8c9c990"/>
        <function-ref name="txDone" scoped="" ref="0x2b10d8c9cb20"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b10d8c9ccb0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b10d8c9ce40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b10d8c9b020"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b10d8c9b1b0"/>
        <function-ref name="tx" scoped="" ref="0x2b10d8c9b340"/>
        <function-ref name="rx" scoped="" ref="0x2b10d8c9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d8c9f330" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d8c9f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c9f6b0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c9f840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b10d8c9dad0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b10d8c9dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8c9de50"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8c9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b10d8cc25b0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b10d8cc25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b10d8cc2930"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b10d8cc2ac0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b10d8cc2c50"/>
        <function-ref name="txDone" scoped="" ref="0x2b10d8cc2de0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b10d8cc1020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b10d8cc11b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b10d8cc1340"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b10d8cc14d0"/>
        <function-ref name="tx" scoped="" ref="0x2b10d8cc1660"/>
        <function-ref name="rx" scoped="" ref="0x2b10d8cc17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b10d8cc0dd0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b10d8cc0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b10d8cbf180"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b10d8cbf310"/>
        <function-ref name="rxDone" scoped="" ref="0x2b10d8cbf4a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b10d8cbf630"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b10d8cbf7c0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b10d8cbf950"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b10d8cbfae0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b10d8cbfc70"/>
        <function-ref name="tx" scoped="" ref="0x2b10d8cbfe00"/>
        <function-ref name="rx" scoped="" ref="0x2b10d8cbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b10d8cc3c90" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b10d8cc3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cc20a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cc2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b10d8cc1b80" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b10d8cc1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cc0020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b10d8cc0540" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b10d8cc0540"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cc08c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cc0a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b10d8cc33f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b10d8cc33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cc3770"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cc3900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b10d8cbed30" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b10d8cbed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8cbb0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b10d8cba6d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b10d8cba6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b10d8cbaa50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b10d8cbabe0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b10d8cbad70"/>
        <function-ref name="txDone" scoped="" ref="0x2b10d8cb9020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b10d8cb91b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b10d8cb9340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b10d8cb94d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b10d8cb9660"/>
        <function-ref name="tx" scoped="" ref="0x2b10d8cb97f0"/>
        <function-ref name="rx" scoped="" ref="0x2b10d8cb9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b10d8cb9ce0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b10d8cb9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8cb80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b10d8cb7650" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b10d8cb7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b10d8cb79d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b10d8cb7b60"/>
        <function-ref name="rxDone" scoped="" ref="0x2b10d8cb7cf0"/>
        <function-ref name="txDone" scoped="" ref="0x2b10d8cb7e80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b10d8cb6030"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b10d8cb61c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b10d8cb6350"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b10d8cb64e0"/>
        <function-ref name="tx" scoped="" ref="0x2b10d8cb6670"/>
        <function-ref name="rx" scoped="" ref="0x2b10d8cb6800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b10d8cbbd90" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b10d8cbbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cba180"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cba310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b10d8cb8470" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b10d8cb8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cb87f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cb8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b10d8cb8d50" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b10d8cb8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cb7100"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cb7290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b10d8cb6b30" loc="90:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d8cb6b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b10d8cd9020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b10d8cd91b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b10d8cd9340"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b10d8cd94d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b10d8cd9660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b10d8cd9980" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b10d8cd9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b10d8cd9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b10d8cbb4b0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b10d8cbb4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d8cbb830"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8cbb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d8d30570" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8d30570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b10d86aeb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8d2e3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8d2ed50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8d2e890"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8d2d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d8d2a570" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8d2a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TThree" ref="0x2b10d86e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8d293d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8d29d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8d29890"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8d28260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d8d3cdc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8d3cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d8d44180"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b10d8d44310"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d8d444a0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b10d8d44630"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d8d447c0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d8d44950"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b10d8d44ae0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b10d8d44c70"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b10d8d44e00"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b10d8d43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b10d8d59bf0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b10d8d59bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b10d8d56020"/>
        <function-ref name="test" scoped="" ref="0x2b10d8d58630"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d3b8a0"/>
        <function-ref name="captured" scoped="" ref="0x2b10d8d3a2a0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d3a7b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d58af0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d3bd60"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d3ac70"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d58170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b10d8d56c60" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b10d8d56c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8d53610"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8d542e0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d558e0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d547a0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d53ad0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d55da0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d54c60"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d53150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8d4a390" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8d4a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8d47810"/>
        <function-ref name="test" scoped="" ref="0x2b10d8d48e60"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d49020"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8d47cd0"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8d45260"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d48020"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8d499f0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d47350"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d494e0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d484e0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d489a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d8d70020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d8d70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d8d703a0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b10d8d70530"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d8d706c0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b10d8d70850"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d8d709e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d8d70b70"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b10d8d70d00"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b10d8d6f020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b10d8d6f1b0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b10d8d6f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b10d8d6a5a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b10d8d6a5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8d66020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8d69c10"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d69240"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d67110"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d664e0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d69700"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d675d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d67a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b10d8d6f850" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b10d8d6f850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b10d8d6be60"/>
        <function-ref name="test" scoped="" ref="0x2b10d8d6b4e0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d6e4c0"/>
        <function-ref name="captured" scoped="" ref="0x2b10d8d6c020"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d6c530"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d6b9a0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d6e980"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d6c9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b10d8d66ba0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b10d8d66ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8d62550"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8d631f0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d657f0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d636b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d62a10"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d65cb0"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d63b70"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d62090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b10d8d61120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b10d8d61120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d8d5ea90"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8d60770"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d61d50"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d60c30"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d85020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d60260"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d5e110"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d5e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d8d51c20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer3P.nc">
      <component-ref qname="HplAtm128Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8d51c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8d71020"/>
        <function-ref name="test" scoped="" ref="0x2b10d8d4b5d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8d4e8a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8d714e0"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8d719f0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8d4d760"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8d4d2a0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8d4ba90"/>
        <function-ref name="set" scoped="" ref="0x2b10d8d4ed60"/>
        <function-ref name="start" scoped="" ref="0x2b10d8d4dc20"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8d4b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8ded790" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8ded790"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b10d86269c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b10d86269c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8dedb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d8e0b020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8e0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8e07350"/>
        <function-ref name="test" scoped="" ref="0x2b10d8e089a0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8e0bc50"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8e07810"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8e07d20"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8e0ab20"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8e0a660"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8e08e60"/>
        <function-ref name="set" scoped="" ref="0x2b10d8e0a150"/>
        <function-ref name="start" scoped="" ref="0x2b10d8e08020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8e084e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d8e02cc0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8e02cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TThree" ref="0x2b10d86e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8e1cb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8e1a550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8e1a090"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8e1aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d8e19020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8e19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d8e15350"/>
        <function-ref name="test" scoped="" ref="0x2b10d8e179a0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8e19c50"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d8e15810"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d8e15d20"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8e18b20"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8e18660"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d8e17e60"/>
        <function-ref name="set" scoped="" ref="0x2b10d8e18150"/>
        <function-ref name="start" scoped="" ref="0x2b10d8e17020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8e174e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b10d8e470f0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b10d8e470f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TThree" ref="0x2b10d86e6020"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8e45020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8e459a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8e454e0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8e45e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d8e3bcf0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d8e3bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae7d0"/>
            <typename><typedef-ref name="TMicro" ref="0x2b10d86aeb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d8e49b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d8e48550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d8e48090"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d8e48a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b10d8e41390" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b10d8e41390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b10d8e41710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d8e64020" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d8e64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d8e643a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b10d8e64680" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b10d8e64680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b10d8e64a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x2b10d934b020" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x2b10d934b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2b10d934b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x2b10d934d810" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x2b10d934d810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d934c480"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d934c900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x2b10d934d0a0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x2b10d934d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2b10d934d420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x2b10d93119c0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/SensirionSht11C.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x2b10d93119c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d934e5f0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d934ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x2b10da53f610" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Hum" scoped="" ref="0x2b10da53f610"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2b10da53f990"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2b10da53fb20"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2b10da53fcb0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2b10da53fe40"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2b10da53e020"/>
        <function-ref name="reset" scoped="" ref="0x2b10da53e1b0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2b10da53e340"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2b10da53e4d0"/>
        <function-ref name="resetDone" scoped="" ref="0x2b10da53e660"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2b10da53e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x2b10da5456d0" loc="48:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x2b10da5456d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2b10da545a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x2b10da545e40" loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x2b10da545e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da544a80"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x2b10da5477a0" loc="46:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x2b10da5477a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x2b10da547b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x2b10da543620" loc="51:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x2b10da543620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da5439a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da543b30"/>
        <function-ref name="request" scoped="" ref="0x2b10da543cc0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da543e50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da541020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x2b10da540020" loc="53:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht11Temp" scoped="" ref="0x2b10da540020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2b10da5403a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2b10da540530"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2b10da5406c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2b10da540850"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2b10da5409e0"/>
        <function-ref name="reset" scoped="" ref="0x2b10da540b70"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2b10da540d00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2b10da53f020"/>
        <function-ref name="resetDone" scoped="" ref="0x2b10da53f1b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2b10da53f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x2b10da5412f0" loc="52:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x2b10da5412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da541670"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da541800"/>
        <function-ref name="request" scoped="" ref="0x2b10da541990"/>
        <function-ref name="granted" scoped="" ref="0x2b10da541b20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da541cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x2b10da546020" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="EndDeviceAppC.SensirionSht11C.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x2b10da546020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da546c10"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da5450d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x2b10d8eb82c0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8eb82c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2b10d8eb8640"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2b10d8eb87d0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2b10d8eb8960"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2b10d8eb8af0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2b10d8eb8c80"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8eb8e10"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2b10d8eb7020"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2b10d8eb71b0"/>
        <function-ref name="resetDone" scoped="" ref="0x2b10d8eb7340"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2b10d8eb74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d8eb9020" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d8eb9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d8eb93a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d8eb9530"/>
        <function-ref name="request" scoped="" ref="0x2b10d8eb96c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d8eb9850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d8eb99e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x2b10d8f46610" loc="58:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x2b10d8f46610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f46990"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f46b20"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f46cb0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f46e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x2b10d8f3d2f0" loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x2b10d8f3d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d8f3d670"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d8f3d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x2b10d8f3eac0" loc="103:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalStatusDone" scoped="" ref="0x2b10d8f3eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d8f3ee40"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d8f3d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x2b10d8f47480" loc="57:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x2b10d8f47480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f47800"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f47990"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f47b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f47cb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f47e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f46020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f461b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f46340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x2b10d8f1cc90" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht11" scoped="" ref="0x2b10d8f1cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x2b10d8f1b0a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x2b10d8f1b230"/>
        <function-ref name="measureHumidity" scoped="" ref="0x2b10d8f1b3c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x2b10d8f1b550"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x2b10d8f1b6e0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d8f1b870"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x2b10d8f1ba00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x2b10d8f1bb90"/>
        <function-ref name="resetDone" scoped="" ref="0x2b10d8f1bd20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x2b10d8f1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x2b10d8f1a2f0" loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x2b10d8f1a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f1a670"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f1a800"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f1a990"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f1ab20"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f1acb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f1ae40"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f47020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d8f40450" loc="62:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d8f40450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d8f407d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d8f40960"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d8f40af0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d8f40c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d8f40e10"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f3e020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d8f3e1b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d8f3e7f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f3e4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d8f3e340"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d8f3e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d8f45240" loc="60:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d8f45240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d8f416e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f43c90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d8f42a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d8f425f0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d8f40020"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d8f41b60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d8f42170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d8f45e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d8f410d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d8f43340"/>
        <function-ref name="stop" scoped="" ref="0x2b10d8f43810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x2b10d8f32730" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x2b10d8f32730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f32ab0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f32c40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f32dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x2b10d8f33370" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b10d8f33370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f336f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f33880"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f33a10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f33ba0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f33d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f32020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f321b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f32340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x2b10d8f34020" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x2b10d8f34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f343a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f34530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f346c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f34850"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f349e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f34b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f34d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d8f351d0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d8f351d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d8f35550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d8f356e0"/>
        <function-ref name="request" scoped="" ref="0x2b10d8f35870"/>
        <function-ref name="granted" scoped="" ref="0x2b10d8f35a00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d8f35b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x2b10d8f4dd00" loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x2b10d8f4dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f4c0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f4c230"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f4c3c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f4c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b10d8f737b0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b10d8f737b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f73b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x2b10d8f594d0" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x2b10d8f594d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f59850"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f599e0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f59b70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f59d00"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f581b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f58340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x2b10d8f56c90" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x2b10d8f56c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f540a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f54230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f543c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f54550"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f546e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f54870"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f54a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f54b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b10d8f75bf0" loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b10d8f75bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f74020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b10d8f74a00" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b10d8f74a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b10d8f51660" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b10d8f51660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f519e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f51b70"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f51d00"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f50020"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f50340"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f504d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f50660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x2b10d8f486a0" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x2b10d8f486a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f48a20"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f48bb0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f48d40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f76020"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f761b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f76340"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f764d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f76660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x2b10d8f5b020" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x2b10d8f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f5b3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f5b530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f5b6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f5b850"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f5b9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f5bb70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f5bd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x2b10d8f587e0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x2b10d8f587e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f58b60"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f58cf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f58e80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f57030"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f571c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f57350"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f574e0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f57670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x2b10d8f4b560" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x2b10d8f4b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f4b8e0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f4ba70"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f4bc00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f4bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b10d8f73e60" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b10d8f73e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f75210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x2b10d8f49380" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x2b10d8f49380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f49700"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f49890"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f49a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f49bb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f49d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f48020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f481b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f48340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x2b10d8f53020" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x2b10d8f53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f533a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f53530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f536c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f53850"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f539e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f53b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f53d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x2b10d8f4d020" loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x2b10d8f4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f4d4a0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f4d630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f4d7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f4d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b10d8f72350" loc="51:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b10d8f72350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f726d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b10d8f50980" loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b10d8f50980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f50d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f4f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f4f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f4f340"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f4f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f4f660"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f4f7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f4f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x2b10d8f5a330" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x2b10d8f5a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f5a6b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f5a840"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f5a9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f5ab60"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f5acf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f5ae80"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f59030"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f591c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x2b10d8f57980" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x2b10d8f57980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f57d00"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f56020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f561b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f56340"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f564d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f56660"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f567f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f56980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b10d8f75540" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b10d8f75540"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f758c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b10d8f74350" loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b10d8f74350"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f746d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b10d8f52340" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b10d8f52340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f526c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f52850"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f529e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f52b70"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f52d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f51020"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f511b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x2b10d8f4c900" loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x2b10d8f4c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f4cc80"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f4ce10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8f4b020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8f4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x2b10d8f4a130" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x2b10d8f4a130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f4a4b0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f4a640"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f4a7d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f4a960"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f4aaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f4ac80"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f4ae10"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f49020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b10d8f72a00" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b10d8f72a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f72d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x2b10d8f31ca0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x2b10d8f31ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f5c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f5c230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f5c3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f5c550"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f5c6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f5c870"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f5ca00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f5cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b10d8f4fca0" loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b10d8f4fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d8f4e0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d8f4e230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d8f4e3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d8f4e550"/>
        <function-ref name="get" scoped="" ref="0x2b10d8f4e6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d8f4e870"/>
        <function-ref name="set" scoped="" ref="0x2b10d8f4ea00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d8f4eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x2b10d8f70d10" loc="18:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x2b10d8f70d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6d0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x2b10d8f6c1a0" loc="21:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x2b10d8f6c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x2b10d8f6b020" loc="23:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x2b10d8f6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x2b10d8f6d410" loc="19:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x2b10d8f6d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x2b10d8f6b6d0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x2b10d8f6b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6ba50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x2b10d8f6dac0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x2b10d8f6dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x2b10d8f6c850" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x2b10d8f6c850"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6cbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x2b10d8f6bd80" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x2b10d8f6bd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d8f6a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2b10d8f83b70" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2b10d8f83b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f82020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f821b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f82340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f824d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f82660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2b10d8f8cd10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2b10d8f8cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f8b0e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f8b270"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f8b400"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f8b590"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f8b720"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f8b8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2b10d8f85b70" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2b10d8f85b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f84020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f841b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f84340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f844d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f84660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2b10d8f82b70" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2b10d8f82b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f81020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f811b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f81340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f814d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f81660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f817f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2b10d8f8bc30" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2b10d8f8bc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f86020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f861b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f86340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f864d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f86660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2b10d8f84b70" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2b10d8f84b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f83020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f831b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f83340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f834d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f83660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2b10d8f88e20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2b10d8f88e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f8c1c0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f8c350"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f8c4e0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f8c670"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f8c800"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f8c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2b10d8f86b70" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2b10d8f86b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8f85020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8f851b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8f85340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8f854d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8f85660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8f857f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2b10d8f7a830" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2b10d8f7a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2b10d8f7d230" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2b10d8f7d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2b10d8f7c8d0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2b10d8f7c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7cc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2b10d8f79020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2b10d8f79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f793a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2b10d8f7d9b0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2b10d8f7d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2b10d8f7a0b0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2b10d8f7a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7a430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2b10d8f7ba00" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2b10d8f7ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2b10d8f7c150" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2b10d8f7c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8f7c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fbc3f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fbc3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fbc770"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fbc900"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fbca90"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fbcc20"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fbcdb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fa7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fa72f0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fa72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fa7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fd4260" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fd4260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fd45e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fd4770"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fd4900"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fd4a90"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fd4c20"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fd4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fd3100" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fd3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fd3480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fcf0a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fcf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fcf420"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fcf5b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fcf740"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fcf8d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fcfa60"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fcfbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fce020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fce3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fcb020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fcb3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fcb530"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fcb6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fcb850"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fcb9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fcbb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fcbe40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fcbe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fca1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fc7020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fc73a0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fc7530"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fc76c0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fc7850"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fc79e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fc7b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fc7e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fc7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fc51e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fc2020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fc23a0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fc2530"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fc26c0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fc2850"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fc29e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fc2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fc2e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fc2e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fc11e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fee020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fee3a0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fee530"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fee6c0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fee850"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fee9e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8feeb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8feee40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8feee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fed1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2b10d8fe9020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2b10d8fe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fe93a0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fe9530"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fe96c0"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fe9850"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fe99e0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fe9b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2b10d8fe9e40" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2b10d8fe9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fe81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b10d8fda2f0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8fda2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8fda670"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8fda800"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fda990"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8fdab20"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8fdacb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8fdae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b10d8fdb680" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b10d8fdb680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8fdba00"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8fdbb90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8fdbd20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8fda020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b10d8ffac20" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ffac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8ff9020"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8ff91b0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ff9340"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8ff94d0"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8ff9660"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8ff97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b10d8ffa120" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ffa120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8ffa4a0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ffa630"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8ffa7c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8ffa950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b10d8ff67a0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ff67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8ff6b20"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8ff6cb0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ff6e40"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8ff5020"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8ff51b0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8ff5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b10d8ff7b50" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ff7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8ff6020"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ff61b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8ff6340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8ff64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b10d8ff22f0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d8ff22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d8ff2670"/>
        <function-ref name="fired" scoped="" ref="0x2b10d8ff2800"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ff2990"/>
        <function-ref name="edge" scoped="" ref="0x2b10d8ff2b20"/>
        <function-ref name="enable" scoped="" ref="0x2b10d8ff2cb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d8ff2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b10d8ff3680" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b10d8ff3680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d8ff3a00"/>
        <function-ref name="disable" scoped="" ref="0x2b10d8ff3b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d8ff3d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d8ff2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d9010440" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d9010440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d90107c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d9010950"/>
        <function-ref name="start" scoped="" ref="0x2b10d9010ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9010c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityData" ref="0x2b10d9009590" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x2b10d9009590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9009910"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9009aa0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9009c30"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9009dc0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9008020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b10d9036380" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b10d9036380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9036700"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9036890"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9036a20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9036bb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9036d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9035020"/>
        <function-ref name="set" scoped="" ref="0x2b10d90351b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9035340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x2b10d9037190" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x2b10d9037190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9037510"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d90376a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9037830"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d90379c0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9037b50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9037ce0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9037e70"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9036030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityClock" ref="0x2b10d9038730" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x2b10d9038730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9038ab0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9038c40"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9038dd0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9009020"/>
        <function-ref name="close" scoped="" ref="0x2b10d90091b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelHumidityPower" ref="0x2b10d9008410" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x2b10d9008410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9008790"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9008920"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9008ab0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9008c40"/>
        <function-ref name="close" scoped="" ref="0x2b10d9008dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d9035630" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9035630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d90359b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9035b40"/>
        <function-ref name="request" scoped="" ref="0x2b10d9035cd0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9035e60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9034020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d900f110" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d900f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d900b630"/>
        <function-ref name="fired" scoped="" ref="0x2b10d900eb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d900c920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d900c4a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d900a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d900bab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d900c020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d900fd00"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d900b020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d900e220"/>
        <function-ref name="stop" scoped="" ref="0x2b10d900e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d9048c10" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9048c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d9043110"/>
        <function-ref name="fired" scoped="" ref="0x2b10d90466a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d90454a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d9045020"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d9043a10"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d9043590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d9046b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d9047860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d9045ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d9047d30"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9046220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d90c56c0" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d90c56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d90c5a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d90c5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d90c33e0" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d90c33e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d90c3780"/>
        <function-ref name="configure" scoped="" ref="0x2b10d90c3910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d90c5e40" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90c5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d90c41e0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d90c4370"/>
        <function-ref name="granted" scoped="" ref="0x2b10d90c4500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d90c4690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d90c4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d90c77e0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d90c77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d90c7b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d90c7d10"/>
        <function-ref name="request" scoped="" ref="0x2b10d90c5020"/>
        <function-ref name="granted" scoped="" ref="0x2b10d90c51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d90c5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d90c4a70" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90c4a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d90c4df0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d90c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da60c020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da60c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da60c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da60c630" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da60c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da60c9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da60cb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da60ccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da60ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da6086c0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da6086c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da608a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da608bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da606400" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da606400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da6067a0"/>
        <function-ref name="configure" scoped="" ref="0x2b10da606930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da606bc0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da606bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da605020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da6051b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da605340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da6054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da608e40" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da608e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da6071e0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da607370"/>
        <function-ref name="granted" scoped="" ref="0x2b10da607500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da607690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da607820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da605720" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da605720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da605aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da605c30"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da605dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da604020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da6041b0"/>
        <function-ref name="get" scoped="" ref="0x2b10da604340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da6044d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da604b10"/>
        <function-ref name="set" scoped="" ref="0x2b10da6047f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da604660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da604980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da609850" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da609850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da609bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da609d80"/>
        <function-ref name="request" scoped="" ref="0x2b10da608020"/>
        <function-ref name="granted" scoped="" ref="0x2b10da6081b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da608340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da607a70" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da607a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da607df0"/>
        <function-ref name="userId" scoped="" ref="0x2b10da606020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da604de0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da604de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da603180"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da603310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10d90fb020" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d90fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d90fb3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d90fb530"/>
        <function-ref name="start" scoped="" ref="0x2b10d90fb6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d90fb850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d90fbaa0" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d90fbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d90fbe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d90fa0e0" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d90fa0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d90fa460"/>
        <function-ref name="requested" scoped="" ref="0x2b10d90fa5f0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d90fa780"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d90fa910"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d90faaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d90facf0" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d90facf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d90f90a0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d90f9230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10da65c0f0" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10da65c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10da65c470"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10da65c600"/>
        <function-ref name="start" scoped="" ref="0x2b10da65c790"/>
        <function-ref name="stop" scoped="" ref="0x2b10da65c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10da65cb70" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da65cb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10da65b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b10da65a680" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b10da65a680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da65aa00"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da65ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10da65b270" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da65b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da65b5f0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da65b780"/>
        <function-ref name="granted" scoped="" ref="0x2b10da65b910"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da65baa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da65bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b10da65ae60" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b10da65ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da658210"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da6583a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b10da65d970" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10da65d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10da65dcf0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da65de80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10da65be80" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da65be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da65a220"/>
        <function-ref name="userId" scoped="" ref="0x2b10da65a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDin" ref="0x2b10d90f2400" loc="64:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x2b10d90f2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f2780"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f2910"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f2aa0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f2c30"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_Y" ref="0x2b10d90f4710" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x2b10d90f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f4a90"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f4c20"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f4db0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f3020"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityData" ref="0x2b10d9125b80" loc="80:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityData" scoped="" ref="0x2b10d9125b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9124020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d91241b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9124340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d91244d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9124660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressurePower" ref="0x2b10d9122710" loc="89:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x2b10d9122710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9122a90"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9122c20"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9122db0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9121020"/>
        <function-ref name="close" scoped="" ref="0x2b10d91211b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureDout" ref="0x2b10d90f11c0" loc="68:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x2b10d90f11c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f1540"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f16d0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f1860"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f19f0"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelThermopile_Select_Cnt" ref="0x2b10d90f0020" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelThermopile_Select_Cnt" scoped="" ref="0x2b10d90f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f03a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f0530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f06c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f0850"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost5Channel" ref="0x2b10d911c020" loc="106:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost5Channel" scoped="" ref="0x2b10d911c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d911c3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d911c530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d911c6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d911c850"/>
        <function-ref name="close" scoped="" ref="0x2b10d911c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityPower" ref="0x2b10d9121580" loc="92:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityPower" scoped="" ref="0x2b10d9121580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9121900"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9121a90"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9121c20"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9121db0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9120020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelHumidityClock" ref="0x2b10d90f0db0" loc="77:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelHumidityClock" scoped="" ref="0x2b10d90f0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9125180"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9125310"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d91254a0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9125630"/>
        <function-ref name="close" scoped="" ref="0x2b10d91257c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelEepromPower" ref="0x2b10d91203e0" loc="95:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelEepromPower" scoped="" ref="0x2b10d91203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9120860"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d91209f0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9120b80"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9120d10"/>
        <function-ref name="close" scoped="" ref="0x2b10d911e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelLightPower" ref="0x2b10d9124a10" loc="83:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x2b10d9124a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9124d90"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9123020"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d91231b0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9123340"/>
        <function-ref name="close" scoped="" ref="0x2b10d91234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelPressureClock" ref="0x2b10d90f35a0" loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x2b10d90f35a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f3920"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f3ab0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f3c40"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f3dd0"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d911b280" loc="110:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d911b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d911b600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d911b790"/>
        <function-ref name="request" scoped="" ref="0x2b10d911b920"/>
        <function-ref name="granted" scoped="" ref="0x2b10d911bab0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d911bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2PowerNull" ref="0x2b10d9123880" loc="86:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2PowerNull" scoped="" ref="0x2b10d9123880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9123c00"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9123d90"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9122020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d91221b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9122340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccel_X" ref="0x2b10d90f7900" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x2b10d90f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d90f7c80"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d90f7e10"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d90f4020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d90f41b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d90f4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChannelAccelPower" ref="0x2b10d911e3d0" loc="98:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x2b10d911e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d911e750"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d911e8e0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d911ea70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d911ec00"/>
        <function-ref name="close" scoped="" ref="0x2b10d911ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DcDcBoost33Channel" ref="0x2b10d911d180" loc="101:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715C.nc">
      <component-ref qname="Adg715C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x2b10d911d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d911d500"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d911d690"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d911d820"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d911d9b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d911db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d91183a0" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d91183a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d9118740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d91188d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d91151f0" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d91151f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d9115590"/>
        <function-ref name="configure" scoped="" ref="0x2b10d9115720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d9118b20" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9118b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9117020"/>
        <function-ref name="requested" scoped="" ref="0x2b10d91171b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9117340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91174d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d9117660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9119510" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9119510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91198b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9119a40"/>
        <function-ref name="request" scoped="" ref="0x2b10d9119bd0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9119d60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9118020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d91178b0" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d91178b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d9117c30"/>
        <function-ref name="userId" scoped="" ref="0x2b10d9117dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da6c8220" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da6c8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da6c85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da6c8830" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da6c8830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da6c8bb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da6c8d40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da6c7020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da6c71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da6c59e0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da6c59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da6c5d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da6c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da6c3790" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da6c3790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da6c3b30"/>
        <function-ref name="configure" scoped="" ref="0x2b10da6c3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da6c2020" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da6c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da6c23a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da6c2530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da6c26c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da6c2850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da6c4270" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da6c4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da6c45f0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da6c4780"/>
        <function-ref name="granted" scoped="" ref="0x2b10da6c4910"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da6c4aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da6c4c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da6c2aa0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da6c2aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da6c2e20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da6c0020"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da6c01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da6c0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da6c04d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da6c0660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da6c07f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da6c0e30"/>
        <function-ref name="set" scoped="" ref="0x2b10da6c0b10"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da6c0980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da6c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da6c6b20" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da6c6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da6c5020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da6c51b0"/>
        <function-ref name="request" scoped="" ref="0x2b10da6c5340"/>
        <function-ref name="granted" scoped="" ref="0x2b10da6c54d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da6c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da6c4e80" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da6c4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da6c3220"/>
        <function-ref name="userId" scoped="" ref="0x2b10da6c33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da6bf160" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Adg715C.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da6bf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da6bf4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da6bf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x2b10d93065d0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x2b10d93065d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9306950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9306ae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9306c70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9306e00"/>
        <function-ref name="close" scoped="" ref="0x2b10d9304020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x2b10d930a5d0" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x2b10d930a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d930a950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d930aae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d930ac70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d930ae00"/>
        <function-ref name="close" scoped="" ref="0x2b10d9309020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x2b10d9308c70" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x2b10d9308c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9307020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93071b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9307340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93074d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9307660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x2b10d93042b0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x2b10d93042b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9304630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93047c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9304950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9304ae0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9304c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x2b10d93092b0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x2b10d93092b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9309630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93097c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9309950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9309ae0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9309c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x2b10d93078f0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x2b10d93078f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d9307c70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9307e00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d9306020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93061b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d9306340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x2b10d930b910" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x2b10d930b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d930bc90"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d930be20"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d930a020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d930a1b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d930a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x2b10d9308020" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Comm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x2b10d9308020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d93083a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d9308530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d93086c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d9308850"/>
        <function-ref name="close" scoped="" ref="0x2b10d93089e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x2b10da6875d0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x2b10da6875d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da687950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da687ae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da687c70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da687e00"/>
        <function-ref name="close" scoped="" ref="0x2b10da686020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x2b10da68b5d0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x2b10da68b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da68b950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da68bae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da68bc70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da68be00"/>
        <function-ref name="close" scoped="" ref="0x2b10da68a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x2b10da689c70" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x2b10da689c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da688020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da6881b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da688340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da6884d0"/>
        <function-ref name="close" scoped="" ref="0x2b10da688660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x2b10da6862b0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x2b10da6862b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da686630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da6867c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da686950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da686ae0"/>
        <function-ref name="close" scoped="" ref="0x2b10da686c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x2b10da68a2b0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x2b10da68a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da68a630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da68a7c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da68a950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da68aae0"/>
        <function-ref name="close" scoped="" ref="0x2b10da68ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x2b10da6888f0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x2b10da6888f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da688c70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da688e00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da687020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da6871b0"/>
        <function-ref name="close" scoped="" ref="0x2b10da687340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10da70dc90" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da70dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da70c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da70c230"/>
        <function-ref name="request" scoped="" ref="0x2b10da70c3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da70c550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da70c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10da685060" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da685060"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da685c90"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da70d150"/>
        <function-ref name="write" scoped="" ref="0x2b10da70f8c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da70e510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x2b10da68c840" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x2b10da68c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da68cbc0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da68cd50"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da68b020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da68b1b0"/>
        <function-ref name="close" scoped="" ref="0x2b10da68b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x2b10da689020" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x2b10da689020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da6893a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da689530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da6896c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da689850"/>
        <function-ref name="close" scoped="" ref="0x2b10da6899e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x2b10da6ec670" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x2b10da6ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da6ec9f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da6ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x2b10da6ed270" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x2b10da6ed270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da6ed610"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da6ed7a0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da6ed930"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da6edac0"/>
        <function-ref name="close" scoped="" ref="0x2b10da6edc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da6ec020" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da6ec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da6ec3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da6f0ab0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da6f0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da6f0e30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da6ee020"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da6ee1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da6ee340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da6ee4d0"/>
        <function-ref name="get" scoped="" ref="0x2b10da6ee660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da6ee7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da6eee30"/>
        <function-ref name="set" scoped="" ref="0x2b10da6eeb10"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da6ee980"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da6eeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10da6f1e70" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da6f1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da6f0220"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da6f03b0"/>
        <function-ref name="request" scoped="" ref="0x2b10da6f0540"/>
        <function-ref name="granted" scoped="" ref="0x2b10da6f06d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da6f0860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10da6f4200" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da6f4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da6f4e30"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da6f1330"/>
        <function-ref name="write" scoped="" ref="0x2b10da6f3a70"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da6f26d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x2b10da6ece50" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Comm.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x2b10da6ece50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da6eb210"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da6eb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da709680" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da709680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da709a00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da709b90"/>
        <function-ref name="request" scoped="" ref="0x2b10da709d20"/>
        <function-ref name="granted" scoped="" ref="0x2b10da708020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da7081b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10da708560" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Comm.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da708560"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da7071f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da7046d0"/>
        <function-ref name="write" scoped="" ref="0x2b10da707e00"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da705a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d91c7530" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d91c7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91c78b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d91c7a40"/>
        <function-ref name="request" scoped="" ref="0x2b10d91c7bd0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d91c7d60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10d91c6a20" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d91c6a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d91c56b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d91c3c30"/>
        <function-ref name="write" scoped="" ref="0x2b10d91c4330"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d91c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d91be850" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d91be850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d91bebf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d91bed80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d91bb570" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d91bb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d91bb910"/>
        <function-ref name="configure" scoped="" ref="0x2b10d91bbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d91bd020" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d91bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91bd3a0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d91bd530"/>
        <function-ref name="granted" scoped="" ref="0x2b10d91bd6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91bd850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d91bd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d91bfa80" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d91bfa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91bfe20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d91be020"/>
        <function-ref name="request" scoped="" ref="0x2b10d91be1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d91be340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91be4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d91bdc30" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d91bdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d91bb020"/>
        <function-ref name="userId" scoped="" ref="0x2b10d91bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da744020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da744020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da7443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da744630" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da744630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da7449b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da744b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da744cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da744e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da7416c0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da7416c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da741a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da741bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da73f400" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da73f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da73f7a0"/>
        <function-ref name="configure" scoped="" ref="0x2b10da73f930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da73fbc0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da73fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da73d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da73d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da73d340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da73d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da741e40" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da741e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da7401e0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da740370"/>
        <function-ref name="granted" scoped="" ref="0x2b10da740500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da740690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da740820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da73d720" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da73d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da73daa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da73dc30"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da73ddc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da73c020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da73c1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10da73c340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da73c4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da73cb10"/>
        <function-ref name="set" scoped="" ref="0x2b10da73c7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da73c660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da73c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da742850" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da742850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da742bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da742d80"/>
        <function-ref name="request" scoped="" ref="0x2b10da741020"/>
        <function-ref name="granted" scoped="" ref="0x2b10da7411b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da741340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da740a70" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da740a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da740df0"/>
        <function-ref name="userId" scoped="" ref="0x2b10da73f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da73cde0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da73cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da73b180"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da73b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d91b7270" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d91b7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d91b75f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d91b7840" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d91b7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91b7bc0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d91b7d50"/>
        <function-ref name="granted" scoped="" ref="0x2b10d91e2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91e21b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d91e2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b10d91b8a10" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d91b8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d91b8d90"/>
        <function-ref name="stop" scoped="" ref="0x2b10d91b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d91e2590" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d91e2590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d91e2910"/>
        <function-ref name="userId" scoped="" ref="0x2b10d91e2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x2b10d9211ba0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b10d9211ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b10d9210020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b10d9216df0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b10d9216df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9215ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9211020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9214710"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d92123c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d92102b0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d92102b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d9210630"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d92107c0"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d9210950"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d9210ae0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d9210c70"/>
        <function-ref name="get" scoped="" ref="0x2b10d9210e00"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d920f020"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d920f660"/>
        <function-ref name="set" scoped="" ref="0x2b10d920f340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d920f1b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d920f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d91df150" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d91df150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d91df4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d91df680"/>
        <function-ref name="request" scoped="" ref="0x2b10d91df810"/>
        <function-ref name="granted" scoped="" ref="0x2b10d91df9a0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d91dfb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10d921b060" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d921b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d921bcb0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9217250"/>
        <function-ref name="write" scoped="" ref="0x2b10d921a930"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9218580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b10d9216020" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b10d9216020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d92163c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9216550"/>
        <function-ref name="request" scoped="" ref="0x2b10d92166e0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9216870"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9216a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x2b10d928fba0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x2b10d928fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x2b10d928d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x2b10d928d2f0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b10d928d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b10d928d670"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b10d928d800"/>
        <function-ref name="setStart" scoped="" ref="0x2b10d928d990"/>
        <function-ref name="status" scoped="" ref="0x2b10d928db20"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b10d928dcb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d928de40"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d928c020"/>
        <function-ref name="read" scoped="" ref="0x2b10d928c1b0"/>
        <function-ref name="init" scoped="" ref="0x2b10d928c340"/>
        <function-ref name="enableAck" scoped="" ref="0x2b10d928c4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d928c660"/>
        <function-ref name="hasStart" scoped="" ref="0x2b10d928c7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d928c980"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b10d928cc10"/>
        <function-ref name="enable" scoped="" ref="0x2b10d928cda0"/>
        <function-ref name="write" scoped="" ref="0x2b10d928b020"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b10d928b1b0"/>
        <function-ref name="off" scoped="" ref="0x2b10d928b340"/>
        <function-ref name="setStop" scoped="" ref="0x2b10d928b4d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b10d928b660"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d928b7f0"/>
        <function-ref name="hasStop" scoped="" ref="0x2b10d928b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x2b10d928bc50" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x2b10d928bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d928a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d928a1b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d928a340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d928a4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d928a660"/>
        <function-ref name="get" scoped="" ref="0x2b10d928a7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d928a980"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d9289020"/>
        <function-ref name="set" scoped="" ref="0x2b10d928aca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d928ab10"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d928ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x2b10d92892f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x2b10d92892f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d9289670"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d9289800"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d9289990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d9289b20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d9289cb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9289e40"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d9288020"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d9288660"/>
        <function-ref name="set" scoped="" ref="0x2b10d9288340"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d92881b0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d92884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b10d9293570" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9293570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d92938f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9293a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10d9293e30" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9293e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9292ac0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d928f020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9291710"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d92903c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b10d9283500" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b10d9283500"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b10d9283880"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b10d9283a10"/>
        <function-ref name="setStart" scoped="" ref="0x2b10d9283ba0"/>
        <function-ref name="status" scoped="" ref="0x2b10d9283d30"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b10d9282020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d92821b0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d9282340"/>
        <function-ref name="read" scoped="" ref="0x2b10d92824d0"/>
        <function-ref name="init" scoped="" ref="0x2b10d9282660"/>
        <function-ref name="enableAck" scoped="" ref="0x2b10d92827f0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d9282980"/>
        <function-ref name="hasStart" scoped="" ref="0x2b10d9282b10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d9282ca0"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b10d9281020"/>
        <function-ref name="enable" scoped="" ref="0x2b10d92811b0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9281340"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b10d92814d0"/>
        <function-ref name="off" scoped="" ref="0x2b10d9281660"/>
        <function-ref name="setStop" scoped="" ref="0x2b10d92817f0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b10d9281980"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d9281b10"/>
        <function-ref name="hasStop" scoped="" ref="0x2b10d9281ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x2b10d927c020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x2b10d927c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x2b10d927c3a0"/>
        <function-ref name="sendCommand" scoped="" ref="0x2b10d927c530"/>
        <function-ref name="setStart" scoped="" ref="0x2b10d927c6c0"/>
        <function-ref name="status" scoped="" ref="0x2b10d927c850"/>
        <function-ref name="hasAcks" scoped="" ref="0x2b10d927c9e0"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d927cb70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d927cd00"/>
        <function-ref name="read" scoped="" ref="0x2b10d927b020"/>
        <function-ref name="init" scoped="" ref="0x2b10d927b1b0"/>
        <function-ref name="enableAck" scoped="" ref="0x2b10d927b340"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d927b4d0"/>
        <function-ref name="hasStart" scoped="" ref="0x2b10d927b660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d927b7f0"/>
        <function-ref name="commandComplete" scoped="" ref="0x2b10d927ba80"/>
        <function-ref name="enable" scoped="" ref="0x2b10d927bc10"/>
        <function-ref name="write" scoped="" ref="0x2b10d927bda0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x2b10d927a020"/>
        <function-ref name="off" scoped="" ref="0x2b10d927a1b0"/>
        <function-ref name="setStop" scoped="" ref="0x2b10d927a340"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x2b10d927a4d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d927a660"/>
        <function-ref name="hasStop" scoped="" ref="0x2b10d927a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x2b10d927ab80" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x2b10d927ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d92b5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d92b51b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d92b5340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d92b54d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d92b5660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d92b57f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d92b5980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d92b5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x2b10d92b5e50" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x2b10d92b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d92b4210"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d92b43a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d92b4530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d92b46c0"/>
        <function-ref name="get" scoped="" ref="0x2b10d92b4850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d92b49e0"/>
        <function-ref name="set" scoped="" ref="0x2b10d92b4b70"/>
        <function-ref name="clr" scoped="" ref="0x2b10d92b4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d92b7230" loc="46:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d92b7230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d92b75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b10d92b7870" loc="47:/opt/tinyos-2.1.2/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d92b7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d92b7bf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d92b7d80"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d92b6020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d92b61b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d92b6340"/>
        <function-ref name="get" scoped="" ref="0x2b10d92b64d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d92b6660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d92b6ca0"/>
        <function-ref name="set" scoped="" ref="0x2b10d92b67f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d92b6980"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d92b6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x2b10d92fa8f0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x2b10d92fa8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fac70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fae00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92f9020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92f91b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d92f9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x2b10d92fe8f0" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x2b10d92fe8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fec70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fee00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fd020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fd1b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x2b10d92fb020" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x2b10d92fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fb3a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fb530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fb6c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fb850"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x2b10d92f95d0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x2b10d92f95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92f9950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92f9ae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92f9c70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92f9e00"/>
        <function-ref name="close" scoped="" ref="0x2b10d92f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x2b10d92fd5d0" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x2b10d92fd5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fd950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fdae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fdc70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fde00"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x2b10d92fbc70" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x2b10d92fbc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fa020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fa1b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fa340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fa4d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fa660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x2b10d92ffb90" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x2b10d92ffb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fe020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fe1b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fe340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fe4d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fe660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x2b10d92fc2b0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAdg715C.nc">
      <component-ref qname="Adg715C.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x2b10d92fc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d92fc630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d92fc7c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d92fc950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d92fcae0"/>
        <function-ref name="close" scoped="" ref="0x2b10d92fcc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel7" ref="0x2b10da7e1c70" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel7" scoped="" ref="0x2b10da7e1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e0020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e01b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e0340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e04d0"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel2" ref="0x2b10da7e5c70" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel2" scoped="" ref="0x2b10da7e5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e4020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e41b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e4340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e44d0"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel5" ref="0x2b10da7e22b0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel5" scoped="" ref="0x2b10da7e22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e2630"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e27c0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e2950"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e2ae0"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e2c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel8" ref="0x2b10da7e08f0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel8" scoped="" ref="0x2b10da7e08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e0c70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e0e00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7df020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7df1b0"/>
        <function-ref name="close" scoped="" ref="0x2b10da7df340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel3" ref="0x2b10da7e48f0" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel3" scoped="" ref="0x2b10da7e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e4c70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e4e00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e3020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e31b0"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel6" ref="0x2b10da7e1020" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel6" scoped="" ref="0x2b10da7e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e13a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e1530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e16c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e1850"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e19e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10da7da400" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da7da400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da7da780"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da7da910"/>
        <function-ref name="request" scoped="" ref="0x2b10da7daaa0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da7dac30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da7dadc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10da7df710" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7df710"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da7dd3d0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da7db880"/>
        <function-ref name="write" scoped="" ref="0x2b10da7dc020"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da7dcc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel1" ref="0x2b10da7e5020" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel1" scoped="" ref="0x2b10da7e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e53a0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e5530"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e56c0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e5850"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel4" ref="0x2b10da7e35d0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlC.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel4" scoped="" ref="0x2b10da7e35d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7e3950"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7e3ae0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7e3c70"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7e3e00"/>
        <function-ref name="close" scoped="" ref="0x2b10da7e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x2b10da7baa50" loc="74:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x2b10da7baa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da7badd0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da7b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Channel" ref="0x2b10da7bb720" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Channel" scoped="" ref="0x2b10da7bb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10da7bbac0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10da7bbc50"/>
        <function-ref name="openDone" scoped="" ref="0x2b10da7bbde0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10da7ba020"/>
        <function-ref name="close" scoped="" ref="0x2b10da7ba1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da7ba400" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da7ba400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da7ba780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da7bde70" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da7bde70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da7bc220"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da7bc3b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da7bc540"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da7bc6d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da7bc860"/>
        <function-ref name="get" scoped="" ref="0x2b10da7bc9f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da7bcb80"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da7bb340"/>
        <function-ref name="set" scoped="" ref="0x2b10da7bb020"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da7bcd10"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da7bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10da7bd260" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da7bd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da7bd5e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da7bd770"/>
        <function-ref name="request" scoped="" ref="0x2b10da7bd900"/>
        <function-ref name="granted" scoped="" ref="0x2b10da7bda90"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da7bdc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10da7c2540" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7c2540"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da7c11b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da7bf6d0"/>
        <function-ref name="write" scoped="" ref="0x2b10da7c1dc0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da7c0a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="successTask" ref="0x2b10da7b92f0" loc="73:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Adg715ControlP.nc">
      <component-ref qname="Adg715C.Power.Adg715ControlC.Adg715ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="successTask" scoped="" ref="0x2b10da7b92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da7b9670"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da7b9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da7d6020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da7d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da7d63a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da7d6530"/>
        <function-ref name="request" scoped="" ref="0x2b10da7d66c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da7d6850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da7d69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10da7d6d90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="Adg715C.Power.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10da7d6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da7d59e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10da7d1020"/>
        <function-ref name="write" scoped="" ref="0x2b10da7d3620"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da7d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d93226a0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d93226a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d931ec40"/>
        <function-ref name="fired" scoped="" ref="0x2b10d931f1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d931e020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d931fae0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d931d590"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d931d110"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d931f660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d9321390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d931e630"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d9321860"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9321d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x2b10d943c020" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534C.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x2b10d943c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d943c3a0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d943c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Cal" ref="0x2b10da815020" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x2b10da815020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10da8153a0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10da815530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PressRead" ref="0x2b10da818890" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PressRead" scoped="" ref="0x2b10da818890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da8174c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da817940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x2b10da8190a0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x2b10da8190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da819c90"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da818170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10da81a2b0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da81a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da81a630"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da81a7c0"/>
        <function-ref name="request" scoped="" ref="0x2b10da81a950"/>
        <function-ref name="granted" scoped="" ref="0x2b10da81aae0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da81ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intersema" ref="0x2b10da81b9d0" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Intersema5534C.Intersema5534ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intersema" scoped="" ref="0x2b10da81b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intersema"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da81bd50"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da81a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x2b10d9383b00" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x2b10d9383b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9382750"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9382bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x2b10d93802a0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x2b10d93802a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d9380620"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d93807b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x2b10d9384270" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x2b10d9384270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9384e60"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9383310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9385390" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalIntersema5534C.nc">
      <component-ref qname="HalIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9385390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9385710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d93858a0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9385a30"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9385bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9385d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x2b10d93e17b0" loc="57:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x2b10d93e17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d93e1b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d93e1cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d93e1e50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d93e0020"/>
        <function-ref name="get" scoped="" ref="0x2b10d93e01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d93e0340"/>
        <function-ref name="set" scoped="" ref="0x2b10d93e04d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d93e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Press" ref="0x2b10d93ea370" loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Press" scoped="" ref="0x2b10d93ea370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d93e9020"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d93e94a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cal" ref="0x2b10d93e9aa0" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cal" scoped="" ref="0x2b10d93e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Calibration"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d93e9e20"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d93e7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x2b10d93e0930" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x2b10d93e0930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d93e0cb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d93e0e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d93df020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d93df1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d93df340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d93df4d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d93df660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d93df7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="gotInterrupt" ref="0x2b10d93dfac0" loc="82:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="gotInterrupt" scoped="" ref="0x2b10d93dfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d93dfe40"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d93de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x2b10d93e2650" loc="56:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x2b10d93e2650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d93e29d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d93e2b60"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d93e2cf0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d93e2e80"/>
        <function-ref name="get" scoped="" ref="0x2b10d93e1030"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d93e11c0"/>
        <function-ref name="set" scoped="" ref="0x2b10d93e1350"/>
        <function-ref name="clr" scoped="" ref="0x2b10d93e14e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temp" ref="0x2b10d93ecb50" loc="52:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x2b10d93ecb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d93eb790"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d93ebc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPITask" ref="0x2b10d93de2f0" loc="81:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPITask" scoped="" ref="0x2b10d93de2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d93de670"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d93de800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d93e7410" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema5534LogicP.nc">
      <component-ref qname="HalIntersema5534C.Intersema5534LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d93e7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d93e4870"/>
        <function-ref name="fired" scoped="" ref="0x2b10d93e6e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d93e5c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d93e5780"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d93e21e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d93e4cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d93e5300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d93e6020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d93e4260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d93e64f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d93e69c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d93d8430" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534C.nc">
      <component-ref qname="HplIntersema5534C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d93d8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d93d87b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d93d8940"/>
        <function-ref name="request" scoped="" ref="0x2b10d93d8ad0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d93d8c60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d93d8df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d93d3020" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d93d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d93d33a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d93d3530"/>
        <function-ref name="start" scoped="" ref="0x2b10d93d36c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d93d3850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDin" ref="0x2b10d93d18b0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDin" scoped="" ref="0x2b10d93d18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d93d1c30"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93d1dc0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d93d0020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93d01b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d93d0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SI" ref="0x2b10d940acf0" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SI" scoped="" ref="0x2b10d940acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d94090a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9409230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d94093c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9409550"/>
        <function-ref name="get" scoped="" ref="0x2b10d94096e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9409870"/>
        <function-ref name="set" scoped="" ref="0x2b10d9409a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9409b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_SO" ref="0x2b10d9408020" loc="43:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_SO" scoped="" ref="0x2b10d9408020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d94083a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9408530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d94086c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9408850"/>
        <function-ref name="get" scoped="" ref="0x2b10d94089e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9408b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d9408d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9407020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressurePower" ref="0x2b10d93d3c40" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressurePower" scoped="" ref="0x2b10d93d3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d93d2020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93d21b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d93d2340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93d24d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d93d2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureDout" ref="0x2b10d93d0720" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureDout" scoped="" ref="0x2b10d93d0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d93d0aa0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93d0c30"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d93d0dc0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93cf020"/>
        <function-ref name="close" scoped="" ref="0x2b10d93cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SPI_CLK" ref="0x2b10d940b9c0" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI_CLK" scoped="" ref="0x2b10d940b9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d940bd40"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d940a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d940a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d940a340"/>
        <function-ref name="get" scoped="" ref="0x2b10d940a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d940a660"/>
        <function-ref name="set" scoped="" ref="0x2b10d940a7f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d940a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelPressureClock" ref="0x2b10d93d2a50" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelPressureClock" scoped="" ref="0x2b10d93d2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d93d2dd0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d93d1020"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d93d11b0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d93d1340"/>
        <function-ref name="close" scoped="" ref="0x2b10d93d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d9407310" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9407310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9407690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9407820"/>
        <function-ref name="request" scoped="" ref="0x2b10d94079b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9407b40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9407cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d93cf5e0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplIntersema5534P.nc">
      <component-ref qname="HplIntersema5534P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d93cf5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d940da80"/>
        <function-ref name="fired" scoped="" ref="0x2b10d940e090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d940ee10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d940e990"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d940b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d940b020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d940e510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d93ce200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d940d470"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d93ce6d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d93ceba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d94216c0" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d94216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d9421a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d9421bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d941f3e0" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d941f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d941f780"/>
        <function-ref name="configure" scoped="" ref="0x2b10d941f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d9421e40" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9421e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94201e0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d9420370"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9420500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9420690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d9420820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d94228d0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d94228d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9422c70"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9422e00"/>
        <function-ref name="request" scoped="" ref="0x2b10d9421020"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94211b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9421340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d9420a70" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9420a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d9420df0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d941f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da84e8a0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da84e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da84ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da84d020" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da84d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da84d3a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da84d530"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da84d6c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da84d850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da849020" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da849020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da8493c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da849550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da848cf0" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da848cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da8470e0"/>
        <function-ref name="configure" scoped="" ref="0x2b10da847270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da847500" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da847500"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da847880"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da847a10"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da847ba0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da847d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da8497a0" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da849b20"/>
        <function-ref name="requested" scoped="" ref="0x2b10da849cb0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da849e40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da848020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da8481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da846020" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da846020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da8463a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da846530"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da8466c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da846850"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da8469e0"/>
        <function-ref name="get" scoped="" ref="0x2b10da846b70"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da846d00"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da8454d0"/>
        <function-ref name="set" scoped="" ref="0x2b10da8451b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da845020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da845340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da84a210" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da84a210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da84a5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da84a740"/>
        <function-ref name="request" scoped="" ref="0x2b10da84a8d0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da84aa60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da84abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da848400" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da848400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da848780"/>
        <function-ref name="userId" scoped="" ref="0x2b10da848910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da8457a0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplIntersema5534C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da8457a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da845b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da845cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10d941d7a0" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d941d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d941db20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d941dcb0"/>
        <function-ref name="start" scoped="" ref="0x2b10d941de40"/>
        <function-ref name="stop" scoped="" ref="0x2b10d941b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d941b270" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d941b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d941b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d941b840" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d941b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d941bbc0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d941bd50"/>
        <function-ref name="granted" scoped="" ref="0x2b10d941a020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d941a1b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d941a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d941a590" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d941a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d941a910"/>
        <function-ref name="userId" scoped="" ref="0x2b10d941aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10da8a7b20" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10da8a7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10da8a6020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10da8a61b0"/>
        <function-ref name="start" scoped="" ref="0x2b10da8a6340"/>
        <function-ref name="stop" scoped="" ref="0x2b10da8a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10da8a6720" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da8a6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10da8a6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b10da8a4160" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b10da8a4160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da8a44e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da8a4670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10da8a6cf0" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8a6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da8a50a0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da8a5230"/>
        <function-ref name="granted" scoped="" ref="0x2b10da8a53c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da8a5550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da8a56e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b10da8a4940" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b10da8a4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da8a4cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da8a4e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b10da8a73c0" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10da8a73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10da8a7740"/>
        <function-ref name="stop" scoped="" ref="0x2b10da8a78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10da8a5930" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplIntersema5534C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da8a5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da8a5cb0"/>
        <function-ref name="userId" scoped="" ref="0x2b10da8a5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d9414b00" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9414b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d940f110"/>
        <function-ref name="fired" scoped="" ref="0x2b10d94125b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d94104a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d9410020"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d940fa10"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d940f590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d9412a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d9413750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d9410ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d9413c20"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9412130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d9448490" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HalIntersema5534C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9448490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d9444a20"/>
        <function-ref name="fired" scoped="" ref="0x2b10d9445020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d9445da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d9445920"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d94434a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d9443020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d94454a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d94460d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d9444410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d94465a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9446a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x2b10d94fcbc0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x2b10d94fcbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d94fb7e0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d94fbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x2b10d94fd310" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550C.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x2b10d94fd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d94fc020"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d94fc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRRead" ref="0x2b10da917a40" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRRead" scoped="" ref="0x2b10da917a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da916670"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da916af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InfraredLight" ref="0x2b10da91c0a0" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InfraredLight" scoped="" ref="0x2b10da91c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da91cc90"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da91a170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLRead" ref="0x2b10da918280" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLRead" scoped="" ref="0x2b10da918280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da918e70"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da917320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VLResource" ref="0x2b10da91a770" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLResource" scoped="" ref="0x2b10da91a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da91aaf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da91ac80"/>
        <function-ref name="request" scoped="" ref="0x2b10da91ae10"/>
        <function-ref name="granted" scoped="" ref="0x2b10da919020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VisibleLight" ref="0x2b10da91e880" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VisibleLight" scoped="" ref="0x2b10da91e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da91d4c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da91d940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRResource" ref="0x2b10da919480" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Taos2550C.Taos2550ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRResource" scoped="" ref="0x2b10da919480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da919800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da919990"/>
        <function-ref name="request" scoped="" ref="0x2b10da919b20"/>
        <function-ref name="granted" scoped="" ref="0x2b10da919cb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da919e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x2b10d948db90" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x2b10d948db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d948b7b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d948bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x2b10d948a480" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x2b10d948a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9489090"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9489510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d948ecb0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalTaos2550C.nc">
      <component-ref qname="HalTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d948ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d948d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d948d230"/>
        <function-ref name="request" scoped="" ref="0x2b10d948d3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d948d550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d948d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VLight" ref="0x2b10d949fd60" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VLight" scoped="" ref="0x2b10d949fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d949e980"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d949ee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x2b10d94967a0" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x2b10d94967a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9496b20"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9496cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x2b10d9495800" loc="45:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x2b10d9495800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9495b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9495d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRLight" ref="0x2b10d949d580" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRLight" scoped="" ref="0x2b10d949d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d949c1b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d949c630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2b10d9497a50" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2b10d9497a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9497dd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9496020"/>
        <function-ref name="request" scoped="" ref="0x2b10d94961b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9496340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94964d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10d949cd10" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d949cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d949b980"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9498e60"/>
        <function-ref name="write" scoped="" ref="0x2b10d949a5c0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9498250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x2b10d9495020" loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Taos2550LogicP.nc">
      <component-ref qname="HalTaos2550C.Taos2550LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x2b10d9495020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d94953a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9495530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d94d4c90" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550C.nc">
      <component-ref qname="HplTaos2550C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d94d4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94d30a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d94d3230"/>
        <function-ref name="request" scoped="" ref="0x2b10d94d33c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94d3550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94d36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d94cf870" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d94cf870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d94cfbf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d94cfd80"/>
        <function-ref name="start" scoped="" ref="0x2b10d94ce020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d94ce1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x2b10d94be2a0" loc="55:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x2b10d94be2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d94be620"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d94be7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x2b10d94bf2a0" loc="54:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x2b10d94bf2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d94bf620"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d94bf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x2b10d94c39b0" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x2b10d94c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94c3d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d94c2020"/>
        <function-ref name="request" scoped="" ref="0x2b10d94c21b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94c2340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelLightPower" ref="0x2b10d94ce580" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelLightPower" scoped="" ref="0x2b10d94ce580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d94ce900"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d94cea90"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d94cec20"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d94cedb0"/>
        <function-ref name="close" scoped="" ref="0x2b10d94cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d94c27c0" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d94c27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94c2b40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d94c2cd0"/>
        <function-ref name="request" scoped="" ref="0x2b10d94c2e60"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94c1020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x2b10d94c8ae0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d94c8ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d94c7790"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d94c5ca0"/>
        <function-ref name="write" scoped="" ref="0x2b10d94c6400"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d94c5090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d94cd4d0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplTaos2550P.nc">
      <component-ref qname="HplTaos2550P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d94cd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d94caa20"/>
        <function-ref name="fired" scoped="" ref="0x2b10d94cb020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d94cbda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d94cb920"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d94c84a0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d94c8020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d94cb4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d94cc110"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d94ca410"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d94cc5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d94ccab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d94e03a0" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d94e03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d94e0740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d94e08d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d94de1f0" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d94de1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d94de590"/>
        <function-ref name="configure" scoped="" ref="0x2b10d94de720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d94e0b20" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94e0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94df020"/>
        <function-ref name="requested" scoped="" ref="0x2b10d94df1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94df340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94df4d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d94df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d94e1510" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d94e1510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94e18b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d94e1a40"/>
        <function-ref name="request" scoped="" ref="0x2b10d94e1bd0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94e1d60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d94df8b0" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplTaos2550C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94df8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d94dfc30"/>
        <function-ref name="userId" scoped="" ref="0x2b10d94dfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da8e7020" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da8e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da8e73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da8e7630" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da8e7630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da8e79b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da8e7b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da8e7cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da8e7e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da8e36c0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da8e36c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da8e3a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da8e3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da8e1400" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da8e1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da8e17a0"/>
        <function-ref name="configure" scoped="" ref="0x2b10da8e1930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da8e1bc0" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da8e1bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da8e0020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da8e01b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da8e0340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da8e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da8e3e40" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da8e3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da8e21e0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da8e2370"/>
        <function-ref name="granted" scoped="" ref="0x2b10da8e2500"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da8e2690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da8e2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da8e0720" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da8e0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da8e0aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da8e0c30"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da8e0dc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da8df020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da8df1b0"/>
        <function-ref name="get" scoped="" ref="0x2b10da8df340"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da8df4d0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da8dfb10"/>
        <function-ref name="set" scoped="" ref="0x2b10da8df7f0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da8df660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da8df980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da8e4850" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da8e4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da8e4bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da8e4d80"/>
        <function-ref name="request" scoped="" ref="0x2b10da8e3020"/>
        <function-ref name="granted" scoped="" ref="0x2b10da8e31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da8e3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da8e2a70" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da8e2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da8e2df0"/>
        <function-ref name="userId" scoped="" ref="0x2b10da8e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da8dfde0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplTaos2550C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da8dfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da8de180"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da8de310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10d94db5b0" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d94db5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d94db930"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d94dbac0"/>
        <function-ref name="start" scoped="" ref="0x2b10d94dbc50"/>
        <function-ref name="stop" scoped="" ref="0x2b10d94dbde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d94da060" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d94da060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d94da3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d94da630" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d94da630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d94da9b0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d94dab40"/>
        <function-ref name="granted" scoped="" ref="0x2b10d94dacd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d94dae60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d94d9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d94d9270" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d94d9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d94d95f0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d94d9780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10da9420f0" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10da9420f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10da942470"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10da942600"/>
        <function-ref name="start" scoped="" ref="0x2b10da942790"/>
        <function-ref name="stop" scoped="" ref="0x2b10da942920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10da942b70" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da942b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10da941020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b10da940680" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b10da940680"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da940a00"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da940b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10da941270" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da941270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9415f0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da941780"/>
        <function-ref name="granted" scoped="" ref="0x2b10da941910"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da941aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da941c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b10da940e60" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b10da940e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da93f210"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da93f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b10da943970" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10da943970"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10da943cf0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da943e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10da941e80" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplTaos2550C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da941e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da940220"/>
        <function-ref name="userId" scoped="" ref="0x2b10da9403b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d951a3d0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="HplTaos2550C.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d951a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d9516870"/>
        <function-ref name="fired" scoped="" ref="0x2b10d9519e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d9517c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d9517780"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d95151e0"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d9516cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d9517300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d9519020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d9516260"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d95194f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d95199c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9513020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9513020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95133a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9513530"/>
        <function-ref name="request" scoped="" ref="0x2b10d95136c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9513850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95139e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10d9513d90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9513d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d95129e0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d950e020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9510620"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d950f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9509dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9509dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9508180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9508310"/>
        <function-ref name="request" scoped="" ref="0x2b10d95084a0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9508630"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95087c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x2b10d9508b70" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HalTaos2550C.Atm128I2CMasterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x2b10d9508b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x2b10d9134870"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x2b10d9134b30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d95067d0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9504ca0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9505400"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9504090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x2b10d9699900" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="EndDeviceAppC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x2b10d9699900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9698560"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d96989e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x2b10d9697180" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202C.nc">
      <component-ref qname="EndDeviceAppC.Accel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x2b10d9697180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9697d70"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9696220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="X_Resoure" ref="0x2b10da9b5b10" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Resoure" scoped="" ref="0x2b10da9b5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9b4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da9b41b0"/>
        <function-ref name="request" scoped="" ref="0x2b10da9b4340"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9b44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9b4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XRead" ref="0x2b10da9b3730" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XRead" scoped="" ref="0x2b10da9b3730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da9b2390"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da9b2810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="X_Axis" ref="0x2b10da921c10" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="X_Axis" scoped="" ref="0x2b10da921c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da920860"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da920ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Y_Resoure" ref="0x2b10da9b4930" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Resoure" scoped="" ref="0x2b10da9b4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9b4cb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da9b4e40"/>
        <function-ref name="request" scoped="" ref="0x2b10da9b3020"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9b31b0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9b3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YRead" ref="0x2b10da9b1020" loc="42:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YRead" scoped="" ref="0x2b10da9b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da9b1c10"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da9af0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Y_Axis" ref="0x2b10da91f460" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202ReaderP.nc">
      <component-ref qname="EndDeviceAppC.Accel202C.Accel202ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Y_Axis" scoped="" ref="0x2b10da91f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10da9b5090"/>
        <function-ref name="readDone" scoped="" ref="0x2b10da9b5510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x2b10d9552ba0" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x2b10d9552ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d95517b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9551c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9553cb0" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9553cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95520a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9552230"/>
        <function-ref name="request" scoped="" ref="0x2b10d95523c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9552550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95526e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x2b10d9550480" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HalAccel202C.nc">
      <component-ref qname="HalAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x2b10d9550480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d954f090"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d954f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="YADC" ref="0x2b10d956b450" loc="41:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YADC" scoped="" ref="0x2b10d956b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d956b7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="failTask" ref="0x2b10d956baa0" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="failTask" scoped="" ref="0x2b10d956baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d956be20"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9569020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="XADC" ref="0x2b10d956cdc0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XADC" scoped="" ref="0x2b10d956cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x2b10d956b180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read" ref="0x2b10d95692f0" loc="50:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read" scoped="" ref="0x2b10d95692f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9569670"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9569800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="XAxis" ref="0x2b10d9570910" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="XAxis" scoped="" ref="0x2b10d9570910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d956f560"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d956f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x2b10d956c450" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d956c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d956c7d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d956c960"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d956caf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d956d7e0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d956d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d956db60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d956dcf0"/>
        <function-ref name="request" scoped="" ref="0x2b10d956de80"/>
        <function-ref name="granted" scoped="" ref="0x2b10d956c030"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d956c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="YAxis" ref="0x2b10d956e180" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Accel202LogicP.nc">
      <component-ref qname="HalAccel202C.Accel202LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="YAxis" scoped="" ref="0x2b10d956e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d956ed70"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d956d220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d95643f0" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202C.nc">
      <component-ref qname="HplAccel202C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d95643f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9564770"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9564900"/>
        <function-ref name="request" scoped="" ref="0x2b10d9564a90"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9564c20"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9564db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d95a8020" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d95a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d95a83a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d95a8530"/>
        <function-ref name="start" scoped="" ref="0x2b10d95a86c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d95a8850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_X" ref="0x2b10d95a6880" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_X" scoped="" ref="0x2b10d95a6880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d95a6c00"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d95a6d90"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d95a5020"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d95a51b0"/>
        <function-ref name="close" scoped="" ref="0x2b10d95a5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccel_Y" ref="0x2b10d95a56f0" loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccel_Y" scoped="" ref="0x2b10d95a56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d95a5a70"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d95a5c00"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d95a5d90"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d95a4020"/>
        <function-ref name="close" scoped="" ref="0x2b10d95a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d95a44a0" loc="40:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d95a44a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95a4820"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d95a49b0"/>
        <function-ref name="request" scoped="" ref="0x2b10d95a4b40"/>
        <function-ref name="granted" scoped="" ref="0x2b10d95a4cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95a4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChannelAccelPower" ref="0x2b10d95a7a30" loc="37:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChannelAccelPower" scoped="" ref="0x2b10d95a7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d95a7db0"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d95a6020"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d95a61b0"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d95a6340"/>
        <function-ref name="close" scoped="" ref="0x2b10d95a64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DcDcBoost33Channel" ref="0x2b10d95a8c30" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/HplAccel202P.nc">
      <component-ref qname="HplAccel202P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DcDcBoost33Channel" scoped="" ref="0x2b10d95a8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Channel"/>
      </instance>
      <interface-functions>
        <function-ref name="open" scoped="" ref="0x2b10d95a7020"/>
        <function-ref name="isOpen" scoped="" ref="0x2b10d95a71b0"/>
        <function-ref name="openDone" scoped="" ref="0x2b10d95a7340"/>
        <function-ref name="closeDone" scoped="" ref="0x2b10d95a74d0"/>
        <function-ref name="close" scoped="" ref="0x2b10d95a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d95c89e0" loc="92:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d95c89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d95c8d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d95c7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d95c6770" loc="96:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d95c6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d95c6b10"/>
        <function-ref name="configure" scoped="" ref="0x2b10d95c6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d95c7270" loc="93:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95c75f0"/>
        <function-ref name="requested" scoped="" ref="0x2b10d95c7780"/>
        <function-ref name="granted" scoped="" ref="0x2b10d95c7910"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95c7aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d95c7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d95a9bf0" loc="91:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d95a9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95c8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d95c81b0"/>
        <function-ref name="request" scoped="" ref="0x2b10d95c8340"/>
        <function-ref name="granted" scoped="" ref="0x2b10d95c84d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95c8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d95c7e80" loc="94:/opt/tinyos-2.1.2/tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplAccel202C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d95c6220"/>
        <function-ref name="userId" scoped="" ref="0x2b10d95c63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da989620" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da989620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da9899a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10da989c30" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplAccel202C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10da989c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da988020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da9881b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da988340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da9884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da985bd0" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da985bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da984020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da9841b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da983950" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da983950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da983cf0"/>
        <function-ref name="configure" scoped="" ref="0x2b10da983e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da982130" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da982130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da9824b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da982640"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da9827d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da982960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da984400" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da984400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da984780"/>
        <function-ref name="requested" scoped="" ref="0x2b10da984910"/>
        <function-ref name="granted" scoped="" ref="0x2b10da984aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da984c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da984dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da982bb0" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da982bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da981020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da9811b0"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da981340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da9814d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da981660"/>
        <function-ref name="get" scoped="" ref="0x2b10da9817f0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da981980"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da980020"/>
        <function-ref name="set" scoped="" ref="0x2b10da981ca0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da981b10"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da981e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da987e40" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da987e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da985210"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da9853a0"/>
        <function-ref name="request" scoped="" ref="0x2b10da985530"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9856c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da985850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da983060" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da983060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da9833e0"/>
        <function-ref name="userId" scoped="" ref="0x2b10da983570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da9802f0" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="HplAccel202C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da9802f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da980670"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da980800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10d95c4c90" loc="69:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d95c4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d95c30a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d95c3230"/>
        <function-ref name="start" scoped="" ref="0x2b10d95c33c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d95c3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d95c37a0" loc="71:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d95c37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d95c3b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d95c3d70" loc="72:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d95c3d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95c1180"/>
        <function-ref name="requested" scoped="" ref="0x2b10d95c1310"/>
        <function-ref name="granted" scoped="" ref="0x2b10d95c14a0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95c1630"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d95c17c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d95c1a10" loc="73:/opt/tinyos-2.1.2/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d95c1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d95c1d90"/>
        <function-ref name="userId" scoped="" ref="0x2b10d95c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x2b10da9ec400" loc="61:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10da9ec400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10da9ec780"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10da9ec910"/>
        <function-ref name="start" scoped="" ref="0x2b10da9ecaa0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da9ecc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10da9ece80" loc="63:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10da9ece80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10da9eb220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x2b10da9ea8c0" loc="78:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x2b10da9ea8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da9eac40"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da9eadd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10da9eb470" loc="64:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da9eb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9eb7f0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da9eb980"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9ebb10"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9ebca0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da9ebe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x2b10da9e9100" loc="73:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x2b10da9e9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da9e9480"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da9e9610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x2b10da9edb30" loc="60:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10da9edb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10da9ec020"/>
        <function-ref name="stop" scoped="" ref="0x2b10da9ec1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10da9ea0e0" loc="65:/opt/tinyos-2.1.2/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplAccel202C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da9ea0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da9ea460"/>
        <function-ref name="userId" scoped="" ref="0x2b10da9ea5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d95b3210" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d95b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d95b3590"/>
        <function-ref name="configure" scoped="" ref="0x2b10d95b3720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b10d95ae420" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b10d95ae420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d95ae7a0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95ae930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b10d95b64a0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d95b64a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d95b6820"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d95b69b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95b6b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d95b76e0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d95b76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d95b7a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d95b7bf0"/>
        <function-ref name="request" scoped="" ref="0x2b10d95b7d80"/>
        <function-ref name="granted" scoped="" ref="0x2b10d95b6020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d95b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d95ab7a0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d95ab7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d95abb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x2b10d95f1020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x2b10d95f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d95f13a0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95f1530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x2b10d95f2640" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x2b10d95f2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x2b10d95f29c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d95f2b50"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95f2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x2b10d95e25b0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95e25b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b10d95e2930"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b10d95e2ac0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b10d95e2c50"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d95e2de0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b10d95f0020"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b10d95f01b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b10d95f0340"/>
        <function-ref name="isComplete" scoped="" ref="0x2b10d95f04d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d95f0660"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b10d95f07f0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b10d95f0980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b10d95f0b10"/>
        <function-ref name="startConversion" scoped="" ref="0x2b10d95f0ca0"/>
        <function-ref name="isStarted" scoped="" ref="0x2b10d95ef020"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b10d95ef1b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b10d95ef340"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b10d95ef4d0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d95ef660"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b10d95abe10" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d95abe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d95f21c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d95f2350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b10d95efae0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b10d95efae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b10d95efe60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b10d95e1020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b10d95e11b0"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b10d95e1340"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b10d95e14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b10d95ac830" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95ac830"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b10d95acbb0"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b10d95acd40"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b10d95f7020"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d95f71b0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b10d95f7340"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b10d95f74d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b10d95f7660"/>
        <function-ref name="isComplete" scoped="" ref="0x2b10d95f77f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d95f7980"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b10d95f7b10"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b10d95f7ca0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b10d95f7e30"/>
        <function-ref name="startConversion" scoped="" ref="0x2b10d95f6020"/>
        <function-ref name="isStarted" scoped="" ref="0x2b10d95f62b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b10d95f6440"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b10d95f65d0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b10d95f6760"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d95f68f0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d95f6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x2b10d95f5b60" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x2b10d95f5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x2b10d963c020"/>
        <function-ref name="getAdmux" scoped="" ref="0x2b10d963c1b0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x2b10d963c340"/>
        <function-ref name="isEnabled" scoped="" ref="0x2b10d963c4d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x2b10d963c660"/>
        <function-ref name="setAdmux" scoped="" ref="0x2b10d963c7f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x2b10d963c980"/>
        <function-ref name="isComplete" scoped="" ref="0x2b10d963cb10"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d963cca0"/>
        <function-ref name="disableAdc" scoped="" ref="0x2b10d963ce30"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x2b10d963b020"/>
        <function-ref name="disableInterruption" scoped="" ref="0x2b10d963b1b0"/>
        <function-ref name="startConversion" scoped="" ref="0x2b10d963b340"/>
        <function-ref name="isStarted" scoped="" ref="0x2b10d963b5d0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x2b10d963b760"/>
        <function-ref name="setContinuous" scoped="" ref="0x2b10d963b8f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x2b10d963ba80"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d963bc10"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d963bda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b10d963a150" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b10d963a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b10d963a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d966ac00" loc="92:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d966ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d9669020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d96691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d9667930" loc="96:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d9667930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d9667cd0"/>
        <function-ref name="configure" scoped="" ref="0x2b10d9667e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10d9669400" loc="93:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9669400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9669780"/>
        <function-ref name="requested" scoped="" ref="0x2b10d9669910"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9669aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9669c30"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d9669dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d966be70" loc="91:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d966be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d966a240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d966a3d0"/>
        <function-ref name="request" scoped="" ref="0x2b10d966a560"/>
        <function-ref name="granted" scoped="" ref="0x2b10d966a6f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d966a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d9667060" loc="94:/opt/tinyos-2.1.2/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9667060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d96673e0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d9667570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10da9d0140" loc="44:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10da9d0140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10da9d04c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x2b10da9d0750" loc="45:/opt/tinyos-2.1.2/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x2b10da9d0750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da9d0ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da9d0c60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da9d0df0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da9ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10da9cc850" loc="55:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10da9cc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10da9ccbf0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da9ccd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10da9ca590" loc="60:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10da9ca590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10da9ca930"/>
        <function-ref name="configure" scoped="" ref="0x2b10da9caac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10da9cad50" loc="61:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10da9cad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10da9c9100"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10da9c9290"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10da9c9420"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10da9c95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x2b10da9cb020" loc="56:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10da9cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9cb3a0"/>
        <function-ref name="requested" scoped="" ref="0x2b10da9cb530"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9cb6c0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9cb850"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10da9cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da9c9800" loc="62:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da9c9800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da9c9b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da9c9d10"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da9c8020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da9c81b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da9c8340"/>
        <function-ref name="get" scoped="" ref="0x2b10da9c84d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da9c8660"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da9c8ca0"/>
        <function-ref name="set" scoped="" ref="0x2b10da9c8980"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da9c87f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da9c8b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10da9cd970" loc="54:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10da9cd970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da9cdd10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da9cc020"/>
        <function-ref name="request" scoped="" ref="0x2b10da9cc1b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10da9cc340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da9cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10da9cbc30" loc="57:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10da9cbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10da9ca020"/>
        <function-ref name="userId" scoped="" ref="0x2b10da9ca1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10da9c7020" loc="75:/opt/tinyos-2.1.2/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10da9c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da9c73a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da9c7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10d9663780" loc="72:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10d9663780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10d9663b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10d9663d50" loc="73:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10d9663d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d96a5100"/>
        <function-ref name="requested" scoped="" ref="0x2b10d96a5290"/>
        <function-ref name="granted" scoped="" ref="0x2b10d96a5420"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d96a55b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d96a5740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b10d9663020" loc="70:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9663020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d96633a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9663530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d96a5990" loc="74:/opt/tinyos-2.1.2/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d96a5990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d96a5d10"/>
        <function-ref name="userId" scoped="" ref="0x2b10d96a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x2b10daa2c270" loc="62:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x2b10daa2c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x2b10daa2c5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x2b10daa2c840" loc="63:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x2b10daa2c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10daa2cbc0"/>
        <function-ref name="requested" scoped="" ref="0x2b10daa2cd50"/>
        <function-ref name="granted" scoped="" ref="0x2b10daa2b020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10daa2b1b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10daa2b340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x2b10daa2ead0" loc="60:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10daa2ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10daa2ee50"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa2c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10daa2b590" loc="64:/opt/tinyos-2.1.2/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10daa2b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10daa2b910"/>
        <function-ref name="userId" scoped="" ref="0x2b10daa2baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d9693630" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d9693630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d96939b0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d9693b40"/>
        <function-ref name="start" scoped="" ref="0x2b10d9693cd0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9693e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10d9690660" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10d9690660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d96909e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9690b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9690d00"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d968f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d968f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b10d968d5a0" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b10d968d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d968d920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10d968dbb0" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10d968dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d968c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d968c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d968c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d968c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d968c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b10d96c7cd0" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d96c7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d96ce2e0"/>
        <function-ref name="clear" scoped="" ref="0x2b10d96cea10"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9688b60"/>
        <function-ref name="set" scoped="" ref="0x2b10d96c5170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b10d96bbb20" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d96bbb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b10d96c0020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b10d96c01b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b10d96c0340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b10d96c04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d968f990" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d968f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d968fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b10d96cfc70" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96cfc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10d9689020"/>
        <function-ref name="noAck" scoped="" ref="0x2b10d96891b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10d9689340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10d968c910" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10d968c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10d968cc90"/>
        <function-ref name="source" scoped="" ref="0x2b10d968ce20"/>
        <function-ref name="address" scoped="" ref="0x2b10d968b020"/>
        <function-ref name="destination" scoped="" ref="0x2b10d968b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10d968b340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10d968b4d0"/>
        <function-ref name="type" scoped="" ref="0x2b10d968b660"/>
        <function-ref name="setType" scoped="" ref="0x2b10d968b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10d968b980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10d968bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10d968bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b10d96c5dc0" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d96c5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d96c33f0"/>
        <function-ref name="clear" scoped="" ref="0x2b10d96c3b20"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d96c4ca0"/>
        <function-ref name="set" scoped="" ref="0x2b10d96c12a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d96ae880" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d96ae880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d96aec00"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d96aed90"/>
        <function-ref name="start" scoped="" ref="0x2b10d96f9020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d96f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10d96e0d40" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d96e0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d96e90e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d96e9270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d96e9400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d96e9590"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d96e9720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d96e98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b10d9720d20" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b10d9720d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b10d96dd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10d96f4760" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10d96f4760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d96f4ae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d96f4c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d96f4e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d96f3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d96f31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10d96f9980" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10d96f9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d96f9d00"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d96f8020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d96f81b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d96f8340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d96f84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b10d96f7900" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b10d96f7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d96f7c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b10d96eb970" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d96eb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d96ebcf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d96ebe80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d96f2030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d96f21c0"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d96f2350"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d96f24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b10d96e9bb0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d96e9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b10d96df020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b10d96df1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b10d96df340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b10d96df4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d96f8cb0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d96f8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d96f70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b10d96f2810" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d96f2810"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10d96f2b90"/>
        <function-ref name="noAck" scoped="" ref="0x2b10d96f2d20"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10d96f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b10d96de020" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b10d96de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b10d96de3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b10d96de530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b10d96de6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b10d96de850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b10d96de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10d96f5020" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10d96f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10d96f53a0"/>
        <function-ref name="source" scoped="" ref="0x2b10d96f5530"/>
        <function-ref name="address" scoped="" ref="0x2b10d96f56c0"/>
        <function-ref name="destination" scoped="" ref="0x2b10d96f5850"/>
        <function-ref name="setSource" scoped="" ref="0x2b10d96f59e0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10d96f5b70"/>
        <function-ref name="type" scoped="" ref="0x2b10d96f5d00"/>
        <function-ref name="setType" scoped="" ref="0x2b10d96f4020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10d96f41b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10d96f4340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10d96f44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b10d96e8a80" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d96e8a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b10d96e8e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d96d6b80" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d96d6b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d971d020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d971d1b0"/>
        <function-ref name="start" scoped="" ref="0x2b10d971d340"/>
        <function-ref name="stop" scoped="" ref="0x2b10d971d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b10d970d4c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d970d4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b10d970d840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b10d970c790" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b10d970c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b10d970cb10"/>
        <function-ref name="setRetries" scoped="" ref="0x2b10d970cca0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b10d970ce30"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b10d970b020"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b10d970b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b10d97119e0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d97119e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9711d60"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d970e020"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d970e1b0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d970e340"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d970e4d0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d970e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b10d97194e0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b10d97194e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9719860"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d97199f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9719b80"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9719d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9711020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b10d970db40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d970db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b10d970c020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b10d970c1b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b10d970c340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b10d970c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b10d971a020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b10d971a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d971a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b10d970e990" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10d970e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10d970ed10"/>
        <function-ref name="noAck" scoped="" ref="0x2b10d970d020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10d970d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d971dd00" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d971dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d971c0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d971c230"/>
        <function-ref name="request" scoped="" ref="0x2b10d971c3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d971c550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d971c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b10d970f240" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b10d970f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d970f5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d970f750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d970f8e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d970fa70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d970fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b10d971a6e0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b10d971a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d971aa60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d971abf0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d971ad80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9719020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d97191b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b10d9711390" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9711390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9711710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d9708020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d9708020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d97083a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d9708530"/>
        <function-ref name="start" scoped="" ref="0x2b10d97086c0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9708850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10d9706020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9706020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d97063a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d9706530"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d97066c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d9706850"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d97069e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d9706b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9708b10" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9708b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9707020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d97071b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9707340"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d97074d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9707660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9707940" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9707940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9707cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d9705b90" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d9705b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d9702020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d97021b0"/>
        <function-ref name="start" scoped="" ref="0x2b10d9702340"/>
        <function-ref name="stop" scoped="" ref="0x2b10d97024d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10d97014c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d97014c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d9701840"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d97019d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d9701b60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d9701cf0"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d9701e80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d9700030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b10d9744700" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b10d9744700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d9744a80"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d9744c10"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d9744da0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d9742020"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d97421b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d9742340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b10d973ab00" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d973ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d973ae80"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9738030"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d97381c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9738350"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d97384e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9738670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2b10d973c810" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b10d973c810"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d973cb90"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d973cd20"/>
        <function-ref name="modify" scoped="" ref="0x2b10d9744020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d97441b0"/>
        <function-ref name="resend" scoped="" ref="0x2b10d9744340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9702790" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9702790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9702b10"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9702ca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9702e30"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9701020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d97011b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b10d9739b60" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b10d9739b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b10d973b020"/>
        <function-ref name="rand32" scoped="" ref="0x2b10d973b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b10d96feba0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b10d96feba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d96fd020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d96fd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9730130" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9730130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d97304b0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9730640"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d97307d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2b10d9746840" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b10d9746840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b10d9746bc0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b10d9746d50"/>
        <function-ref name="rxOn" scoped="" ref="0x2b10d96fe020"/>
        <function-ref name="startVReg" scoped="" ref="0x2b10d96fe1b0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b10d96fe340"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b10d96fe4d0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b10d96fe660"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b10d96fe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d973b470" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d973b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d973b7f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d973b980"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d973bb10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d973bca0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d973be30"/>
        <function-ref name="get" scoped="" ref="0x2b10d973a020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d973a1b0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d973a7f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d973a340"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d973a4d0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d973a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b10d9700320" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9700320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d97006a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9700830"/>
        <function-ref name="request" scoped="" ref="0x2b10d97009c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9700b50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9700ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2b10d972c7f0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2b10d972c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d972cc70"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d972ce00"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9737020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d97371b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9737340"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d97374d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2b10d97272a0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2b10d97272a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9727620"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d97277b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2b10d97282a0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2b10d97282a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9728620"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d97287b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2b10d97292b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2b10d97292b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9729630"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d97297c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b10d97bc550" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97bc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b10d97bc8d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b10d97bca60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b10d97bcbf0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b10d97bcd80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b10d9779020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b10d97791b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b10d9779340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b10d97794d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b10d9779660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b10d97797f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b10d9779980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b10d9779b10"/>
        <function-ref name="sync" scoped="" ref="0x2b10d9779ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b10d9778020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b10d97781b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b10d97bb830" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b10d97bb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97ba480"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d97ba900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b10d97784b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b10d97784b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b10d9778830"/>
        <function-ref name="rfOff" scoped="" ref="0x2b10d97789c0"/>
        <function-ref name="rxOn" scoped="" ref="0x2b10d9778b50"/>
        <function-ref name="startVReg" scoped="" ref="0x2b10d9778ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b10d9778e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b10d97bb030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b10d97bb1c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b10d97bb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d977a020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d977a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d977a3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d977a530"/>
        <function-ref name="request" scoped="" ref="0x2b10d977a6c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d977a850"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d977a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2b10d97b40c0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b10d97b40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b10d97b4440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b10d97b45d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b10d97b4760"/>
        <function-ref name="syncDone" scoped="" ref="0x2b10d97b48f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b10d97b4a80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b10d97b4c10"/>
        <function-ref name="setChannel" scoped="" ref="0x2b10d97b4da0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b10d97b3020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b10d97b31b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b10d97b3340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b10d97b34d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b10d97b3660"/>
        <function-ref name="sync" scoped="" ref="0x2b10d97b37f0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b10d97b3a80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b10d97b3c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2b10d97e6720" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d97e6720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97e6aa0"/>
        <function-ref name="write" scoped="" ref="0x2b10d97e6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2b10d97ad970" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b10d97ad970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b10d97adcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2b10d97af3a0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2b10d97af3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d97abbe0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d97aebc0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d97ab590"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d97ab0d0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d97aa0d0"/>
        <function-ref name="start" scoped="" ref="0x2b10d97ae1f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d97ae700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2b10d979a570" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d979a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d979a8f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d979aa80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b10d97a9830" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b10d97a9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d97a9bb0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d97a9d40"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d97a8020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d97a81b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d97a8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d97a84d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d97a8660"/>
        <function-ref name="clr" scoped="" ref="0x2b10d97a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2b10d97b1500" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2b10d97b1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97b0130"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d97b05b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2b10d97d4820" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2b10d97d4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d97d4ba0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d97d4d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2b10d97e5020" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d97e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97e53a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d97e5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b10d97e58d0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d97e58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97e5c50"/>
        <function-ref name="write" scoped="" ref="0x2b10d97e5de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2b10d979f3c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d979f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d979f740"/>
        <function-ref name="write" scoped="" ref="0x2b10d979f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b10d97a06b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10d97a06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b10d97a0a30"/>
        <function-ref name="changed" scoped="" ref="0x2b10d97a0bc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b10d97a0d50"/>
        <function-ref name="setAddress" scoped="" ref="0x2b10d97a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b10d97aa5c0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b10d97aa5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d97aa940"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d97aaad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d97aac60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d97aadf0"/>
        <function-ref name="get" scoped="" ref="0x2b10d97a9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d97a91b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d97a9340"/>
        <function-ref name="clr" scoped="" ref="0x2b10d97a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2b10d97e2020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d97e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d97e25a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2b10d97a8b50" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b10d97a8b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d97a7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d97a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d97a7340"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d97a74d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d97a7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d97a77f0"/>
        <function-ref name="set" scoped="" ref="0x2b10d97a7980"/>
        <function-ref name="clr" scoped="" ref="0x2b10d97a7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d97b8cc0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d97b8cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d97b50a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b10d979ae40" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d979ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97e61e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d97e6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2b10d97e2940" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d97e2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d97e2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b10d97e10d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b10d97e10d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d97e1450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d97e15e0"/>
        <function-ref name="request" scoped="" ref="0x2b10d97e1770"/>
        <function-ref name="granted" scoped="" ref="0x2b10d97e1900"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d97e1a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2b10d97e0bd0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2b10d97e0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d97df020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d97df1b0"/>
        <function-ref name="request" scoped="" ref="0x2b10d97df340"/>
        <function-ref name="granted" scoped="" ref="0x2b10d97df4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d97df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2b10d97b2020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2b10d97b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2b10d97b23a0"/>
        <function-ref name="rfOff" scoped="" ref="0x2b10d97b2530"/>
        <function-ref name="rxOn" scoped="" ref="0x2b10d97b26c0"/>
        <function-ref name="startVReg" scoped="" ref="0x2b10d97b2850"/>
        <function-ref name="stopVReg" scoped="" ref="0x2b10d97b29e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2b10d97b2b70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2b10d97b2d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2b10d97b1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2b10d979fc70" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d979fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d979a020"/>
        <function-ref name="write" scoped="" ref="0x2b10d979a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2b10d97989b0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d97989b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9798d30"/>
        <function-ref name="write" scoped="" ref="0x2b10d979f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2b10d97e3120" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d97e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d97e34a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d97df920" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d97df920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d97dfca0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d97dfe30"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d97de020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d97de1b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d97de340"/>
        <function-ref name="get" scoped="" ref="0x2b10d97de4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d97de660"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d97deca0"/>
        <function-ref name="set" scoped="" ref="0x2b10d97de7f0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d97de980"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d97deb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2b10d97d6940" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2b10d97d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d97d6cc0"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d97d6e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d97b5390" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d97b5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d97b5710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d97b58a0"/>
        <function-ref name="request" scoped="" ref="0x2b10d97b5a30"/>
        <function-ref name="granted" scoped="" ref="0x2b10d97b5bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d97b5d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2b10d97a4200" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d97a4200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d97a4580"/>
        <function-ref name="write" scoped="" ref="0x2b10d97a4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2b10d979b830" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d979b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d979bcb0"/>
        <function-ref name="write" scoped="" ref="0x2b10d979be40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2b10d97a6020" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b10d97a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d97a63a0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d97a6530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d97a66c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d97a6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2b10d97e1e40" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2b10d97e1e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d97e01e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d97e0370"/>
        <function-ref name="request" scoped="" ref="0x2b10d97e0500"/>
        <function-ref name="granted" scoped="" ref="0x2b10d97e0690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d97e0820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2b10d97e3830" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d97e3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d97e3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d98547e0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d98547e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9854b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2b10d9850220" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2b10d9850220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d984eb30"/>
        <function-ref name="fired" scoped="" ref="0x2b10d984fa60"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d984e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d984e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d984d020"/>
        <function-ref name="start" scoped="" ref="0x2b10d984f090"/>
        <function-ref name="stop" scoped="" ref="0x2b10d984f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10d984bcd0" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10d984bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d99d1670"/>
        <function-ref name="fired" scoped="" ref="0x2b10d99d5550"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d99d1020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d99d5a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d99d1b30"/>
        <function-ref name="start" scoped="" ref="0x2b10d984ab60"/>
        <function-ref name="stop" scoped="" ref="0x2b10d99d5090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d99cf020" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d99cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d99cf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10daa9e1d0" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10daa9e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10daa9bb30"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa9d9f0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10daa9b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10daa9b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10daa9a020"/>
        <function-ref name="start" scoped="" ref="0x2b10daa9d020"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa9d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10daa97c00" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10daa97c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10daa944e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa954e0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10daa95e60"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10daa959a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10daa949a0"/>
        <function-ref name="start" scoped="" ref="0x2b10daa96a80"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa95020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d98802c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d98802c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d9880640"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b10d98807d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d9880960"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b10d9880af0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d9880c80"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d9880e10"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b10d987f020"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b10d987f1b0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b10d987f340"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b10d987f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b10d987f9e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b10d987f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b10d987be60"/>
        <function-ref name="test" scoped="" ref="0x2b10d987b4e0"/>
        <function-ref name="get" scoped="" ref="0x2b10d987e6b0"/>
        <function-ref name="captured" scoped="" ref="0x2b10d987d0d0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d987d5e0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d987b9a0"/>
        <function-ref name="set" scoped="" ref="0x2b10d987eb70"/>
        <function-ref name="start" scoped="" ref="0x2b10d987daa0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d987b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b10d987aad0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b10d987aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d98764e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d98781b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9879790"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9878670"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d98769a0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9879c50"/>
        <function-ref name="start" scoped="" ref="0x2b10d9878b30"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9876020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d9889e50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9889e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d9882350"/>
        <function-ref name="test" scoped="" ref="0x2b10d98839a0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9885ac0"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d9882810"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d9882d20"/>
        <function-ref name="reset" scoped="" ref="0x2b10d98849f0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9884530"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d9883e60"/>
        <function-ref name="set" scoped="" ref="0x2b10d9884020"/>
        <function-ref name="start" scoped="" ref="0x2b10d9883020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d98834e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b10d986d580" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b10d986d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d986d900"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2b10d986da90"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d986dc20"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2b10d986ddb0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d986b020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d986b1b0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2b10d986b340"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2b10d986b4d0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2b10d986b660"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2b10d986b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2b10d98ae910" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2b10d98ae910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2b10d98aec90"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b10d98aee20"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b10d98ad020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b10d98ad1b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b10d98ad340"/>
        <function-ref name="setControl" scoped="" ref="0x2b10d98ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b10d98677e0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b10d98677e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d98631b0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d9865e10"/>
        <function-ref name="get" scoped="" ref="0x2b10d9865440"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9864340"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d9863670"/>
        <function-ref name="set" scoped="" ref="0x2b10d9865900"/>
        <function-ref name="start" scoped="" ref="0x2b10d9864800"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9864cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b10d986bd00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b10d986bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b10d98670d0"/>
        <function-ref name="test" scoped="" ref="0x2b10d9868720"/>
        <function-ref name="get" scoped="" ref="0x2b10d986a980"/>
        <function-ref name="captured" scoped="" ref="0x2b10d9869380"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9869890"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d9868be0"/>
        <function-ref name="set" scoped="" ref="0x2b10d986ae40"/>
        <function-ref name="start" scoped="" ref="0x2b10d9869d50"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9868260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b10d9863d30" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b10d9863d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d98b36e0"/>
        <function-ref name="fired" scoped="" ref="0x2b10d98b4380"/>
        <function-ref name="get" scoped="" ref="0x2b10d98b5980"/>
        <function-ref name="reset" scoped="" ref="0x2b10d98b4840"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d98b3ba0"/>
        <function-ref name="set" scoped="" ref="0x2b10d98b5e40"/>
        <function-ref name="start" scoped="" ref="0x2b10d98b4d00"/>
        <function-ref name="stop" scoped="" ref="0x2b10d98b3220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b10d98b22a0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b10d98b22a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10d98afe60"/>
        <function-ref name="fired" scoped="" ref="0x2b10d98b09f0"/>
        <function-ref name="get" scoped="" ref="0x2b10d98b0020"/>
        <function-ref name="reset" scoped="" ref="0x2b10d98af020"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d98ae350"/>
        <function-ref name="set" scoped="" ref="0x2b10d98b04e0"/>
        <function-ref name="start" scoped="" ref="0x2b10d98af4e0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d98af9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d98721e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d98721e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d986e550"/>
        <function-ref name="test" scoped="" ref="0x2b10d986fba0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9872e10"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d986ea10"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d986d020"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9870d10"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9870850"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d986e090"/>
        <function-ref name="set" scoped="" ref="0x2b10d9870340"/>
        <function-ref name="start" scoped="" ref="0x2b10d986f220"/>
        <function-ref name="stop" scoped="" ref="0x2b10d986f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d991aa70" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d991aa70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b10d86269c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b10d86269c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d991adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d9918220" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9918220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d9915550"/>
        <function-ref name="test" scoped="" ref="0x2b10d9916ba0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9918e50"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d9915a10"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d9913020"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9917d10"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9917850"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d9915090"/>
        <function-ref name="set" scoped="" ref="0x2b10d9917340"/>
        <function-ref name="start" scoped="" ref="0x2b10d9916220"/>
        <function-ref name="stop" scoped="" ref="0x2b10d99166e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10daa80270" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10daa80270"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b10d8626640"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b10d8626640"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10daa7eb30"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa7faa0"/>
        <function-ref name="startAt" scoped="" ref="0x2b10daa7e4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10daa7e020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10daa7d020"/>
        <function-ref name="start" scoped="" ref="0x2b10daa7f0d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa7f5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b10daa788f0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b10daa788f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b10daa74350"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa75020"/>
        <function-ref name="get" scoped="" ref="0x2b10daa765a0"/>
        <function-ref name="reset" scoped="" ref="0x2b10daa754e0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10daa74810"/>
        <function-ref name="set" scoped="" ref="0x2b10daa76a60"/>
        <function-ref name="start" scoped="" ref="0x2b10daa759a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa75e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b10daa7d570" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b10daa7d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10daa799a0"/>
        <function-ref name="test" scoped="" ref="0x2b10daa79020"/>
        <function-ref name="get" scoped="" ref="0x2b10daa7b1f0"/>
        <function-ref name="setScale" scoped="" ref="0x2b10daa79e60"/>
        <function-ref name="getScale" scoped="" ref="0x2b10daa783a0"/>
        <function-ref name="reset" scoped="" ref="0x2b10daa7a0d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10daa7bbc0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10daa794e0"/>
        <function-ref name="set" scoped="" ref="0x2b10daa7b6b0"/>
        <function-ref name="start" scoped="" ref="0x2b10daa7a590"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa7aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d9983d00" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d9983d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9980b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d997f550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d997f090"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d997fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d997eca0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d997eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d997bae0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d997a4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d997a020"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d997a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d9977bb0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d9977bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9976a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d99744e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d9974020"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d99749a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b10d9973020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9973020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b10d996f350"/>
        <function-ref name="test" scoped="" ref="0x2b10d99719a0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9973c50"/>
        <function-ref name="setScale" scoped="" ref="0x2b10d996f810"/>
        <function-ref name="getScale" scoped="" ref="0x2b10d996fd20"/>
        <function-ref name="reset" scoped="" ref="0x2b10d9972b20"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9972660"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d9971e60"/>
        <function-ref name="set" scoped="" ref="0x2b10d9972150"/>
        <function-ref name="start" scoped="" ref="0x2b10d9971020"/>
        <function-ref name="stop" scoped="" ref="0x2b10d99714e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b10d99686d0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b10d99686d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d99665b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d9965020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d9966a70"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d99654e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b10d996a2e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d996a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9969110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d9969a90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d99695d0"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9968020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b10daa91020" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b10daa91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10daa8e870"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa8f840"/>
        <function-ref name="startAt" scoped="" ref="0x2b10daa8e220"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10daa8fd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10daa8ed30"/>
        <function-ref name="start" scoped="" ref="0x2b10daa91e30"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa8f380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2b10daa8b780" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2b10daa8b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="TOne" ref="0x2b10d86e7c20"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10daa87020"/>
        <function-ref name="fired" scoped="" ref="0x2b10daa88020"/>
        <function-ref name="startAt" scoped="" ref="0x2b10daa889a0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10daa884e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10daa874e0"/>
        <function-ref name="start" scoped="" ref="0x2b10daa895d0"/>
        <function-ref name="stop" scoped="" ref="0x2b10daa89ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b10daa8d3d0" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10daa8d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10daa8c240"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10daa8cbc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10daa8c700"/>
        <function-ref name="overflow" scoped="" ref="0x2b10daa8b0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d99d7a00" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d99d7a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d99d7d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2b10d99ca670" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b10d99ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99ca9f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99cab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99cad10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99c9020"/>
        <function-ref name="get" scoped="" ref="0x2b10d99c91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99c9340"/>
        <function-ref name="set" scoped="" ref="0x2b10d99c94d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99c9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2b10d99c9990" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b10d99c9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99c9d10"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99c8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99c8340"/>
        <function-ref name="get" scoped="" ref="0x2b10d99c84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99c8660"/>
        <function-ref name="set" scoped="" ref="0x2b10d99c87f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99c8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b10d99c8ca0" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b10d99c8ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99c70a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99c7230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99c73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99c7550"/>
        <function-ref name="get" scoped="" ref="0x2b10d99c76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99c7870"/>
        <function-ref name="set" scoped="" ref="0x2b10d99c7a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99c7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2b10d99cb4c0" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b10d99cb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99cb840"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99cb9d0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99cbb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99cbcf0"/>
        <function-ref name="get" scoped="" ref="0x2b10d99cbe80"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99ca030"/>
        <function-ref name="set" scoped="" ref="0x2b10d99ca1c0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99ca350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2b10d99c5340" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2b10d99c5340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99c56c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99c5850"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99c59e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99c5b70"/>
        <function-ref name="get" scoped="" ref="0x2b10d99c5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99c4020"/>
        <function-ref name="set" scoped="" ref="0x2b10d99c41b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99c4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b10d99cc310" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b10d99cc310"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99cc690"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99cc820"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99cc9b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99ccb40"/>
        <function-ref name="get" scoped="" ref="0x2b10d99cccd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99cce60"/>
        <function-ref name="set" scoped="" ref="0x2b10d99cb020"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99cb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2b10d99c6020" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b10d99c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99c6530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99c6850"/>
        <function-ref name="get" scoped="" ref="0x2b10d99c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99c6b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d99c6d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2b10d9a0f700" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b10d9a0f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b10d9a0fa80"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9a0fc10"/>
        <function-ref name="captured" scoped="" ref="0x2b10d9a0fda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b10d9a13020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2b10d9a13400" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2b10d9a13400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d9a13780"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9a13910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d9a13aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d9a13c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2b10d9a12060" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b10d9a12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d9a123e0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9a12570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d9a12700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d9a12890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b10d9a0c020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b10d9a0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b10d9a0c3a0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9a0c530"/>
        <function-ref name="captured" scoped="" ref="0x2b10d9a0c6c0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b10d9a0c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2b10d9a0cc40" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2b10d9a0cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b10d99f8020"/>
        <function-ref name="test" scoped="" ref="0x2b10d99f9630"/>
        <function-ref name="get" scoped="" ref="0x2b10d99fc8a0"/>
        <function-ref name="captured" scoped="" ref="0x2b10d99fb2a0"/>
        <function-ref name="reset" scoped="" ref="0x2b10d99fb7b0"/>
        <function-ref name="isOn" scoped="" ref="0x2b10d99f9af0"/>
        <function-ref name="set" scoped="" ref="0x2b10d99fcd60"/>
        <function-ref name="start" scoped="" ref="0x2b10d99fbc70"/>
        <function-ref name="stop" scoped="" ref="0x2b10d99f9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2b10d99f52f0" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2b10d99f52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d99f5670"/>
        <function-ref name="fired" scoped="" ref="0x2b10d99f5800"/>
        <function-ref name="disable" scoped="" ref="0x2b10d99f5990"/>
        <function-ref name="edge" scoped="" ref="0x2b10d99f5b20"/>
        <function-ref name="enable" scoped="" ref="0x2b10d99f5cb0"/>
        <function-ref name="getValue" scoped="" ref="0x2b10d99f5e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2b10d99f67a0" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2b10d99f67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d99f6b20"/>
        <function-ref name="disable" scoped="" ref="0x2b10d99f6cb0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d99f6e40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d99f5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2b10d99ef060" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2b10d99ef060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d99ef3e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d99ef570"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d99ef700"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d99ef890"/>
        <function-ref name="get" scoped="" ref="0x2b10d99efa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d99efbb0"/>
        <function-ref name="set" scoped="" ref="0x2b10d99efd40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d99ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2b10d99f0440" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b10d99f0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d99f07c0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d99f0950"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d99f0ae0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d99f0c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2b10d99ecbc0" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2b10d99ecbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d99eb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d99eb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b10d9c6e2f0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9c6e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6e870"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b10d9c78670" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c789f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b10d9c712f0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c712f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c71670"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c71800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b10d9c6cce0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9c6cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6b0a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6b230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b10d9c6b500" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b10d9c6b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6b880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b10d9c61ce0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9c61ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c5f0a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c5f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b10d9c63ce0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9c63ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c620a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c62230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b10d9c779c0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c779c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c77d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b10d9c64ce0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9c64ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c630a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c63230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b10d9c702f0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d9c702f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c70670"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c70800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b10d9c6f2f0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9c6f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6f670"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b10d9c68500" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b10d9c68500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c68880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c68a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b10d9c6bce0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9c6bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6a0a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6a230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9c16020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9c163a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9c16530"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9c166c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b10d9c75370" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c75370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c756f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b10d9c759c0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9c759c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c75e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b10d9c73160" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c734e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b10d9c63500" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9c63500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c63880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c63a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b10d9c766b0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c766b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c76a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b10d9c70ad0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9c70ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c70e50"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b10d9c71ad0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c71ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c71e50"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b10d9c78020" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b10d9c61500" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c61500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c61880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c61a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b10d9c62500" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9c62500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c62880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c62a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b10d9c68ce0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b10d9c68ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c660a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c66230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b10d9c64500" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9c64500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c64880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c64a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b10d9c6ace0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9c6ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c690a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c69230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b10d9c5f500" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9c5f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9c5fc80"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9c5fe10"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c5e020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9c5e1b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9c5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b10d9c16990" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9c16990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c16d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b10d9c72ae0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b10d9c72ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c72e60"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b10d9c6fad0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9c6fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6fe50"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b10d9c6a500" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9c6a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6a880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b10d9c6ecd0" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9c6ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6c0a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6c230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b10d9c78cc0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d9c78cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c770a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b10d9c6c500" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9c6c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c6c880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c6ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9c17250" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9c17250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9c175d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9c17760"/>
        <function-ref name="request" scoped="" ref="0x2b10d9c178f0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9c17a80"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9c17c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b10d9c737b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c737b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c73b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b10d9c72490" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b10d9c72490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c72810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b10d9c65ce0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d9c65ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c640a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c64230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b10d9c65500" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9c65500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c65880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c65a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b10d9c76d00" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c76d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c750a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b10d9c66ce0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9c66ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c650a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c65230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b10d9c62ce0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b10d9c62ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c610a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c61230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b10d9c66500" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9c66500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c66880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c66a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b10d9c77370" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9c77370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c776f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b10d9c69ce0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b10d9c69ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c680a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c68230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b10d9c76060" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c76060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c763e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b10d9c69500" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9c69500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c69880"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c69a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b10d9c73e00" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9c73e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c721c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b10d9c5e610" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9c5e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9c5e990"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9c5eb20"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c5ecb0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9c5ee40"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9c5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b10d9a5e2c0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b10d9a5e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9a5e640"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9a5e7d0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a5e960"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9a5eaf0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9a5ec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9a60350" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a60350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9a606d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9a60860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9a609f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b10d9a5d540" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b10d9a5d540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9a5d8c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a5da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b10d9a5c370" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b10d9a5c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9a5c6f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a5c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9a61600" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9a61600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9a61980"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9a61b10"/>
        <function-ref name="request" scoped="" ref="0x2b10d9a61ca0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9a61e30"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9a60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b10d9a5b1d0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b10d9a5b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9a5b550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2b10d9a452e0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9a452e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9a45660"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9a457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2b10d9a55890" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2b10d9a55890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9a55c10"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9a55da0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a54020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9a541b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9a54340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9a58660" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9a58660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9a589e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9a58b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9a58d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2b10d9a4dc70" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b10d9a4dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b10d9a4f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2b10d9a45b40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2b10d9a45b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9a4e020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9a4e1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9a4e340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9a4e4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9a4e660"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9a4e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b10d9a50060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b10d9a50060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9a503e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9a50570"/>
        <function-ref name="request" scoped="" ref="0x2b10d9a50700"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9a50890"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9a50a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2b10d9a54ba0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2b10d9a54ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9a53020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a531b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2b10d9a53a30" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2b10d9a53a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9a53db0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9a52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d9a4ea70" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d9a4ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d9a4edf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d9a4c020"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d9a4c1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d9a4c340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d9a4c4d0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9a4c660"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d9a4c7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d9a4ce30"/>
        <function-ref name="set" scoped="" ref="0x2b10d9a4c980"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d9a4cb10"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d9a4cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9a56510" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9a56510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9a56890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9a56a20"/>
        <function-ref name="request" scoped="" ref="0x2b10d9a56bb0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9a56d40"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9a55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2b10d9a41bd0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2b10d9a41bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9a9b020"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9a9b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2b10d9a528b0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2b10d9a528b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9a52c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10d9a9d770" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9a9d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9a9daf0"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9a9dc80"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9a9de10"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9af5020"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9af51b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9af5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10d9af31d0" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9af31d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9af3550"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9af36e0"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9af3870"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9af3a00"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9af3b90"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9af3d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9aef020" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9aef3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10d9aefb70" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9aefb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9aed020"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9aed1b0"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9aed340"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9aed4d0"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9aed660"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9aed7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b10d9c39d70" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9c39d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9c37180"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9c37310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b10d9c39760" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b10d9c39760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b10d9c39ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9c3a3d0" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9c3a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9c3a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9c3a9e0" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9c3a9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9c3ad60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9c39020"/>
        <function-ref name="request" scoped="" ref="0x2b10d9c391b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9c39340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9c394d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b10d9acd310" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9acd310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9acd690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9acd820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b10d9ad2bc0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b10d9ad2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b10d9acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9ad2560" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9ad2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9ad28e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b10d9b26680" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b10d9b26680"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b10d9b26a00"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b10d9b26b90"/>
        <function-ref name="splitRead" scoped="" ref="0x2b10d9b26d20"/>
        <function-ref name="write" scoped="" ref="0x2b10d9acd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9acc1d0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9acc1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9acc550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9acc6e0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9acc870"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9acca00"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9accb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b10d9b3c190" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b10d9b3c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9b3c510"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9b3c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b10d9b20800" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b10d9b20800"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9b20b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9b20d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b10d9b02c10" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b10d9b02c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9b01020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9b011b0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9b01340"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9b014d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9b01660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b10d9b21640" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b10d9b21640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b10d9b219c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9b21020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9b21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9b213a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b10d9b03800" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b10d9b03800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b10d9b03b80"/>
        <function-ref name="sleep" scoped="" ref="0x2b10d9b021b0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b10d9b1d020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d9b02340"/>
        <function-ref name="initMaster" scoped="" ref="0x2b10d9b1d340"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b10d9b1d4d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d9b1d660"/>
        <function-ref name="read" scoped="" ref="0x2b10d9b1d7f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b10d9b1d980"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d9b1db10"/>
        <function-ref name="setClock" scoped="" ref="0x2b10d9b1dca0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d9b1de30"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b10d9b1c020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b10d9b1c2b0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b10d9b1c440"/>
        <function-ref name="write" scoped="" ref="0x2b10d9b1c5d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b10d9b1c760"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b10d9b1c8f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b10d9b1ca80"/>
        <function-ref name="getClock" scoped="" ref="0x2b10d9b1cc10"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d9b1cda0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b10d9b03d10"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b10d9b1d1b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b10d9b02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b10d9b21c80" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b10d9b21c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b10d9b200a0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b10d9b20230"/>
        <function-ref name="splitRead" scoped="" ref="0x2b10d9b203c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9b20550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9b1f530" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9b1f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9b1f8b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9b1fa40"/>
        <function-ref name="request" scoped="" ref="0x2b10d9b1fbd0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9b1fd60"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9b1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b10d9b01920" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9b01920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d9b01ca0"/>
        <function-ref name="userId" scoped="" ref="0x2b10d9b01e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b10d9b00150" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b10d9b00150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b10d9b004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b10d9b6e3e0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b10d9b6e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b10d9b6e760"/>
        <function-ref name="sleep" scoped="" ref="0x2b10d9b6cca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b10d9b6ea80"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d9b6ce30"/>
        <function-ref name="initMaster" scoped="" ref="0x2b10d9b6eda0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b10d9b6d020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d9b6d1b0"/>
        <function-ref name="read" scoped="" ref="0x2b10d9b6d340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b10d9b6d4d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d9b6d660"/>
        <function-ref name="setClock" scoped="" ref="0x2b10d9b6d7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d9b6d980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b10d9b6db10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b10d9b6dda0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b10d9b6c020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9b6c1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b10d9b6c340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b10d9b6c4d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b10d9b6c660"/>
        <function-ref name="getClock" scoped="" ref="0x2b10d9b6c7f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d9b6c980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b10d9b6e8f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b10d9b6ec10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b10d9b6cb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b10d9b60340" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b10d9b60340"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9b606c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9b60850"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9b609e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9b60b70"/>
        <function-ref name="get" scoped="" ref="0x2b10d9b60d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9b5f020"/>
        <function-ref name="set" scoped="" ref="0x2b10d9b5f1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9b5f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b10d9b63c90" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b10d9b63c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9b620a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9b62230"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9b623c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9b62550"/>
        <function-ref name="get" scoped="" ref="0x2b10d9b626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9b62870"/>
        <function-ref name="set" scoped="" ref="0x2b10d9b62a00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9b62b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b10d9b65a40" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b10d9b65a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9b65dc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9b63020"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9b631b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9b63340"/>
        <function-ref name="get" scoped="" ref="0x2b10d9b634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9b63660"/>
        <function-ref name="set" scoped="" ref="0x2b10d9b637f0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9b63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b10d9b651c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b10d9b651c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d9b65540"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9b656d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b10d9b5f680" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b10d9b5f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b10d9b5fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b10d9b68350" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b10d9b68350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b10d9b686d0"/>
        <function-ref name="sleep" scoped="" ref="0x2b10d9b66ca0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b10d9b689f0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b10d9b66e30"/>
        <function-ref name="initMaster" scoped="" ref="0x2b10d9b68d10"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b10d9b67020"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b10d9b671b0"/>
        <function-ref name="read" scoped="" ref="0x2b10d9b67340"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b10d9b674d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b10d9b67660"/>
        <function-ref name="setClock" scoped="" ref="0x2b10d9b677f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b10d9b67980"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b10d9b67b10"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b10d9b67da0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b10d9b66020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9b661b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b10d9b66340"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b10d9b664d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b10d9b66660"/>
        <function-ref name="getClock" scoped="" ref="0x2b10d9b667f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b10d9b66980"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b10d9b68860"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b10d9b68b80"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b10d9b66b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b10d9b61020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b10d9b61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9b613a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9b61530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9b616c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9b61850"/>
        <function-ref name="get" scoped="" ref="0x2b10d9b619e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9b61b70"/>
        <function-ref name="set" scoped="" ref="0x2b10d9b61d00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9b60020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10d9bf1150" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10d9bf1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10d9bf14f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10d9bf1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10d9bf01f0" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10d9bf01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10d9bf0590"/>
        <function-ref name="configure" scoped="" ref="0x2b10d9bf0720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9bf2390" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9bf2390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9bf2730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9bf28c0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9bf2a50"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9bf2be0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9bf2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10d9bf18d0" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10d9bf18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10d9bf1c50"/>
        <function-ref name="userId" scoped="" ref="0x2b10d9bf1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10dab21d70" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10dab21d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10dab20180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10dab20410" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10dab20410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10dab20790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10dab20920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10dab20ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10dab20c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b10dab1d220" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b10dab1d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b10dab1d5c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b10dab1d750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b10dab1b400" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b10dab1b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b10dab1b7a0"/>
        <function-ref name="configure" scoped="" ref="0x2b10dab1b930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10dab1bbc0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10dab1bbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10dab1a020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10dab1a1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10dab1a340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10dab1a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10dab1e490" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10dab1e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10dab1e830"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10dab1e9c0"/>
        <function-ref name="request" scoped="" ref="0x2b10dab1eb50"/>
        <function-ref name="granted" scoped="" ref="0x2b10dab1ece0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10dab1ee70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b10dab1d9a0" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b10dab1d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b10dab1dd20"/>
        <function-ref name="userId" scoped="" ref="0x2b10dab1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b10dab1a7a0" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b10dab1a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10dab1ab20"/>
        <function-ref name="runTask" scoped="" ref="0x2b10dab1acb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b10d9be6e40" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b10d9be6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9be51e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9be5370"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9be5500"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9be5690"/>
        <function-ref name="get" scoped="" ref="0x2b10d9be5820"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9be59b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9be5b40"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9be5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9be73b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9be73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9be7730"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9be78c0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9be7a50"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9be7be0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9be7d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2b10d9be6170" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2b10d9be6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9be64f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9be6680"/>
        <function-ref name="request" scoped="" ref="0x2b10d9be6810"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9be69a0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9be6b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b10d9caac60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9caac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca9210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b10d9c52da0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c52da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c51180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b10d9c4bb50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c4bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c4a020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b10d9ca8670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9ca8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca89f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b10d9ca8e50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b10d9ca8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca7210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b10d9c9c670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9c9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b10d9c9e670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9c9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9e9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b10d9c50120" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c50120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c504a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b10d9ca0670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9ca0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca09f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b10d9c4ac60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d9c4ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9cab020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cab1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b10d9cabc60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9cabc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9caa020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9caa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b10d9ca4e50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b10d9ca4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca3210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b10d9ca7670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9ca7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca79f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9c53760" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c53760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9c53ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9c53c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9c53e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b10d9c4eaa0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c4eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b10d9c4d120" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9c4d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b10d9c4d870" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c4d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b10d9ca0e50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9ca0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9e210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b10d9c50dc0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c50dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b10d9cab480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9cab480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9cab800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b10d9c4a480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c4a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c4a800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c4a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b10d9c52750" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c52750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c52ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b10d9c9de50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9c210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b10d9c9ee50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9c9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9d210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b10d9ca3670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b10d9ca3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca39f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b10d9ca1e50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9ca1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca0210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b10d9ca6670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9ca6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca69f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b10d9c9ce50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9c9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9c9b610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9c9b7a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9b930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9c9bac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9c9bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b10d9c52100" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9c52100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c52480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b10d9c4b370" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b10d9c4b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c4b6f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c4b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b10d9caa480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9caa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9caa800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9caa990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b10d9ca7e50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9ca7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca6210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b10d9ca9670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9ca9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca99f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b10d9c51450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d9c51450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c517d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b10d9ca9e50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9ca9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca8210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9c549e0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9c549e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9c54d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9c53020"/>
        <function-ref name="request" scoped="" ref="0x2b10d9c531b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9c53340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9c534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b10d9c4c020" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b10d9c4ccc0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b10d9c4ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b10d9ca1670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d9ca1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca19f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b10d9ca2e50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9ca2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca1210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b10d9c4e450" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c4e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b10d9ca2670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9ca2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca29f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b10d9c9d670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b10d9c9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c9d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b10d9ca3e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9ca3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca2210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b10d9c51aa0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9c51aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c51e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b10d9ca4670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b10d9ca4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca49f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b10d9c50770" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c50770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c50af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b10d9ca6e50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9ca6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9ca4210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9ca43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b10d9c4c670" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9c4c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c4c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b10d9c9a020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9c9a3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9c9a530"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c9a6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9c9a850"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9c9a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b10d9c87c60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9c87c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c86210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b10d9c92da0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b10d9c92da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c90180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b10d9c8ab50" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9c8ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c89020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b10d9c84670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9c84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c849f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c84b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b10d9c84e50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b10d9c84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c83210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b10d9cdd670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9cdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9cdd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b10d9c7b670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9c7b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7b9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b10d9c8f120" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9c8f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b10d9c7c670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9c7c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7c9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b10d9c89c60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d9c89c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c88020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c881b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b10d9c88c60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9c88c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c87020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b10d9c81e50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b10d9c81e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c80210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b10d9c83670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9c83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c839f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c83b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9c93760" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9c93760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9c93ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9c93c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9c93e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b10d9c8eaa0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9c8eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b10d9c8d120" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9c8d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b10d9c8d870" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9c8d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b10d9c7ce50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9c7ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7b210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b10d9c8fdc0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9c8fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b10d9c88480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9c88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c88800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c88990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b10d9c89480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9c89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c89800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c89990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b10d9c92750" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9c92750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c92ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b10d9c7ae50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9c7ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9cdd210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cdd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b10d9c7be50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9c7be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7a210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b10d9c80670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b10d9c80670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c809f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c80b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b10d9c7de50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9c7de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7c210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b10d9c82670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9c82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c829f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c82b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b10d9cdde50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9cdde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9cdc610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9cdc7a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cdc930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9cdcac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9cdcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b10d9c92100" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9c92100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c92480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b10d9c8a370" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b10d9c8a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c8a6f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c8a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b10d9c87480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9c87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c87800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c87990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b10d9c83e50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9c83e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c82210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b10d9c86670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9c86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c869f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b10d9c90450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d9c90450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c907d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b10d9c86e50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9c86e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c84210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9c94aa0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9c94aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9c94e20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9c93020"/>
        <function-ref name="request" scoped="" ref="0x2b10d9c931b0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9c93340"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9c934d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b10d9c8c020" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9c8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b10d9c8ccc0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b10d9c8ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b10d9c7d670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d9c7d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7d9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b10d9c7fe50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9c7fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7d210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b10d9c8e450" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9c8e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b10d9c7f670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9c7f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7f9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b10d9c7a670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b10d9c7a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7a9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b10d9c80e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9c80e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c7f210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c7f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b10d9c90aa0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9c90aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c90e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b10d9c81670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b10d9c81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c819f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c81b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b10d9c8f770" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9c8f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b10d9c82e50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9c82e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9c81210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9c813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b10d9c8c670" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9c8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9c8c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b10d9cdb020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9cdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9cdb3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9cdb530"/>
        <function-ref name="write" scoped="" ref="0x2b10d9cdb6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9cdb850"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9cdb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b10d9cd4b90" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10d9cd4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b10d9cd1020"/>
        <function-ref name="changed" scoped="" ref="0x2b10d9cd11b0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b10d9cd1340"/>
        <function-ref name="setAddress" scoped="" ref="0x2b10d9cd14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2b10d9cc1020" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2b10d9cc1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2b10d9cc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10d9caecb0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9caecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d9cad0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d9cad230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d9cad3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d9cad550"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d9cad6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d9cad870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b10d9d119f0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b10d9d119f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9d11d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2b10d9cae020" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2b10d9cae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9cae3a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9cae530"/>
        <function-ref name="modify" scoped="" ref="0x2b10d9cae6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9cae850"/>
        <function-ref name="resend" scoped="" ref="0x2b10d9cae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d9cb26c0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d9cb26c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d9cb2a40"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9cb2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b10d9cac190" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b10d9cac190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9cac510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10d9cef0c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10d9cef0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10d9cef440"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10d9cef5d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10d9cef760"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10d9cef8f0"/>
        <function-ref name="setCca" scoped="" ref="0x2b10d9cefa80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10d9cefc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b10d9ce6200" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b10d9ce6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9ce57c0"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9ce4020"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9ce5090"/>
        <function-ref name="set" scoped="" ref="0x2b10d9ce4750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b10d9d36990" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9d36990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d36d10"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b10d9d35380" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9d35380"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d35700"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d35890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2b10d9cee060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2b10d9cee060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9cee3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2b10d9d3ae60" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9d3ae60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9d38210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2b10d9ce21e0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2b10d9ce21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b10d9ce2560"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9ce26f0"/>
        <function-ref name="captured" scoped="" ref="0x2b10d9ce2880"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b10d9ce2a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2b10d9ced220" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2b10d9ced220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d9ceab30"/>
        <function-ref name="fired" scoped="" ref="0x2b10d9ceba60"/>
        <function-ref name="startAt" scoped="" ref="0x2b10d9cea4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d9cea020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b10d9ce9020"/>
        <function-ref name="start" scoped="" ref="0x2b10d9ceb090"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9ceb5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b10d9ce94d0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9ce94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9ce9850"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9ce99e0"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d9ce9b70"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9ce9d00"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d9ce8020"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9ce81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2b10d9d3cd80" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9d3cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d3b180"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d3b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2b10d9d3b6b0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9d3b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d3ba30"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d3bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2b10d9d2e780" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9d2e780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9d2eb00"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b10d9d2ec90"/>
        <function-ref name="sfd" scoped="" ref="0x2b10d9d2ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9cf03b0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9cf03b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9cf0730"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9cf08c0"/>
        <function-ref name="modify" scoped="" ref="0x2b10d9cf0a50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9cf0be0"/>
        <function-ref name="resend" scoped="" ref="0x2b10d9cf0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2b10d9d3d4e0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9d3d4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9d3d860"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9d3d9f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9d3db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2b10d9d385c0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9d385c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9d38940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b10d9d45080" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b10d9d45080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9d45400"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9d45590"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9d45720"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9d458b0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9d45a40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9d45bd0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9d45d60"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9d3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9cf1450" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9cf1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9cf17d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9ce84f0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9ce84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9ce8870"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9ce8a00"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9ce8b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b10d9d40570" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9d40570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9d408f0"/>
        <function-ref name="isSet" scoped="" ref="0x2b10d9d40a80"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9d40c10"/>
        <function-ref name="set" scoped="" ref="0x2b10d9d40da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2b10d9d38d00" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9d38d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d37410"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d375a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b10d9d3e6e0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b10d9d3e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9d3ea60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9d3ebf0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9d3ed80"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9d3d020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9d3d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2b10d9ce2d60" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2b10d9ce2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9ce1210"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9ce13a0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9ce1530"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9ce16c0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9ce1850"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9ce19e0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9ce1b70"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9ce1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b10d9d35bf0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9d35bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d34020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d341b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2b10d9d34530" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9d34530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d348b0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d34a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b10d9d3a020" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9d3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9d3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2b10d9d3f370" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2b10d9d3f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9d3f6f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9d3f880"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9d3fa10"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9d3fba0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9d3fd30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9d3e020"/>
        <function-ref name="set" scoped="" ref="0x2b10d9d3e1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9d3e340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d9d33110" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d9d33110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d9d33490"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d9d33620"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d9d337b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d9d33940"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d9d33ad0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9d33c60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d9d33df0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d9d324d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9d32020"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d9d321b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d9d32340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b10d9d360c0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9d360c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9d36440"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d365d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d9cf1ad0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d9cf1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d9cf1e50"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9cf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2b10d9d3c020" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9d3c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9d3c3a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9d3c530"/>
        <function-ref name="write" scoped="" ref="0x2b10d9d3c6c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9d3c850"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9d3c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2b10d9d3a730" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9d3a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9d3aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2b10d9d37930" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9d37930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9d37cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2b10d9cee7f0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2b10d9cee7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9ceeb70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b10d9dc8c60" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9dc8c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc7210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b10d9dd2020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b10d9dd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b10d9dccc70" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9dccc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dcb020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dcb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b10d9dc6670" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9dc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc69f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b10d9dc6e50" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b10d9dc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc5210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b10d9dba670" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9dba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dba9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b10d9dbd670" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9dbd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbd9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b10d9dd1370" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9dd1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b10d9dbe670" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9dbe670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbe9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b10d9dcbc60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d9dcbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc9020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b10d9dc9c60" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9dc9c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc8020"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b10d9dc2e50" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b10d9dc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc1210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b10d9dc5670" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9dc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc59f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9dd48f0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9dd48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9dd4c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9dd4e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9dd3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b10d9dd0d00" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9dd0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dce0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b10d9dce370" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9dce370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b10d9dceac0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9dceac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dcee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b10d9dbee50" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9dbee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbd210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b10d9dd0060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9dd0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd03e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b10d9dc9480" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9dc9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc9800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b10d9dcb480" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9dcb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dcb800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dcb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b10d9dd3940" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9dd3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd3cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b10d9dbbe50" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9dbbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dba210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b10d9dbde50" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9dbde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbb210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b10d9dc1670" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b10d9dc1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc19f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b10d9dbfe50" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9dbfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbe210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbe3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b10d9dc4670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9dc4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc49f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b10d9dbae50" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9dbae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9db9610"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9db97a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9db9930"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9db9ac0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9db9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b10d9dd32f0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9dd32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b10d9dcc490" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b10d9dcc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dcc810"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dcc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b10d9dc8480" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9dc8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc8800"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b10d9dc5e50" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9dc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc4210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b10d9dc7670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9dc7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc79f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b10d9dd2670" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d9dd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd29f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b10d9dc7e50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9dc7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc6210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9dd5c30" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9dd5c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9dd4020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9dd41b0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9dd4340"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9dd44d0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9dd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b10d9dcd160" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9dcd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dcd4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b10d9dcde00" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b10d9dcde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dcc1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b10d9dbf670" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d9dbf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbf9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b10d9dc0e50" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9dc0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbf210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b10d9dd06b0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9dd06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b10d9dc0670" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9dc0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc09f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b10d9dbb670" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b10d9dbb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dbb9f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dbbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b10d9dc1e50" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9dc1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc0210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b10d9dd2cc0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9dd2cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd10a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b10d9dc2670" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b10d9dc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc29f0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b10d9dd19c0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9dd19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dd1d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b10d9dc4e50" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9dc4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dc2210"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b10d9dcd7b0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9dcd7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dcdb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b10d9db8020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9db8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9db83a0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9db8530"/>
        <function-ref name="write" scoped="" ref="0x2b10d9db86c0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9db8850"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9db89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b10d9e14020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9e14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9e143a0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b10d9e14530"/>
        <function-ref name="sfd" scoped="" ref="0x2b10d9e146c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9e149a0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9e149a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9e14d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b10d9e131a0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b10d9e131a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9e13520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d9dae670" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d9dae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d9dae9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9daeb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2b10d9e0b380" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2b10d9e0b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9e0b700"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9e0b890"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9e0ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9e0bbb0"/>
        <function-ref name="get" scoped="" ref="0x2b10d9e0bd40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9e0a020"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e0a1b0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9e0a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b10d9e04b90" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b10d9e04b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b10d9e03020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b10d9e031b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b10d9e03340"/>
        <function-ref name="syncDone" scoped="" ref="0x2b10d9e034d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b10d9e03660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b10d9e037f0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b10d9e03980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b10d9e03b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b10d9e03ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b10d9e03e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b10d9e02020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b10d9e021b0"/>
        <function-ref name="sync" scoped="" ref="0x2b10d9e02340"/>
        <function-ref name="getChannel" scoped="" ref="0x2b10d9e025d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b10d9e02760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2b10d9ded9d0" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2b10d9ded9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9dedd50"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9dec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b10d9e02d70" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b10d9e02d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9e00330"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9e00a60"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9e01ba0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9dfe210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2b10d9e0a6b0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2b10d9e0a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9e0aa30"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9e0abc0"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9e0ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9e09020"/>
        <function-ref name="get" scoped="" ref="0x2b10d9e091b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9e09340"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e094d0"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9e09660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2b10d9dfdcb0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9dfdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfc0a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfc230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2b10d9dfc590" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9dfc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfc910"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfcaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2b10d9dfb6d0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9dfb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfba50"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfbbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b10d9e05330" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e05330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9e056b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9e05840"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d9e059d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9e05b60"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d9e05cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9e05e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2b10d9e0f6d0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2b10d9e0f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9e0fa50"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2b10d9e0fbe0"/>
        <function-ref name="sfd" scoped="" ref="0x2b10d9e0fd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2b10d9e063a0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9e063a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9e06720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2b10d9e0c020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2b10d9e0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b10d9e0c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b10d9e0c530"/>
        <function-ref name="toggle" scoped="" ref="0x2b10d9e0c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b10d9e0c850"/>
        <function-ref name="get" scoped="" ref="0x2b10d9e0c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b10d9e0cb70"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e0cd00"/>
        <function-ref name="clr" scoped="" ref="0x2b10d9e0b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2b10d9dfa020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9dfa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfa3a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfa530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9e12800" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9e12800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9e12b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9e041e0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e041e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9e04560"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9e046f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9e04880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9e0e080" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9e0e080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9e0e400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b10d9e086e0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b10d9e086e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9e08a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9e08bf0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9e08d80"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9e07020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9e071b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2b10d9dfce00" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9dfce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfb1c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2b10d9e07530" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9e07530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9e078b0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9e07a40"/>
        <function-ref name="write" scoped="" ref="0x2b10d9e07bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9e07d60"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9e06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2b10d9dfa8b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9dfa8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dfae30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2b10d9e0e820" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2b10d9e0e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2b10d9e0eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10d9df9150" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10d9df9150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10d9df94d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10d9df9660"/>
        <function-ref name="led1On" scoped="" ref="0x2b10d9df97f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10d9df9980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10d9df9b10"/>
        <function-ref name="get" scoped="" ref="0x2b10d9df9ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10d9df9e30"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10d9df84d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9df8020"/>
        <function-ref name="led0On" scoped="" ref="0x2b10d9df81b0"/>
        <function-ref name="led2On" scoped="" ref="0x2b10d9df8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2b10d9dfd3e0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9dfd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9dfd760"/>
        <function-ref name="write" scoped="" ref="0x2b10d9dfd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2b10d9dfeb10" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9dfeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9dfd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2b10d9e09a50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2b10d9e09a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b10d9e09dd0"/>
        <function-ref name="disable" scoped="" ref="0x2b10d9e08020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2b10d9e081b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2b10d9e08340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2b10d9e06ad0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9e06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9e05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b10d9e12e80" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b10d9e12e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b10d9e0f220"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9e0f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b10d9e60a70" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d9e60a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b10d9e60df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b10d9e64670" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9e649f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9e64b80"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d9e64d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9e61020"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d9e611b0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9e61340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b10d9e5f550" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e5f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9e5eb00"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9e5c2a0"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9e5e3d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e5c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b10d9e600c0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e600c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9e60440"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9e605d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9e60760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b10d9e57480" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9e57480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9e57800"/>
        <function-ref name="isSet" scoped="" ref="0x2b10d9e57990"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9e57b20"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e57cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b10d9e5b660" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d9e5b660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9e5ace0"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9e58460"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9e5a5b0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e58b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b10d9e616e0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b10d9e616e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10d9e61a60"/>
        <function-ref name="noAck" scoped="" ref="0x2b10d9e61bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10d9e61d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b10d9e51020" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b10d9e51020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b10d9e513a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2b10d9e56d20" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9e56d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9e530e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9e53270"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d9e53400"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9e53590"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d9e53720"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9e538b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b10d9eb34a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10d9eb34a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d9eb3820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d9eb39b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9eb3b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9eb3cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d9eb3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2b10d9e51a80" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2b10d9e51a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9e4e020"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9e4e750"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9e508d0"/>
        <function-ref name="set" scoped="" ref="0x2b10d9e4ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2b10d9e52640" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9e52640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9e529c0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9e52b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9e52ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b10d9eb48b0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b10d9eb48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9eb4c30"/>
        <function-ref name="isSet" scoped="" ref="0x2b10d9eb4dc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9eb3020"/>
        <function-ref name="set" scoped="" ref="0x2b10d9eb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2b10d9eb23b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2b10d9eb23b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9eb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b10d9eb16e0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b10d9eb16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9eaf3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b10d9e4daf0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b10d9e4daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b10d9eb50d0"/>
        <function-ref name="clear" scoped="" ref="0x2b10d9eb5800"/>
        <function-ref name="isValid" scoped="" ref="0x2b10d9e4c970"/>
        <function-ref name="set" scoped="" ref="0x2b10d9eb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b10d9e53c50" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b10d9e53c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10d9e52020"/>
        <function-ref name="noAck" scoped="" ref="0x2b10d9e521b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10d9e52340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b10d9ecdcf0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b10d9ecdcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9ecb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b10d9eca020" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b10d9eca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86ae020"/>
            <typename><typedef-ref name="T32khz" ref="0x2b10d86ae390"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b10d9ecae30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b10d9ec9800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b10d9ec9340"/>
        <function-ref name="overflow" scoped="" ref="0x2b10d9ec9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b10d9ec60b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b10d9ec60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b10d86af7d0"/>
            <typename><typedef-ref name="TMilli" ref="0x2b10d86afb40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b10d9ec2630"/>
        <function-ref name="fired" scoped="" ref="0x2b10d9ec4b00"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b10d9ec3920"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b10d9ec34a0"/>
        <function-ref name="getdt" scoped="" ref="0x2b10d9ec1020"/>
        <function-ref name="gett0" scoped="" ref="0x2b10d9ec2ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b10d9ec3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b10d9ec6ca0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b10d9ec2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b10d9ec41b0"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9ec4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2b10d9f1d620" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2b10d9f1d620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1dba0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2b10d9ebb940" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2b10d9ebb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9ebbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2b10d9f21620" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2b10d9f21620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f219a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f21b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2b10d9f1b060" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2b10d9f1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1b3e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1b570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2b10d9f1b840" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2b10d9f1b840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1bbc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1bd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2b10d9f0f060" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2b10d9f0f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f0f3e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f0f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2b10d9f12060" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2b10d9f12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f123e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f12570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2b10d9ebacc0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2b10d9ebacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2b10d9f13060" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2b10d9f13060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f133e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f13570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2b10d9f20620" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2b10d9f20620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f209a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f20b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2b10d9f1e620" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2b10d9f1e620"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1e9a0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2b10d9f17840" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2b10d9f17840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f17bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f17d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2b10d9f1a060" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2b10d9f1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1a3e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2b10d9ebc2b0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2b10d9ebc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2b10d9ebc630"/>
        <function-ref name="abortRelease" scoped="" ref="0x2b10d9ebc7c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2b10d9ebc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2b10d9eb76b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2b10d9eb76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2b10d9eb7d00" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2b10d9eb7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb61c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2b10d9eb6490" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2b10d9eb6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2b10d9f13840" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2b10d9f13840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f13bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f13d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2b10d9eb99c0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2b10d9eb99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2b10d9f20e00" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2b10d9f20e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1e1c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1e350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2b10d9f21e00" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2b10d9f21e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f201c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f20350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2b10d9ebb2f0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2b10d9ebb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9ebb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2b10d9f10840" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2b10d9f10840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f10bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f10d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2b10d9f12840" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2b10d9f12840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f12bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f12d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2b10d9f16060" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2b10d9f16060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f163e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f16570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2b10d9f14840" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2b10d9f14840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f14bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f14d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2b10d9f19060" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2b10d9f19060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f193e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f19570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2b10d9f0f840" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2b10d9f0f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9f0e020"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9f0e1b0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f0e340"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9f0e4d0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9f0e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2b10d9ebcc20" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2b10d9ebcc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9ebb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2b10d9f22e00" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2b10d9f22e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f211c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f21350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2b10d9f1ee00" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2b10d9f1ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1d1c0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1d350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2b10d9f1a840" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2b10d9f1a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1abc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2b10d9f1c060" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2b10d9f1c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1c3e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1c570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2b10d9eba020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2b10d9eba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2b10d9f1c840" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2b10d9f1c840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f1cbc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f1cd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9ebd520" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9ebd520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9ebd8a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9ebda30"/>
        <function-ref name="request" scoped="" ref="0x2b10d9ebdbc0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9ebdd50"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9ebc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2b10d9eb6ae0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2b10d9eb6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb6e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2b10d9f227b0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2b10d9f227b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9f22b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2b10d9f14060" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2b10d9f14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f143e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f14570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2b10d9f15840" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2b10d9f15840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f15bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f15d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2b10d9eb7060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2b10d9eb7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb73e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2b10d9f15060" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2b10d9f15060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f153e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f15570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2b10d9f10060" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2b10d9f10060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f103e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f10570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2b10d9f16840" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2b10d9f16840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f16bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f16d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2b10d9eba670" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2b10d9eba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eba9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2b10d9f17060" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2b10d9f17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f173e0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f17570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2b10d9eb9370" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2b10d9eb9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9eb96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2b10d9f19840" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2b10d9f19840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2b10d9f19bc0"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f19d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2b10d9f22160" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2b10d9f22160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2b10d9f224e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2b10d9f0e930" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2b10d9f0e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2b10d9f0ecb0"/>
        <function-ref name="writeDone" scoped="" ref="0x2b10d9f0ee40"/>
        <function-ref name="write" scoped="" ref="0x2b10d9f0d020"/>
        <function-ref name="beginRead" scoped="" ref="0x2b10d9f0d1b0"/>
        <function-ref name="readDone" scoped="" ref="0x2b10d9f0d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b10d9f58a20" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b10d9f58a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b10d9f58da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b10d9f57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b10d9f56920" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b10d9f56920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f58560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9f5d9a0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9f5d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f5dd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b10d9f52a20" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b10d9f52a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b10d9f52da0"/>
        <function-ref name="rand32" scoped="" ref="0x2b10d9f51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b10d9f53940" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b10d9f53940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f52560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9f53080" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9f53080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f53400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10d9f5baa0" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9f5baa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9f5be20"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9f44020"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9f441b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9f44340"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9f444d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9f44660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10d9f3a020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10d9f3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9f3a3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f3a530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9f3a6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9f3a850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9f3a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9f3b220" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9f3b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9f3b5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f3b730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9f3b8c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9f3ba50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9f3bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10d9f36e60" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10d9f36e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9f35210"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f353a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9f35530"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9f356c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9f35850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9f39a20" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9f39a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9f39da0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f36020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9f361b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9f36340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9f364d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b10d9f348f0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b10d9f348f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b10d9f34c70"/>
        <function-ref name="rand32" scoped="" ref="0x2b10d9f34e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9f36750" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9f36750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f36ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9f33170" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9f33170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f334f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9f33680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9f33810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2b10d9f35ae0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9f35ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9f35e60"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9f34020"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9f341b0"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9f34340"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9f344d0"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9f34660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10d9f37690" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10d9f37690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9f37a10"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9f37ba0"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9f37d30"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9f91020"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9f911b0"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9f91340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10d9f8b950" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10d9f8b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f8bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9f8eaa0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9f8eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f8ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b10d9f8b200" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b10d9f8b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f8b580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10d9f853f0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10d9f853f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f85770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9f86b70" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9f86b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9f85020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9f89e30" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9f89e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f861e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9f85a70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9f85a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9f85df0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9f84020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9f841b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2b10d9f86570" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2b10d9f86570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9f868f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10d9fc7020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fc7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fc73a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10d9fc76b0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10d9fc76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fc7a30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fc7bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fc7d50"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fc6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fc61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9fcb960" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9fcb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fcbce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fcbe70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fca030"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fca1c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fca350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b10d9fcaca0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b10d9fcaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fc90a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fc9230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fc93c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fc9550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fc96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9fca5f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9fca5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fca970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9fcccb0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9fcccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9fcb0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9fcb230"/>
        <function-ref name="request" scoped="" ref="0x2b10d9fcb3c0"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9fcb550"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9fcb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b10d9fc9a50" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9fc9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fc9dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b10d9fc8170" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b10d9fc8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d9fc84f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d9fc8680"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fc8810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fc89a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d9fc8b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10d9fbdd70" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10d9fbdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fbc180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fbc310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fbc4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fbc630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fbc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10d9fbcb10" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2b10d9ffedb0" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2b10d9ffedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10d9ffc180"/>
        <function-ref name="runTask" scoped="" ref="0x2b10d9ffc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b10d9fbb2f0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10d9fbb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10d9fbb670"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10d9fbb800"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10d9fbb990"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10d9fbbb20"/>
        <function-ref name="getPower" scoped="" ref="0x2b10d9fbbcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10d9fbbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2b10d9fbfa20" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2b10d9fbfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fbfda0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fbe020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fbe1b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fbe340"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b10d9fbab70" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b10d9fbab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10d9fb9020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10d9fb91b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10d9fb9340"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10d9fb94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10d9fba170" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10d9fba170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fba4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10d9fba680"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10d9fba810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b10d9fbf370" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b10d9fbf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fbf6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b10d9fc17b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b10d9fc17b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10d9fc1b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10d9fc1cc0"/>
        <function-ref name="request" scoped="" ref="0x2b10d9fc1e50"/>
        <function-ref name="granted" scoped="" ref="0x2b10d9fc0020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10d9fc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b10d9fc04d0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b10d9fc04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fc0850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fc09e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fc0b70"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fc0d00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fbf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2b10d9fbe840" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2b10d9fbe840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fbebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2b10d9fbd020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2b10d9fbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10d9fbd3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10d9fbd530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fbd6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fbd850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10d9fbd9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b10d9fdddd0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b10d9fdddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b10d9fdc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b10d9fdc410" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b10d9fdc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b10d9fdc790"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b10d9fdc920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b10d9fdcab0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b10d9fdcc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b10d9fd1b80" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b10d9fd1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10d9fd0020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10d9fd01b0"/>
        <function-ref name="start" scoped="" ref="0x2b10d9fd0340"/>
        <function-ref name="stop" scoped="" ref="0x2b10d9fd04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10d9fcf860" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10d9fcf860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fcfbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fcfd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fce020"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fce1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10d9fce690" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10d9fce690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fcea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10d9fd5cf0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10d9fd5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10d9fd20a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10d9fd2230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10d9fd23c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10d9fd2550"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10d9fd26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b10d9fd1080" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b10d9fd1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b10d9fd1400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b10d9fd1590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b10d9fd1720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b10d9fd18b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2b10d9fd0800" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2b10d9fd0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10d9fd0b80"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10d9fd0d10"/>
        <function-ref name="isState" scoped="" ref="0x2b10d9fcf020"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10d9fcf1b0"/>
        <function-ref name="requestState" scoped="" ref="0x2b10d9fcf340"/>
        <function-ref name="forceState" scoped="" ref="0x2b10d9fcf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b10d9fced90" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b10d9fced90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b10da03e180"/>
        <function-ref name="stopDone" scoped="" ref="0x2b10da03e310"/>
        <function-ref name="start" scoped="" ref="0x2b10da03e4a0"/>
        <function-ref name="stop" scoped="" ref="0x2b10da03e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10d9fd2980" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10d9fd2980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10d9fd2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b10da03b2d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b10da03b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b10da03b650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b10da03b7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b10da03b970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b10da03bb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2b10da03d580" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2b10da03d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2b10da03d900"/>
        <function-ref name="toIdle" scoped="" ref="0x2b10da03da90"/>
        <function-ref name="isState" scoped="" ref="0x2b10da03dc20"/>
        <function-ref name="isIdle" scoped="" ref="0x2b10da03ddb0"/>
        <function-ref name="requestState" scoped="" ref="0x2b10da03c020"/>
        <function-ref name="forceState" scoped="" ref="0x2b10da03c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10da02dd70" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10da02dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da02c180"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da02c310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da02c4a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da02c630"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da02c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10da030350" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10da030350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da0306d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da030860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da0309f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da030b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da030d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b10da02d020" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b10da02d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b10da02d3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b10da02d530"/>
        <function-ref name="getRetries" scoped="" ref="0x2b10da02d6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b10da02d850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b10da02d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b10da0281c0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b10da0281c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10da028540"/>
        <function-ref name="noAck" scoped="" ref="0x2b10da0286d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10da028860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b10da02b410" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b10da02b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b10da02b790"/>
        <function-ref name="setRetries" scoped="" ref="0x2b10da02b920"/>
        <function-ref name="getRetries" scoped="" ref="0x2b10da02bab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b10da02bc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b10da02bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b10da008690" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b10da008690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10da008a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b10da009860" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b10da009860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da009be0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da009d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da008020"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da0081b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da008340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2b10da077610" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2b10da077610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2b10da077990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2b10da077b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2b10da077cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x2b10da077e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2b10da076020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2b10da0761b0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b10da076340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2b10da0764d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2b10da076660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2b10da0767f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2b10da076980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2b10da076b10"/>
        <function-ref name="sync" scoped="" ref="0x2b10da076ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b10da075020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2b10da0751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2b10da00a8b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2b10da00a8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10da00ac30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10da00adc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10da009020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10da0091b0"/>
        <function-ref name="setCca" scoped="" ref="0x2b10da009340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10da0094d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b10da00bce0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b10da00bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b10da00a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2b10da0741f0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2b10da0741f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2b10da074570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2b10da074700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2b10da074890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2b10da074a20"/>
        <function-ref name="setCca" scoped="" ref="0x2b10da074bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2b10da074d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10da00ca80" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10da00ca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10da00ce00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10da00b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da00b1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da00b340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10da00b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10da010020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10da010020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da0103a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da010530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da0106c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da010850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da0109e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b10da00edf0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b10da00edf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10da00d1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2b10da008ce0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2b10da008ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2b10da0060a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2b10da006230"/>
        <function-ref name="getRssi" scoped="" ref="0x2b10da0063c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x2b10da006550"/>
        <function-ref name="getPower" scoped="" ref="0x2b10da0066e0"/>
        <function-ref name="getLqi" scoped="" ref="0x2b10da006870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b10da0754d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b10da0754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b10da075950"/>
        <function-ref name="changed" scoped="" ref="0x2b10da075ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b10da075c70"/>
        <function-ref name="setAddress" scoped="" ref="0x2b10da075e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2b10da006b70" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2b10da006b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2b10da077020"/>
        <function-ref name="getHeader" scoped="" ref="0x2b10da0771b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2b10da077340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10da00e210" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10da00e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10da00e590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b10da073d30" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b10da073d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b10da0720e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b10da072270"/>
        <function-ref name="led1On" scoped="" ref="0x2b10da072400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b10da072590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b10da072720"/>
        <function-ref name="get" scoped="" ref="0x2b10da0728b0"/>
        <function-ref name="led1Off" scoped="" ref="0x2b10da072a40"/>
        <function-ref name="led2Off" scoped="" ref="0x2b10da0711b0"/>
        <function-ref name="set" scoped="" ref="0x2b10da072bd0"/>
        <function-ref name="led0On" scoped="" ref="0x2b10da072d60"/>
        <function-ref name="led2On" scoped="" ref="0x2b10da071020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10da00d470" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10da00d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10da00d7f0"/>
        <function-ref name="source" scoped="" ref="0x2b10da00d980"/>
        <function-ref name="address" scoped="" ref="0x2b10da00db10"/>
        <function-ref name="destination" scoped="" ref="0x2b10da00dca0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10da00de30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10da00c020"/>
        <function-ref name="type" scoped="" ref="0x2b10da00c1b0"/>
        <function-ref name="setType" scoped="" ref="0x2b10da00c340"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10da00c4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10da00c660"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10da00c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2b10da0730f0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2b10da0730f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b10da073470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b10da073600"/>
        <function-ref name="request" scoped="" ref="0x2b10da073790"/>
        <function-ref name="granted" scoped="" ref="0x2b10da073920"/>
        <function-ref name="isOwner" scoped="" ref="0x2b10da073ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10da137020" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10da137020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da1373a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da137530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da1376c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da137850"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da1379e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10da137c30" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10da137c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10da136020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10da1361b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da136340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da1364d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10da136660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10da1368b0" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10da1368b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10da136c30"/>
        <function-ref name="source" scoped="" ref="0x2b10da136dc0"/>
        <function-ref name="address" scoped="" ref="0x2b10da135020"/>
        <function-ref name="destination" scoped="" ref="0x2b10da1351b0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10da135340"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10da1354d0"/>
        <function-ref name="type" scoped="" ref="0x2b10da135660"/>
        <function-ref name="setType" scoped="" ref="0x2b10da1357f0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10da135980"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10da135b10"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10da135ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b10da134020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b10da134020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10da1343a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b10da134530"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10da1346c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10dac28850" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10dac28850"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10dac28bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10dac28d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10dac27020"/>
        <function-ref name="cancel" scoped="" ref="0x2b10dac271b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10dac27340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10dac27590" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10dac27590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10dac27910"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10dac27aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10dac27c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10dac27dc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10dac26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10dac26270" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10dac26270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10dac265f0"/>
        <function-ref name="source" scoped="" ref="0x2b10dac26780"/>
        <function-ref name="address" scoped="" ref="0x2b10dac26910"/>
        <function-ref name="destination" scoped="" ref="0x2b10dac26aa0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10dac26c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10dac26dc0"/>
        <function-ref name="type" scoped="" ref="0x2b10dac25020"/>
        <function-ref name="setType" scoped="" ref="0x2b10dac251b0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10dac25340"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10dac254d0"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10dac25660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b10dac258f0" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b10dac258f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b10dac25c70"/>
        <function-ref name="noAck" scoped="" ref="0x2b10dac25e00"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b10dac24020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b10dac1b390" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10dac1b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10dac1b710"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10dac1b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10dac1ba30"/>
        <function-ref name="cancel" scoped="" ref="0x2b10dac1bbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10dac1bd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b10dac1a060" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10dac1a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10dac1a3e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10dac1a570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10dac1a700"/>
        <function-ref name="cancel" scoped="" ref="0x2b10dac1a890"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10dac1aa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b10dac1ac70" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="EndDeviceAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10dac1ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10dac19020"/>
        <function-ref name="source" scoped="" ref="0x2b10dac191b0"/>
        <function-ref name="address" scoped="" ref="0x2b10dac19340"/>
        <function-ref name="destination" scoped="" ref="0x2b10dac194d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10dac19660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10dac197f0"/>
        <function-ref name="type" scoped="" ref="0x2b10dac19980"/>
        <function-ref name="setType" scoped="" ref="0x2b10dac19b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10dac19ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10dac19e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10dac18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10da123940" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10da123940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da123cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da123e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da120020"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da1201b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da120340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b10da14c400" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b10da14c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da14c7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da14c930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da14cac0"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da14cc50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da14cde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b10da14d4b0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b10da14d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b10da14d850"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da14d9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da14db70"/>
        <function-ref name="cancel" scoped="" ref="0x2b10da14dd00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b10da14c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b10da14a720" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10da14a720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10da14aaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10da14ac30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da14adc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da149020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10da1491b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b10da149480" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b10da149480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da149800"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da149990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b10da149c60" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b10da149c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b10da147020"/>
        <function-ref name="runTask" scoped="" ref="0x2b10da1471b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b10da14b060" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10da14b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10da14b3e0"/>
        <function-ref name="source" scoped="" ref="0x2b10da14b570"/>
        <function-ref name="address" scoped="" ref="0x2b10da14b700"/>
        <function-ref name="destination" scoped="" ref="0x2b10da14b890"/>
        <function-ref name="setSource" scoped="" ref="0x2b10da14ba20"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10da14bbb0"/>
        <function-ref name="type" scoped="" ref="0x2b10da14bd40"/>
        <function-ref name="setType" scoped="" ref="0x2b10da14a020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10da14a1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10da14a340"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10da14a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b10da12a020" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="EndDeviceAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b10da12a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b10da12a3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b10da12a530"/>
        <function-ref name="getPayload" scoped="" ref="0x2b10da12a6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b10da12a850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b10da12a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b10da12b910" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="EndDeviceAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b10da12b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b10da12bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b10da12ac30" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="EndDeviceAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b10da12ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b10da129020"/>
        <function-ref name="source" scoped="" ref="0x2b10da1291b0"/>
        <function-ref name="address" scoped="" ref="0x2b10da129340"/>
        <function-ref name="destination" scoped="" ref="0x2b10da1294d0"/>
        <function-ref name="setSource" scoped="" ref="0x2b10da129660"/>
        <function-ref name="setDestination" scoped="" ref="0x2b10da1297f0"/>
        <function-ref name="type" scoped="" ref="0x2b10da129980"/>
        <function-ref name="setType" scoped="" ref="0x2b10da129b10"/>
        <function-ref name="isForMe" scoped="" ref="0x2b10da129ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b10da129e30"/>
        <function-ref name="localGroup" scoped="" ref="0x2b10da19f020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b10d88210b0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d8810e00" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b10d88205c0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d8820340" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b10d8810420" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8821900" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b10d8773a20" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2b10d87ec490" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d87ec210" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b10d87fc550" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d87fc2d0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b10d87fa890" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d87fa290" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d87fa5c0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b10d87f9960" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b10d87fba00" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d87fb440" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d87fb770" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d8807410" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b10d87efaa0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b10d87efe20" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8807170" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b10d8815a40" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d8815440" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8815770" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b10d8814b80" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d8818790" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d8818510" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b10d8816cb0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d88166d0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b10d8816a20" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b10d8782dc0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b10d8782dc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b10d87956c0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b10d8794440" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b10d8782dc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8795e40" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b10d87941b0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b10d8782dc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b10d881e980" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
              <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d881e020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b10d881e370" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d881e6a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b10d878d120" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b10d878d8d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b10d878c0e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b10d878b070" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b10d87897d0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b10d8788020" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b10d878c870" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d8788b90" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b10d8788910" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b10d877e970" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b10d878b850" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b10d8789020" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b10d880e4a0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d880e220" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b10d8805020" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d8806c60" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b10d87f7350" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b10d87f7e10" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d87f7b90" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b10d8802960" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d8802380" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b10d88026d0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b10d8804410" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d8805e10" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b10d8804180" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b10d87ffdc0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d87ffb40" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b10d880f2b0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d8801be0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b10d880f020" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b10d87d61b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b10d8800bc0" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d8800940" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b10d880c960" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b10d880c380" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b10d880c6d0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b10d880a7a0" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8772bc0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8772bc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b10d8779980" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b10d877d1f0" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b10d877a020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b10d877b9a0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b10d877bce0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b10d877b1f0" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b10d8778a10" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b10d8778190" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b10d877d9d0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b10d876f750" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b10d876f4d0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b10d8779020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b10d877a9c0" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b10d877ad00" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b10d876e2a0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b10d876e020" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d876eaa0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intersema" loc="34:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <short> Copyright (c) 2009, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2009, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Zoltan Kincses&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b10d879bb50" loc="35:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b10d879a8a0" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
        <interfacedef-ref qname="Intersema"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x2b10d7ca9020"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d879a260" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="mesResult" ref="0x2b10d879a610" loc="36:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Intersema.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="short" size="I:2" alignment="I:1">
                <typename><typedef-ref name="int16_t" ref="0x2b10d7ca9020"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b10d885fe40" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b10d8867b70" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b10d88678f0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b10d886a020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b10d886aaa0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b10d886a820" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b10d88685e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b10d8868360" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b10d8867020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b10d887e190" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b10d887e8c0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b10d8880350" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b10d887d760" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b10d8880a50" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b10d887d020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d886d520" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b10d886dbf0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b10d86240e0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b10d862d0e0" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b10d8624850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b10d862f190" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b10d862f9e0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b10d86f9420" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b10d87121f0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b10d868f1b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b10d8714390" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8a7b100" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8a7b100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b10d8a7ba20" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8a88da0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8a88da0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b10d8a85020" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a85020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b10d8a85940" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a85020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b10d8a84a50" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b10d8a841f0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b10d8a821f0" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d8a76610" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d8a76610"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b10d8a76850" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b10d8a6f420" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b10d8a72420" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b10d8a70a20" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b10d8a70450" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b10d8a70790" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b10d8a72c00" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b10d8a6fc10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b10d8a733f0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b10d8a73170" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8a76850"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8a73c20" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2b10d8aad8d0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86bce50"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b10d86bb2b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b10d8aabe00" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c8850"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b10d86c8c70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b10d8aacb60" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86cb020"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b10d86cb440"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b10d8aab5f0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86cb020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b10d86cb440"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b10d8aab370" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86cb020"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2b10d86cb440"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b10d8aa98a0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c8850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b10d86c8c70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b10d8aa9620" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c8850"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2b10d86c8c70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2b10d8aac350" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86bce50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b10d86bb2b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b10d8aac0d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86bce50"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2b10d86bb2b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2b10d8ab77e0" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2b10d8ab6030" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2b10d8ab7070" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b10d8ab6840" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b10d8abbd70" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c2780"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2b10d86c2ba0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b10d8ab87e0" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c2780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b10d86c2ba0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b10d8ab8560" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86c2780"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2b10d86c2ba0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b10d8aae740" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8aae740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b10d8abe0e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b10d8ac1270" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b10d8aa60e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8aae740"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b10d8ac19e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b10d8abe8a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d8aa6aa0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8aae740"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b10d8aa6820" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8aae740"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b10d8ac0190" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8ac08e0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b10d8aa1a20" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8aa1a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b10d8a992d0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b10d8a9a350" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b10d8a9e390" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8aa1a20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b10d8a99cb0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b10d8a99a30" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b10d8ab3510" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b10d8a9dc90" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b10d8a9d500" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b10d8a9ab10" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d8a9ed40" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8aa1a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b10d8a9eac0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b10d8aa1a20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b10d8a9b420" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8a9bb70" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b10d8c19a40" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8c38270" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b10d8c2f930" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b10d8c2f6b0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d8c36c60" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b10d8c369e0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b10d8c33b10" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b10d8c33520" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b10d8c33880" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d8c445f0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b10d8c44020" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8c44360" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b10d8c3e390" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b10d8c3e110" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b10d8c3d2b0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b10d8c3eb90" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8c3d020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b10d8c40020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b10d8c3cbb0" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b10d8c3c280" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8c3c5c0" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b10d8c3c910" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b10d8c40910" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b10d8c41020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b10d8c42570" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d8c428b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b10d8c42c00" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b10d8c6c530" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b10d8c6d610" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b10d8c69d70" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d8c69af0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b10d8c6ace0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b10d8c4b6b0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b10d8c4be40" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b10d8c6dda0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b10d8c6cc70" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b10d8c6a5f0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d8c6a370" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b10d8c69420" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b10d8d3c020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86eac80"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b10d86e90d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2b10d8d40a90" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86d4e50"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b10d86d22b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b10d8d40810" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86d4e50"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b10d86d22b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b10d8d3ed20" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86df770"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b10d86dfb90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2b10d8d42350" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86ce750"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b10d86ceb70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b10d8d3d780" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86df770"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b10d86dfb90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b10d8d3d500" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86df770"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2b10d86dfb90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b10d8d3ca60" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86eac80"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b10d86e90d0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b10d8d3c7e0" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86eac80"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2b10d86e90d0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2b10d8d41420" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86dc3c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b10d86dc7e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2b10d8d42bc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86d4e50"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2b10d86d22b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2b10d8d40020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86ce750"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b10d86ceb70"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b10d8d41c10" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86ce750"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2b10d86ceb70"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2b10d8d3e500" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86dc3c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b10d86dc7e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b10d8d3e280" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b10d86dc3c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2b10d86dc7e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b10d8d438a0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b10d8d596a0" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b10d8d59420" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b10d8d5b4c0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b10d8d39270" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b10d8d5d670" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b10d8d5d3f0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b10d8d5de20" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b10d8d5bc80" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d8d39c10" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b10d8d39990" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d8d438a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b10d8d5c5d0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d8d5cd20" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x2b10d8e59270" loc="41:/opt/tinyos-2.1.2/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x2b10d8e6c6a0" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8e6c0d0" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b10d8e6c410" loc="84:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x2b10d8e6b020" loc="92:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x2b10d8e6d8b0" loc="76:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x2b10d8e6e270" loc="61:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x2b10d8e698e0" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b10d8e69660" loc="109:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b10d8e70020" loc="47:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x2b10d8e683d0" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8e68150" loc="116:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x2b10d8e6be10" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8e6b850" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b10d8e6bb80" loc="100:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x2b10d8e709f0" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8e70770" loc="54:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x2b10d8e6d050" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b10d8e6ea60" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2b10d8e6eda0" loc="69:/opt/tinyos-2.1.2/tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b10d8e749c0" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b10d8e75990" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b10d8e75020" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b10d8e741f0" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b10d8e73470" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b10d8ed5b10" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b10d8ed5350" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2b10d8eabb70" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2b10d8eab2b0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x2b10d8f733e0" loc="20:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b10d8f89020" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b10d8f88ac0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b10d8f8a780" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2b10d8f882a0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2b10d8f88020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b10d8f8a020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b10d8f897d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2b10d8f7b680" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Channel" loc="38:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <short>&#10; Open or close a channel and retrieve the open status of the channel.</short>
        <long>&#10; Open or close a channel and retrieve the open status of the channel.&#10; &#10; @author Danny Park&#10;</long>
      </documentation>
      <function command="" provided="0" name="open" ref="0x2b10d900ae10" loc="44:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Open the channel.</short>
          <long>&#10; Open the channel.&#10; &#10; @return SUCCESS if the openDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOpen" ref="0x2b10d903bd90" loc="58:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Determine if the channel is open.</short>
          <long>&#10; Determine if the channel is open.&#10; &#10; @return TRUE if the channel is open, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="openDone" ref="0x2b10d90397b0" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been opened.</short>
          <long>&#10; Notify the caller that the channel has been opened.&#10; &#10; @param error SUCCESS if the channel was opened without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d9039530" loc="65:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="closeDone" ref="0x2b10d90382a0" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Notify the caller that the channel has been closed.</short>
          <long>&#10; Notify the caller that the channel has been closed.&#10; &#10; @param error SUCCESS if the channel was closed without any problems.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d9038020" loc="72:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x2b10d903b610" loc="51:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Channel.nc">
          <short>&#10; Close the channel.</short>
          <long>&#10; Close the channel.&#10; &#10; @return SUCCESS if the closeDone event will fire in the future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Channel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b10d906c540" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b10d906ce70" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b10d9061510" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b10d9065cc0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b10d9068420" loc="56:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x2b10d9067500" loc="73:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b10d903cb50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b10d9068c90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b10d9067e30" loc="81:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b10d9069b90" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b10d9063420" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b10d9058540" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b10d90625e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b10d90582c0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b10d90625e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b10d905a560" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b10d90590b0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b10d90625e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b10d905ade0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b10d90625e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b10d90599c0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b10d90625e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x2b10d90ee420" loc="62:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x2b10d9130020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x2b10d9130020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2b10d912f650" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b10d9131020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b10d9130930" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b10d9131020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b10d9130c80" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b10d912f020" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d912f3a0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b10d91270e0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d91293a0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b10d91296f0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b10d9129a40" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d9129dc0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d912c650" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b10d9131020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b10d912d830" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x2b10d9131020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b10d912db80" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b10d912c020" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d912c3a0" loc="92:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b10d912b430" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d912a720" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b10d912aa70" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x2b10d912adc0" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d912b180" loc="102:/opt/tinyos-2.1.2/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b10d91b6ab0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b10d91b3350" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x2b10d91d0900" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x2b10d923bd00" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x2b10d9239490" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x2b10d9238580" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b10d9238300" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x2b10d923b5e0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x2b10d9235e40" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b10d9230be0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b10d9234830" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b10d92345b0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b10d922e450" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b10d923c7a0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x2b10d923c520" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x2b10d9235710" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x2b10d9235490" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b10d9233120" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x2b10d9238cc0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b10d9232120" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x2b10d9239be0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2b10d92304a0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b10d9230220" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d922fd00" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d922fa80" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x2b10d9233920" loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x2b10d923ce70" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x2b10d9237650" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b10d92373d0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x2b10d9232b40" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b10d92328c0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b10d922f390" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x2b10d9237d80" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Calibration" loc="47:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
      <function command="" provided="0" name="getData" ref="0x2b10d93391f0" loc="48:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b10d9338020" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
        <interfacedef-ref qname="Calibration"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d93398b0" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
          <variable name="calibration" ref="0x2b10d9339c80" loc="49:/opt/tinyos-2.1.2/tos/sensorboards/mts400/Calibration.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b10d9543420" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b10d95446d0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b10d9544a50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b10d9544dd0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b10d9543170" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d9540020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b10d95415f0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9541020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b10d9541360" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x2b10d95b1b60" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b10d95b4e20" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x2b10d95b11c0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x2b10d95b1540" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x2b10d95b18b0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b10d95afb90" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d95b0a40" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x2b10d95b0d80" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x2b10d95af110" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x2b10d95af4f0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x2b10d95af8d0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x2b10d95e79c0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x2b10d95ee4c0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86ade70"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x2b10d86ac360"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x2b10d95e4d90" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b10d95e4b10" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x2b10d95e52b0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x2b10d95eb350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x2b10d95ed020" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86ade70"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b10d86ac360"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x2b10d95eeca0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86ade70"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x2b10d86ac360"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x2b10d95e92b0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x2b10d95e42b0" loc="133:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d95e35d0" loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x2b10d95ebab0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x2b10d95e8270" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x2b10d95e9a60" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x2b10d95e8a00" loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x2b10d95e5a80" loc="127:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x2b10d95ec2e0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86b2ad0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b10d86b0230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x2b10d95ec060" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86b2ad0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b10d86b0230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x2b10d95e7270" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x2b10d95ed860" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x2b10d86b2ad0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x2b10d86b0230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2b10d95ecaf0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b10d95e22a0" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d95e2020" loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b10d9689ac0" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b10d9689ac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b10d9689d00" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d9689d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b10d96cab40" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d9689d00"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96ca8c0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b10d96c9cc0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96c9a40" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b10d96cd8e0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96cd660" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d96c7020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d9689d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96c89e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b10d96c8d40" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b10d9689d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b10d96bc030" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96bd9e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b10d96bdd70" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b10d96bb2a0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96bb020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b10d96bd1f0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b10d96be7f0" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b10d96be570" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b10d968ae20" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d968aba0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b10d96d10b0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96d3dc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b10d96cf2a0" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96cf020" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2b10d96e0430" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96e01b0" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2b10d96e3720" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96e34a0" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2b10d96e5dc0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b10d96e5b40" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2b10d96e52a0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2b10d96e5020" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2b10d96e4880" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2b10d96e4600" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2b10d96e15e0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96e1360" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b10d96d4e60" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b10d96d4850" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b10d96d4bd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2b10d96ef0c0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96f0aa0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2b10d96f0df0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2b10d96eb6d0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96eb0d0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2b10d96eb440" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2b10d96efba0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2b10d7ca8290"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96ef920" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2b10d96ec600" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96ec380" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2b10d96f02a0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96f0020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2b10d96ee720" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d96ee4a0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b10d96d8630" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96d83b0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b10d96dc6f0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96dc0d0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b10d96dc460" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b10d96da5f0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96da370" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b10d96dbaf0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96db4d0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b10d96db860" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b10d96d7630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96d73b0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b10d96e80b0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d96f1de0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d9718930" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9718370" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d97186a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b10d9712160" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9713ae0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d9713e10" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b10d9713270" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d9716c40" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d97169c0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b10d9714360" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9717d10" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b10d97140d0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d9741900" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d9741340" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2b10d9741670" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d9740c10" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2b10d973c410" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b10d973d5e0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2b10d973de20" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d973c170" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b10d973fdc0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2b10d973f7e0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b10d973fb30" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2b10d97403d0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2b10d9740150" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b10d9739820" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b10d9739020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2b10d9733ae0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9733820" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2b10d9733020" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2b10d87a2aa0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2b10d879f440"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9735be0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2b10d9732de0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2b10d879e020"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2b10d87ad8c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9732ae0" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2b10d96fa4c0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2b10d9746530" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2b10d9747d10" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2b10d96ffb70" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2b10d96fbbe0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2b10d96fad30" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2b10d9747540" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2b10d96fb420" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2b10d972c420" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2b10d972ea10" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2b10d972dc10" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2b10d972d990" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2b10d972d1f0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2b10d972f730" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b10d972f4b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2b10d972e2a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2b10d972e020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2b10d97bd020" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2b10d976f9f0" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2b10d976fd40" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2b10d9770960" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2b10d9770020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2b10d9771820" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2b10d9771c00" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2b10d97762a0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b10d9776020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2b10d976f270" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2b10d9773d70" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b10d9773af0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b10d97753e0" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b10d9775160" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2b10d97bc270" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2b10d9771020" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b10d9772c50" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2b10d97bda20" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2b10d9775b60" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b10d96b8670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b10d96b8dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2b10d9773390" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2b10d9777850" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b10d97769f0" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2b10d9772530" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b10d9799a70" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d97997f0" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d97985c0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9798340" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2b10d97ad640" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2b10d96b8670"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2b10d96b8dd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b10d97a1420" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b10d97a0390" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b10d97a1c00" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b10d97a3b80" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b10d97a35a0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b10d87d6590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b10d97a38f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b10d87d6970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2b10d97e4c50" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2b10d979ec00" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b10d97a5d80" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d979e610" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d979e960" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d979b3b0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2b10d979c530" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b10d979cda0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d979b110" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b10d9a11190" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b10d9a0f350" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b10d9a11b30" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b10d9a118b0" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b10d99bb900" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2b10d9a302b0" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2b10d9a30b00" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2b10d9a2f390" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2b10d9a6a2b0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9a6bc60" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d9a6a020" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2b10d9a65610" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9a66be0" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d9a65020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b10d9a65370" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d9a68e40" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9a68860" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d9a68bb0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2b10d9a6de40" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2b10d8797c70"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9a6d860" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d9a6dbb0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2b10d9a69a10" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9a690d0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b10d9a69420" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b10d9a69770" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b10d9a4b990" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b10d9a4b020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b10d9a4b3b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d9a4b6f0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b10d9a47020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b10d9a4a1d0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b10d9a4a560" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b10d9a4a8a0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b10d7ca95a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b10d9a4ac10" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b10d9a4d8f0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b10d9a4d670" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b10d9acb2a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9acb020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b10d9aca680" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9aca400" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b10d9acbb10" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d9b262a0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9b26020" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b10d9b120e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b10d9b08070" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b10d9b0da00" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b10d9b08a90" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b10d9b08810" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b10d9b148f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b10d9b0b5c0" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b10d9b0b340" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b10d9b0e020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b10d9b10cf0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b10d9b11070" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b10d9b034e0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b10d9b03260" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b10d9b0e7c0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b10d9b07c10" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b10d9b07990" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b10d9b06b70" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b10d9b098a0" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b10d9b09620" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b10d9b04b10" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b10d9b0c3f0" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b10d9b0c170" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b10d9b11a50" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9b117d0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b10d9b0d2a0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b10d9b0d020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b10d9b0be30" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b10d9b07270" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b10d9b06390" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b10d9b04350" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b10d9b0cb70" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b10d9b12870" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b10d9b104d0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b10d9b10250" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2b10d9d115e0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b10d9d2e420" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2b10d9d2fa20" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2b10d9d2e190" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2b10d9d2f270" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2b10d9d31a00" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b10d9d31780" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b10d7caa090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2b10d9d44cb0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b10d7ca8a90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9d44a30" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b10d9ce3ca0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b10d8627020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9ce3a20" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b10d9d42c80" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9d42a00" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b10d9d43ca0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b10d9d43a20" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b10d87ee3c0"/>
                <typename><typedef-ref name="message_t" ref="0x2b10d87eda00"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b10d9f59600" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b10d9f59600"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b10d9f562a0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b10d86299e0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b10d9f59600"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b10d9f56020" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b10d9f59600"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
